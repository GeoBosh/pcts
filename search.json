[{"path":"https://geobosh.github.io/pcts/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Georgi N. Boshnakov. Author, maintainer.","code":""},{"path":"https://geobosh.github.io/pcts/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Boshnakov GN (2022). pcts: Periodically Correlated Periodically Integrated Time Series. https://geobosh.github.io/pcts/ (website)  https://github.com/GeoBosh/pcts/ (devel).","code":"@Manual{,   title = {pcts: Periodically Correlated and Periodically Integrated Time Series},   author = {Georgi N. Boshnakov},   year = {2022},   note = {https://geobosh.github.io/pcts/ (website)  https://github.com/GeoBosh/pcts/ (devel)}, }"},{"path":"https://geobosh.github.io/pcts/index.html","id":"installing-pcts","dir":"","previous_headings":"","what":"Periodically Correlated and Periodically Integrated Time Series","title":"Periodically Correlated and Periodically Integrated Time Series","text":"Install latest stable version pcts CRAN: can install development version pcts Github:","code":"install.packages(\"pcts\") library(remotes) install_github(\"GeoBosh/pcts\")"},{"path":"https://geobosh.github.io/pcts/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Periodically Correlated and Periodically Integrated Time Series","text":"Periodic time series can created pcts(). Models fitted fitPM() several functions. obtain periodic properties, sample periodic autocorrelations periodic time series theoretical periodic autocorrelations periodic models, just call respective functions (autocorrelations() partialAutocorrelations()) compute relevant property depending class argument, see examples documentation. good place start help topic ?pcts-package. Several datasets available examples experiments. example, ?dataFranses1996 contains data Franses (1996). datasets classes \"mts\" \"ts\" (standard R classes time series), can used without loading pcts, desired.","code":""},{"path":"https://geobosh.github.io/pcts/reference/BareCycle-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class BareCycle — BareCycle-class","title":"Class BareCycle — BareCycle-class","text":"Class BareCycle.","code":""},{"path":"https://geobosh.github.io/pcts/reference/BareCycle-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class BareCycle — BareCycle-class","text":"Objects can created calls form pcCycle(nseasons)   new(\"BareCycle\", nseasons). Class \"BareCycle\" represents number seasons   sufficient many computations.","code":""},{"path":"https://geobosh.github.io/pcts/reference/BareCycle-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class BareCycle — BareCycle-class","text":"nseasons: Object class \"integer\", number     seasons.","code":""},{"path":"https://geobosh.github.io/pcts/reference/BareCycle-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class BareCycle — BareCycle-class","text":"Class \"BasicCycle\", directly.","code":""},{"path":"https://geobosh.github.io/pcts/reference/BareCycle-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class BareCycle — BareCycle-class","text":"coerce signature(= \"BuiltinCycle\", = \"BareCycle\"): ... initialize signature(.Object = \"BareCycle\"): ... nSeasons signature(object = \"BareCycle\"): ... show signature(object = \"BareCycle\"): ...","code":""},{"path":"https://geobosh.github.io/pcts/reference/BareCycle-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class BareCycle — BareCycle-class","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/BareCycle-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class BareCycle — BareCycle-class","text":"","code":"pcCycle(5) #> Object from class 'BareCycle' #> Number of seasons: 5  cycle <- new(\"BareCycle\", 5) identical(new(\"BareCycle\", 5), pcCycle(5)) # TRUE #> [1] TRUE  unitSeason(cycle) #> [1] \"Season\" unitCycle(cycle) #> [1] \"Cycle\" allSeasons(cycle) #> [1] \"S1\" \"S2\" \"S3\" \"S4\" \"S5\" seqSeasons(cycle) #> [1] 1 2 3 4 5  cycle[] #> [1] \"S1\" \"S2\" \"S3\" \"S4\" \"S5\" cycle[3] #> [1] \"S3\"  ## if cycle represents 5-days week one may prefer: BuiltinCycle(5) #> Object from class 'PartialCycle' #>     partial cycle of 'DayWeekCycle', seasons: 1, 2, 3, 4, 5 #> Cycle start: Monday"},{"path":"https://geobosh.github.io/pcts/reference/BasicCycle-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class BasicCycle — BasicCycle-class","title":"Class BasicCycle — BasicCycle-class","text":"Class BasicCycle.","code":""},{"path":"https://geobosh.github.io/pcts/reference/BasicCycle-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class BasicCycle — BasicCycle-class","text":"virtual Class: objects may created .","code":""},{"path":"https://geobosh.github.io/pcts/reference/BasicCycle-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class BasicCycle — BasicCycle-class","text":"[ signature(x = \"BasicCycle\", = \"\", j = \"missing\", drop = \"\") [ signature(x = \"BasicCycle\", = \"missing\", j = \"missing\", drop = \"\") [<- signature(x = \"BasicCycle\", = \"\", j = \"missing\", value = \"\") [<- signature(x = \"BasicCycle\", = \"missing\", j = \"missing\", value = \"\") allSeasons signature(x = \"BasicCycle\", abb = \"\") seqSeasons signature(x = \"BasicCycle\")","code":""},{"path":"https://geobosh.github.io/pcts/reference/BasicCycle-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class BasicCycle — BasicCycle-class","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/BasicCycle-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class BasicCycle — BasicCycle-class","text":"","code":"showClass(\"BasicCycle\") #> Virtual Class \"BasicCycle\" [package \"pcts\"] #>  #> No Slots, prototype of class \"BareCycle\" #>  #> Known Subclasses:  #> Class \"BareCycle\", directly #> Class \"BuiltinCycle\", directly #> Class \"PartialCycle\", directly #> Class \"SimpleCycle\", by class \"BareCycle\", distance 2"},{"path":"https://geobosh.github.io/pcts/reference/BuiltinCycle-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Class \"BuiltinCycle\" subclasses package 'pcts'.","code":""},{"path":"https://geobosh.github.io/pcts/reference/BuiltinCycle-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class ","text":"Class \"BuiltinCycle\" virtual Class: objects may   created . Class \"BuiltinCycle\" several built-  cycle subclasses. Objects subclasses can created calls   form new(\"className\", first, ...),   \"className\" name subclass. optional argument   first can used designate season considered first   cycle, default first. function BuiltinCycle provides convenient way   generate objects subclasses class   \"BuiltinCycle\". argument number seasons. classes effectively unmodifiable, user can convert   cycle classes, e.g. class \"SimpleCycle\", adapt   needed. subclasses \"BuiltinCycle\" definitions   methods promised superclass \"BasicCycle\".","code":""},{"path":"https://geobosh.github.io/pcts/reference/BuiltinCycle-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"class \"BuiltinCycle\" subclasses single   common slot: first: Object class \"integer\",       index season treated first cycle.","code":""},{"path":"https://geobosh.github.io/pcts/reference/BuiltinCycle-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class ","text":"Class \"BuiltinCycle\" extends class   \"BasicCycle\", directly. Classes \"DayWeekCycle\", \"Every30MinutesCycle\",   \"FiveDayWeekCycle\", \"OpenCloseCycle\"   \"QuarterYearCycle\"    extend: Class \"BuiltinCycle\", directly.   Class \"BasicCycle\", class \"BuiltinCycle\", distance 2.","code":""},{"path":"https://geobosh.github.io/pcts/reference/BuiltinCycle-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class ","text":"Functions methods class: coerce signature(= \"BuiltinCycle\", = \"BareCycle\"): ... coerce signature(= \"BuiltinCycle\", = \"SimpleCycle\"): ... initialize signature(.Object = \"BuiltinCycle\"): ... show signature(object = \"BuiltinCycle\"): ... allSeasons signature(x = \"DayWeekCycle\", abb = \"logical\") allSeasons signature(x = \"DayWeekCycle\", abb = \"missing\") nSeasons signature(object = \"DayWeekCycle\") unitCycle signature(x = \"DayWeekCycle\") unitSeason signature(x = \"DayWeekCycle\") allSeasons signature(x = \"Every30MinutesCycle\", abb = \"logical\"): ... allSeasons signature(x = \"Every30MinutesCycle\", abb = \"missing\"): ... nSeasons signature(object = \"Every30MinutesCycle\"): ... unitCycle signature(x = \"Every30MinutesCycle\"): ... unitSeason signature(x = \"Every30MinutesCycle\"): ... allSeasons signature(x = \"FiveDayWeekCycle\", abb = \"logical\"): ... allSeasons signature(x = \"FiveDayWeekCycle\", abb = \"missing\"): ... nSeasons signature(object = \"FiveDayWeekCycle\"): ... unitCycle signature(x = \"FiveDayWeekCycle\"): ... unitSeason signature(x = \"FiveDayWeekCycle\"): ... allSeasons signature(x = \"MonthYearCycle\", abb = \"logical\"): ... allSeasons signature(x = \"MonthYearCycle\", abb = \"missing\"): ... nSeasons signature(object = \"MonthYearCycle\"): ... unitCycle signature(x = \"MonthYearCycle\"): ... unitSeason signature(x = \"MonthYearCycle\"): ... allSeasons signature(x = \"OpenCloseCycle\", abb = \"logical\"): ... allSeasons signature(x = \"OpenCloseCycle\", abb = \"missing\"): ... nSeasons signature(object = \"OpenCloseCycle\"): ... unitCycle signature(x = \"OpenCloseCycle\"): ... unitSeason signature(x = \"OpenCloseCycle\"): ... allSeasons signature(x = \"QuarterYearCycle\", abb = \"logical\"): ... allSeasons signature(x = \"QuarterYearCycle\", abb = \"missing\"): ... nSeasons signature(object = \"QuarterYearCycle\"): ... unitCycle signature(x = \"QuarterYearCycle\"): ... unitSeason signature(x = \"QuarterYearCycle\"): ...","code":""},{"path":"https://geobosh.github.io/pcts/reference/BuiltinCycle-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class ","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/BuiltinCycle-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class ","text":"","code":"## class \"DayWeekCycle\" dwcycle <- BuiltinCycle(7) # new(\"DayWeekCycle\")  unitSeason(dwcycle) #> [1] \"Day\" unitCycle(dwcycle) #> [1] \"Week\"  allSeasons(dwcycle) #> [1] \"Monday\"    \"Tuesday\"   \"Wednesday\" \"Thursday\"  \"Friday\"    \"Saturday\"  #> [7] \"Sunday\"    dwcycle[] # same #> [1] \"Monday\"    \"Tuesday\"   \"Wednesday\" \"Thursday\"  \"Friday\"    \"Saturday\"  #> [7] \"Sunday\"     allSeasons(dwcycle, abb = TRUE) #> [1] \"Mon\" \"Tue\" \"Wed\" \"Thu\" \"Fri\" \"Sat\" \"Sun\" dwcycle[ , abb = TRUE] # same #> [1] \"Mon\" \"Tue\" \"Wed\" \"Thu\" \"Fri\" \"Sat\" \"Sun\"  dwcycle[2] #> [1] \"Tuesday\" dwcycle[2, abb = TRUE] #> [1] \"Tue\"  seqSeasons(dwcycle) #> [1] 1 2 3 4 5 6 7  ## start the week on Sunday dws <- BuiltinCycle(7, first = 7) # new(\"DayWeekCycle\", first = 7) dws[1] # \"Sunday\" #> [1] \"Sunday\" allSeasons(dws) #> [1] \"Sunday\"    \"Monday\"    \"Tuesday\"   \"Wednesday\" \"Thursday\"  \"Friday\"    #> [7] \"Saturday\"   ## class \"Every30MinutesCycle\" cyc48 <- BuiltinCycle(48) # new(\"Every30MinutesCycle\") nSeasons(cyc48) #> [1] 48 allSeasons(cyc48) #>  [1] \"00:30\" \"01:00\" \"01:30\" \"02:00\" \"02:30\" \"03:00\" \"03:30\" \"04:00\" \"04:30\" #> [10] \"05:00\" \"05:30\" \"06:00\" \"06:30\" \"07:00\" \"07:30\" \"08:00\" \"08:30\" \"09:00\" #> [19] \"09:30\" \"10:00\" \"10:30\" \"11:00\" \"11:30\" \"12:00\" \"12:30\" \"13:00\" \"13:30\" #> [28] \"14:00\" \"14:30\" \"15:00\" \"15:30\" \"16:00\" \"16:30\" \"17:00\" \"17:30\" \"18:00\" #> [37] \"18:30\" \"19:00\" \"19:30\" \"20:00\" \"20:30\" \"21:00\" \"21:30\" \"22:00\" \"22:30\" #> [46] \"23:00\" \"23:30\" \"00:00\"  ## class \"FiveDayWeekCycle\" is deprecated, use the equivalent: fdcycle <- BuiltinCycle(5)  unitSeason(fdcycle) #> [1] \"Day\" unitCycle(fdcycle) #> [1] \"Week\"  allSeasons(fdcycle) #> [1] \"Monday\"    \"Tuesday\"   \"Wednesday\" \"Thursday\"  \"Friday\"    fdcycle[] # same #> [1] \"Monday\"    \"Tuesday\"   \"Wednesday\" \"Thursday\"  \"Friday\"     allSeasons(fdcycle, abb = TRUE) #> [1] \"Mon\" \"Tue\" \"Wed\" \"Thu\" \"Fri\" fdcycle[ , abb = TRUE] # same #> [1] \"Mon\" \"Tue\" \"Wed\" \"Thu\" \"Fri\"  fdcycle[2] #> [1] \"Tuesday\" fdcycle[2, abb = TRUE] #> [1] \"Tue\"  seqSeasons(fdcycle) #> [1] 1 2 3 4 5  ## class \"MonthYearCycle\" mycycle <- BuiltinCycle(12) # new(\"MonthYearCycle\")  unitSeason(mycycle) #> [1] \"Month\" unitCycle(mycycle) #> [1] \"Year\"  allSeasons(mycycle) #>  [1] \"January\"   \"February\"  \"March\"     \"April\"     \"May\"       \"June\"      #>  [7] \"July\"      \"August\"    \"September\" \"October\"   \"November\"  \"December\"  mycycle[ ] # same #>  [1] \"January\"   \"February\"  \"March\"     \"April\"     \"May\"       \"June\"      #>  [7] \"July\"      \"August\"    \"September\" \"October\"   \"November\"  \"December\"   allSeasons(mycycle, , abb = TRUE) #>  [1] \"Jan\" \"Feb\" \"Mar\" \"Apr\" \"May\" \"Jun\" \"Jul\" \"Aug\" \"Sep\" \"Oct\" \"Nov\" \"Dec\" mycycle[ , abb = TRUE] # same #>  [1] \"Jan\" \"Feb\" \"Mar\" \"Apr\" \"May\" \"Jun\" \"Jul\" \"Aug\" \"Sep\" \"Oct\" \"Nov\" \"Dec\"  mycycle[2] #> [1] \"February\" mycycle[2, abb = TRUE] #> [1] \"Feb\"  seqSeasons(mycycle) #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12  ## class \"OpenCloseCycle\" opcycle <- new(\"OpenCloseCycle\")  unitSeason(opcycle) #> [1] \"OpenOrClose\" unitCycle(opcycle) #> [1] \"HalfDay\"  allSeasons(opcycle) #> [1] \"Open\"  \"Close\" opcycle[ , abb = FALSE] # same #> [1] \"Open\"  \"Close\"  allSeasons(opcycle, abb = FALSE) #> [1] \"Open\"  \"Close\" opcycle[] # same #> [1] \"Open\"  \"Close\"  opcycle[2] #> [1] \"Close\" opcycle[2, abb = TRUE] #> [1] \"C\"  seqSeasons(opcycle) #> [1] 1 2  ## class \"QuarterYearCycle\" qycycle <- new(\"QuarterYearCycle\")  unitSeason(qycycle) #> [1] \"Quarter\" unitCycle(qycycle) #> [1] \"Year\"  allSeasons(qycycle) #> [1] \"Quarter_1\" \"Quarter_2\" \"Quarter_3\" \"Quarter_4\" qycycle[] # same #> [1] \"Quarter_1\" \"Quarter_2\" \"Quarter_3\" \"Quarter_4\"  allSeasons(qycycle, abb = TRUE) #> [1] \"Q1\" \"Q2\" \"Q3\" \"Q4\" qycycle[ , abb = TRUE] # same #> [1] \"Q1\" \"Q2\" \"Q3\" \"Q4\"  qycycle[2] #> [1] \"Quarter_2\" qycycle[2, abb = TRUE] #> [1] \"Q2\"  seqSeasons(qycycle) #> [1] 1 2 3 4"},{"path":"https://geobosh.github.io/pcts/reference/Cyclic-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Class \"Cyclic\"","code":""},{"path":"https://geobosh.github.io/pcts/reference/Cyclic-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class ","text":"Objects can created calls form new(\"Cyclic\", ...).","code":""},{"path":"https://geobosh.github.io/pcts/reference/Cyclic-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"cycle: Object class \"BasicCycle\" ~~ pcstart: Object class \"\" ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/Cyclic-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class ","text":"nSeasons signature(object = \"Cyclic\"): ... pcCycle signature(x = \"Cyclic\", type = \"\"): ... allSeasons signature(x = \"Cyclic\", abb = \"\"): ... allSeasons<- signature(x = \"Cyclic\"): ... seqSeasons signature(x = \"Cyclic\"): ... unitCycle signature(x = \"Cyclic\"): ... unitCycle<- signature(x = \"Cyclic\"): ... unitSeason signature(x = \"Cyclic\"): ... unitSeason<- signature(x = \"Cyclic\"): ...","code":""},{"path":"https://geobosh.github.io/pcts/reference/Cyclic-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class ","text":"","code":"showClass(\"Cyclic\") #> Class \"Cyclic\" [package \"pcts\"] #>  #> Slots: #>                              #> Name:       cycle    pcstart #> Class: BasicCycle        ANY #>  #> Known Subclasses:  #> Class \"PeriodicTimeSeries\", directly #> Class \"PeriodicTS\", directly, with explicit coerce #> Class \"PeriodicMTS\", directly, with explicit coerce #> Class \"PeriodicTS_ts\", by class \"PeriodicTimeSeries\", distance 2 #> Class \"PeriodicMTS_ts\", by class \"PeriodicTimeSeries\", distance 2 #> Class \"PeriodicTS_zooreg\", by class \"PeriodicTimeSeries\", distance 2 #> Class \"PeriodicMTS_zooreg\", by class \"PeriodicTimeSeries\", distance 2"},{"path":"https://geobosh.github.io/pcts/reference/Cyclic.html","id":null,"dir":"Reference","previous_headings":"","what":"Create objects from class Cyclic — Cyclic","title":"Create objects from class Cyclic — Cyclic","text":"Create objects class Cyclic.","code":""},{"path":"https://geobosh.github.io/pcts/reference/Cyclic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create objects from class Cyclic — Cyclic","text":"","code":"Cyclic(cycle, start = NULL, ...)  # S3 method for Cyclic as.Date(x, ...)  # S3 method for Cyclic date(x)  # S3 method for PeriodicTimeSeries as.Date(x, ...)"},{"path":"https://geobosh.github.io/pcts/reference/Cyclic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create objects from class Cyclic — Cyclic","text":"cycle cycle object, positive integer giving number seasons,     object can used create cycle     pcCycle(x, ...).  start cycle-season pair, datetime object, Date object object     can converted datetime as_datetime(start).  ... Cyclic, arguments passed pcCycle, used     cycle cycle class.  x Cyclic object","code":""},{"path":"https://geobosh.github.io/pcts/reference/Cyclic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create objects from class Cyclic — Cyclic","text":"Cyclic, object class \"Cyclic\"","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/Cyclic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create objects from class Cyclic — Cyclic","text":"","code":"## bare bone Cyclic starting at Cycle 1, season 1 Cyclic(4)     #> Start:  1   S1  #> Cycle:  BareCycle  #> Number of seasons: 4  Cyclic(4, c(1,1)) # same #> Start:  1   S1  #> Cycle:  BareCycle  #> Number of seasons: 4   ## with quarter/year cycle qu <- Cyclic(BuiltinCycle(4), start = c(2020, 1)) start(qu) #> [1] 2020    1 as_datetime(qu) #> [1] \"2020-01-01 UTC\"  date(qu) <- c(2009, 2) qu #> Start:  2009   Quarter_2  #> Cycle:  QuarterYearCycle  #> Number of seasons: 4   ap <- pcts(AirPassengers) as.Date(ap) #>   [1] \"1949-01-01\" \"1949-02-01\" \"1949-03-01\" \"1949-04-01\" \"1949-05-01\" #>   [6] \"1949-06-01\" \"1949-07-01\" \"1949-08-01\" \"1949-09-01\" \"1949-10-01\" #>  [11] \"1949-11-01\" \"1949-12-01\" \"1950-01-01\" \"1950-02-01\" \"1950-03-01\" #>  [16] \"1950-04-01\" \"1950-05-01\" \"1950-06-01\" \"1950-07-01\" \"1950-08-01\" #>  [21] \"1950-09-01\" \"1950-10-01\" \"1950-11-01\" \"1950-12-01\" \"1951-01-01\" #>  [26] \"1951-02-01\" \"1951-03-01\" \"1951-04-01\" \"1951-05-01\" \"1951-06-01\" #>  [31] \"1951-07-01\" \"1951-08-01\" \"1951-09-01\" \"1951-10-01\" \"1951-11-01\" #>  [36] \"1951-12-01\" \"1952-01-01\" \"1952-02-01\" \"1952-03-01\" \"1952-04-01\" #>  [41] \"1952-05-01\" \"1952-06-01\" \"1952-07-01\" \"1952-08-01\" \"1952-09-01\" #>  [46] \"1952-10-01\" \"1952-11-01\" \"1952-12-01\" \"1953-01-01\" \"1953-02-01\" #>  [51] \"1953-03-01\" \"1953-04-01\" \"1953-05-01\" \"1953-06-01\" \"1953-07-01\" #>  [56] \"1953-08-01\" \"1953-09-01\" \"1953-10-01\" \"1953-11-01\" \"1953-12-01\" #>  [61] \"1954-01-01\" \"1954-02-01\" \"1954-03-01\" \"1954-04-01\" \"1954-05-01\" #>  [66] \"1954-06-01\" \"1954-07-01\" \"1954-08-01\" \"1954-09-01\" \"1954-10-01\" #>  [71] \"1954-11-01\" \"1954-12-01\" \"1955-01-01\" \"1955-02-01\" \"1955-03-01\" #>  [76] \"1955-04-01\" \"1955-05-01\" \"1955-06-01\" \"1955-07-01\" \"1955-08-01\" #>  [81] \"1955-09-01\" \"1955-10-01\" \"1955-11-01\" \"1955-12-01\" \"1956-01-01\" #>  [86] \"1956-02-01\" \"1956-03-01\" \"1956-04-01\" \"1956-05-01\" \"1956-06-01\" #>  [91] \"1956-07-01\" \"1956-08-01\" \"1956-09-01\" \"1956-10-01\" \"1956-11-01\" #>  [96] \"1956-12-01\" \"1957-01-01\" \"1957-02-01\" \"1957-03-01\" \"1957-04-01\" #> [101] \"1957-05-01\" \"1957-06-01\" \"1957-07-01\" \"1957-08-01\" \"1957-09-01\" #> [106] \"1957-10-01\" \"1957-11-01\" \"1957-12-01\" \"1958-01-01\" \"1958-02-01\" #> [111] \"1958-03-01\" \"1958-04-01\" \"1958-05-01\" \"1958-06-01\" \"1958-07-01\" #> [116] \"1958-08-01\" \"1958-09-01\" \"1958-10-01\" \"1958-11-01\" \"1958-12-01\" #> [121] \"1959-01-01\" \"1959-02-01\" \"1959-03-01\" \"1959-04-01\" \"1959-05-01\" #> [126] \"1959-06-01\" \"1959-07-01\" \"1959-08-01\" \"1959-09-01\" \"1959-10-01\" #> [131] \"1959-11-01\" \"1959-12-01\" \"1960-01-01\" \"1960-02-01\" \"1960-03-01\" #> [136] \"1960-04-01\" \"1960-05-01\" \"1960-06-01\" \"1960-07-01\" \"1960-08-01\" #> [141] \"1960-09-01\" \"1960-10-01\" \"1960-11-01\" \"1960-12-01\""},{"path":"https://geobosh.github.io/pcts/reference/FittedPeriodicArModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class FittedPeriodicArModel — FittedPeriodicArModel-class","title":"Class FittedPeriodicArModel — FittedPeriodicArModel-class","text":"Class FittedPeriodicArModel.","code":""},{"path":"https://geobosh.github.io/pcts/reference/FittedPeriodicArModel-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class FittedPeriodicArModel — FittedPeriodicArModel-class","text":"Objects can created calls form new(\"FittedPeriodicArModel\", ar, ma, sigma2, ...).","code":""},{"path":"https://geobosh.github.io/pcts/reference/FittedPeriodicArModel-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class FittedPeriodicArModel — FittedPeriodicArModel-class","text":"asyCov: Object class \"\" ~~ sigma2: Object class \"numeric\" ~~ ar: Object class \"PeriodicArFilter\" ~~ ma: Object class \"PeriodicMaFilter\" ~~ center: Object class \"numeric\" ~~ intercept: Object class \"numeric\" ~~ theTS: Object class \"PeriodicTS\" ~~ ns: Object class \"numeric\" ~~ modelCycle: Object class \"BasicCycle\" ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/FittedPeriodicArModel-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class FittedPeriodicArModel — FittedPeriodicArModel-class","text":"Class \"PeriodicArModel\", directly. Class \"PeriodicArmaModel\", class \"PeriodicArModel\", distance 2. Class \"VirtualPeriodicArmaModel\", class \"PeriodicArModel\", distance 3. Class \"PeriodicArmaSpec\", class \"PeriodicArModel\", distance 3. Class \"VirtualPeriodicFilterModel\", class \"PeriodicArModel\", distance 4. Class \"VirtualPeriodicStationaryModel\", class \"PeriodicArModel\", distance 4. Class \"VirtualPeriodicAutocovarianceModel\", class \"PeriodicArModel\", distance 5. Class \"VirtualPeriodicMeanModel\", class \"PeriodicArModel\", distance 5.","code":""},{"path":"https://geobosh.github.io/pcts/reference/FittedPeriodicArModel-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class FittedPeriodicArModel — FittedPeriodicArModel-class","text":"methods defined class \"FittedPeriodicArModel\" signature. show signature(object = \"FittedPeriodicArModel\"): ... summary signature(object = \"FittedPeriodicArModel\"): ...","code":""},{"path":"https://geobosh.github.io/pcts/reference/FittedPeriodicArmaModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class FittedPeriodicArmaModel — FittedPeriodicArmaModel-class","title":"Class FittedPeriodicArmaModel — FittedPeriodicArmaModel-class","text":"Class FittedPeriodicArmaModel package pcts","code":""},{"path":"https://geobosh.github.io/pcts/reference/FittedPeriodicArmaModel-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class FittedPeriodicArmaModel — FittedPeriodicArmaModel-class","text":"Objects can created calls form new(\"FittedPeriodicArmaModel\", ..., mean).","code":""},{"path":"https://geobosh.github.io/pcts/reference/FittedPeriodicArmaModel-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class FittedPeriodicArmaModel — FittedPeriodicArmaModel-class","text":"ar: Object class \"PeriodicBJFilter\" ~~ ma: Object class \"PeriodicSPFilter\" ~~ modelCycle: Object class \"BasicCycle\" ~~ center: Object class \"numeric\" ~~ intercept: Object class \"numeric\" ~~ sigma2: Object class \"numeric\" ~~ theTS: Object class \"PeriodicTS\" ~~ asyCov: Object class \"\" ~~ ns: Object class \"numeric\" ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/FittedPeriodicArmaModel-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class FittedPeriodicArmaModel — FittedPeriodicArmaModel-class","text":"Class \"PeriodicArmaModel\", directly. Class \"FittedPM\", directly. Class \"VirtualPeriodicArmaModel\", class \"PeriodicArmaModel\", distance 2. Class \"PeriodicArmaSpec\", class \"PeriodicArmaModel\", distance 2. Class \"VirtualPeriodicFilterModel\", class \"PeriodicArmaModel\", distance 3. Class \"VirtualPeriodicStationaryModel\", class \"PeriodicArmaModel\", distance 3. Class \"PeriodicArmaFilter\", class \"PeriodicArmaModel\", distance 3. Class \"PeriodicInterceptSpec\", class \"PeriodicArmaModel\", distance 3. Class \"VirtualPeriodicAutocovarianceModel\", class \"PeriodicArmaModel\", distance 4. Class \"VirtualPeriodicMeanModel\", class \"PeriodicArmaModel\", distance 4. Class \"VirtualArmaFilter\", class \"PeriodicArmaModel\", distance 4. Class \"ModelCycleSpec\", class \"PeriodicArmaModel\", distance 4. Class \"InterceptSpec\", class \"PeriodicArmaModel\", distance 4. Class \"VirtualPeriodicModel\", class \"PeriodicArmaModel\", distance 5. Class \"VirtualMonicFilter\", class \"PeriodicArmaModel\", distance 5.","code":""},{"path":"https://geobosh.github.io/pcts/reference/FittedPeriodicArmaModel-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class FittedPeriodicArmaModel — FittedPeriodicArmaModel-class","text":"as_pcarma_list signature(object = \"FittedPeriodicArmaModel\"): ... show signature(object = \"FittedPeriodicArmaModel\"): ...","code":""},{"path":"https://geobosh.github.io/pcts/reference/Fraser2017.html","id":null,"dir":"Reference","previous_headings":"","what":"Fraser River at Hope, mean monthly flow — Fraser2017","title":"Fraser River at Hope, mean monthly flow — Fraser2017","text":"Mean monthly flow (cms) Fraser River March 1912 December   2017, recorded Fraser River Hope station.","code":""},{"path":"https://geobosh.github.io/pcts/reference/Fraser2017.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fraser River at Hope, mean monthly flow — Fraser2017","text":"","code":"data(\"Fraser2017\")"},{"path":"https://geobosh.github.io/pcts/reference/Fraser2017.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Fraser River at Hope, mean monthly flow — Fraser2017","text":"time series (class \"ts\") frequency 12, starting   January 1912 (first two data values NA) December 2017.","code":""},{"path":"https://geobosh.github.io/pcts/reference/Fraser2017.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fraser River at Hope, mean monthly flow — Fraser2017","text":"Dataset Fraser2017 extention dataset \"Fraser\"   package \"pear\". latter runs upto December 1990 (  documented December 1991). time writing package   \"pear\" archived CRAN, main reason include   dataset (added benefit almost 30 years additional   data).","code":""},{"path":"https://geobosh.github.io/pcts/reference/Fraser2017.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Fraser River at Hope, mean monthly flow — Fraser2017","text":"https://wateroffice.ec.gc.ca/","code":""},{"path":"https://geobosh.github.io/pcts/reference/Fraser2017.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fraser River at Hope, mean monthly flow — Fraser2017","text":"","code":"data(Fraser2017)  fr <- window(Fraser2017, start = c(1912, 3), end = c(1990, 12)) ## all.equal(as.numeric(fr), as.numeric(pear::Fraser)) # TRUE ## all.equal(tsp(fr), tsp(pear::Fraser))               # TRUE"},{"path":"https://geobosh.github.io/pcts/reference/LegacyPeriodicFilterModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class LegacyPeriodicFilterModel — LegacyPeriodicFilterModel-class","title":"Class LegacyPeriodicFilterModel — LegacyPeriodicFilterModel-class","text":"Class LegacyPeriodicFilterModel.","code":""},{"path":"https://geobosh.github.io/pcts/reference/LegacyPeriodicFilterModel-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class LegacyPeriodicFilterModel — LegacyPeriodicFilterModel-class","text":"Objects can created calls form new(\"LegacyPeriodicFilterModel\", ...).","code":""},{"path":"https://geobosh.github.io/pcts/reference/LegacyPeriodicFilterModel-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class LegacyPeriodicFilterModel — LegacyPeriodicFilterModel-class","text":"intercept: Object class \"numeric\" ~~ arFilter: Object class \"PeriodicArFilter\" ~~ maFilter: Object class \"PeriodicMaFilter\" ~~ scalesq: Object class \"numeric\" ~~ jordan: Object class \"\" ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/LegacyPeriodicFilterModel-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class LegacyPeriodicFilterModel — LegacyPeriodicFilterModel-class","text":"Class \"VirtualPeriodicFilterModel\", directly.","code":""},{"path":"https://geobosh.github.io/pcts/reference/LegacyPeriodicFilterModel-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class LegacyPeriodicFilterModel — LegacyPeriodicFilterModel-class","text":"methods defined class \"LegacyPeriodicFilterModel\" signature.","code":""},{"path":"https://geobosh.github.io/pcts/reference/ModelCycleSpec-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ModelCycleSpec — ModelCycleSpec-class","title":"Class ModelCycleSpec — ModelCycleSpec-class","text":"Class ModelCycleSpec.","code":""},{"path":"https://geobosh.github.io/pcts/reference/ModelCycleSpec-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class ModelCycleSpec — ModelCycleSpec-class","text":"Objects can created calls form new(\"ModelCycleSpec\", ...).","code":""},{"path":"https://geobosh.github.io/pcts/reference/ModelCycleSpec-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ModelCycleSpec — ModelCycleSpec-class","text":"modelCycle: Object class \"BasicCycle\" ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/ModelCycleSpec-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class ModelCycleSpec — ModelCycleSpec-class","text":"modelCycle signature(object = \"ModelCycleSpec\"): ... modelCycle<- signature(object = \"ModelCycleSpec\"): ...","code":""},{"path":"https://geobosh.github.io/pcts/reference/PartialCycle-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class PartialCycle — PartialCycle-class","title":"Class PartialCycle — PartialCycle-class","text":"Class PartialCycle","code":""},{"path":"https://geobosh.github.io/pcts/reference/PartialCycle-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class PartialCycle — PartialCycle-class","text":"Objects can created calls form new(\"PartialCycle\", ...). Partial cycles often created implicitly subsetting time series using window() argument seasons, see examples.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PartialCycle-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class PartialCycle — PartialCycle-class","text":"orig: parent class partial cycle, object inheriting       class \"BasicCycle\". subindex: integer vector specifying seasons include partial       cycle.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PartialCycle-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class PartialCycle — PartialCycle-class","text":"Class \"BasicCycle\", directly.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PartialCycle-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class PartialCycle — PartialCycle-class","text":"allSeasons signature(x = \"PartialCycle\", abb = \"logical\"): ... allSeasons signature(x = \"PartialCycle\", abb = \"missing\"): ... nSeasons signature(object = \"PartialCycle\"): ... unitCycle signature(x = \"PartialCycle\"): ... unitSeason signature(x = \"PartialCycle\"): ...","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/PartialCycle-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class PartialCycle — PartialCycle-class","text":"","code":"dwc <- new(\"DayWeekCycle\") dwc #> Object from built-in class 'DayWeekCycle' #> Cycle start: Monday  allSeasons(dwc) #> [1] \"Monday\"    \"Tuesday\"   \"Wednesday\" \"Thursday\"  \"Friday\"    \"Saturday\"  #> [7] \"Sunday\"     ## a five day week cycle dwc5 <- new(\"PartialCycle\", orig = dwc, subindex = 1:5) dwc5 #> Object from class 'PartialCycle' #>     partial cycle of 'DayWeekCycle', seasons: 1, 2, 3, 4, 5 #> Cycle start: Monday  allSeasons(dwc5) #> [1] \"Monday\"    \"Tuesday\"   \"Wednesday\" \"Thursday\"  \"Friday\"     weekend <- new(\"PartialCycle\", orig = dwc, subindex = 6:7) weekend #> Object from class 'PartialCycle' #>     partial cycle of 'DayWeekCycle', seasons: 6, 7 #> Cycle start: Saturday  allSeasons(weekend) #> [1] \"Saturday\" \"Sunday\"    ap <- pcts(AirPassengers)  ## take data for the summer months (in Northern hemisphere) ap7to9 <- window(ap, seasons = 7:9) ## the above implicitly creates a partial cycle ap7to9 #> An object of class \"PeriodicTS\" #> Slot \"cycle\": Start:  1949   July  #> Cycle:  PartialCycle  #> Number of seasons: 3  #>  #>       Jul Aug Sep #> Y1949 148 148 136 #> Y1950 170 170 158 #> Y1951 199 199 184 #> Y1952 230 242 209 #> Y1953 264 272 237 #> Y1954 302 293 259 #> Y1955 364 347 312 #> Y1956 413 405 355 #> Y1957 465 467 404 #> Y1958 491 505 404 #> Y1959 548 559 463 #> Y1960 622 606 508 allSeasons(ap7to9) #> [1] \"July\"      \"August\"    \"September\""},{"path":"https://geobosh.github.io/pcts/reference/PartialPeriodicAutocorrelations-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class PartialPeriodicAutocorrelations — PartialPeriodicAutocorrelations-class","title":"Class PartialPeriodicAutocorrelations — PartialPeriodicAutocorrelations-class","text":"Class PartialPeriodicAutocorrelations.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PartialPeriodicAutocorrelations-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class PartialPeriodicAutocorrelations — PartialPeriodicAutocorrelations-class","text":"Objects can created calls form new(\"PartialPeriodicAutocorrelations\", ..., data).","code":""},{"path":"https://geobosh.github.io/pcts/reference/PartialPeriodicAutocorrelations-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class PartialPeriodicAutocorrelations — PartialPeriodicAutocorrelations-class","text":"modelCycle: Object class \"BasicCycle\" ~~ data: Object class \"Lagged\" ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/PartialPeriodicAutocorrelations-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class PartialPeriodicAutocorrelations — PartialPeriodicAutocorrelations-class","text":"Class \"ModelCycleSpec\", directly. Class \"FlexibleLagged\", directly. Class \"VirtualPeriodicAutocorrelations\", directly. Class \"Lagged\", class \"FlexibleLagged\", distance 2. Class \"VirtualPeriodicModel\", class \"VirtualPeriodicAutocorrelations\", distance 2.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PartialPeriodicAutocorrelations-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class PartialPeriodicAutocorrelations — PartialPeriodicAutocorrelations-class","text":"show signature(object = \"PartialPeriodicAutocorrelations\"): ...","code":""},{"path":"https://geobosh.github.io/pcts/reference/Pctime.html","id":null,"dir":"Reference","previous_headings":"","what":"Pctime objects — Pctime","title":"Pctime objects — Pctime","text":"Class \"Pctime\" S3 class inheriting base R   datetime class \"POSIXct\". methods conversion   datetimes pcts cycle-season pairs, well convenience   methods functions.","code":""},{"path":"https://geobosh.github.io/pcts/reference/Pctime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pctime objects — Pctime","text":"","code":"Pctime(x, cycle, ...)  as_Pctime(x, ...)  # S3 method for Pctime [(x, i, j, drop = TRUE)  # S3 method for Pctime [[(x, ..., drop = TRUE)  # S3 method for Cyclic as_Pctime(x, ...)  # S3 method for PeriodicTimeSeries as_Pctime(x, ...)"},{"path":"https://geobosh.github.io/pcts/reference/Pctime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pctime objects — Pctime","text":"x Pctime, numeric vector, matrix two columns,     object can converted datetime.     functions see Details.  cycle positive integer, cycle object, missing.  subscript j noi used drop used  ... argument methods.","code":""},{"path":"https://geobosh.github.io/pcts/reference/Pctime.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pctime objects — Pctime","text":"Pctime represents periodic times cycle specification contained attribute \"cycle\". basically datetime (inheriting \"POSIXct\") additional attribute(s). printing Pctime objects shown cycle-season pairs.  print formats, just convert using as_datetime suitable function. Note though cycles pcts natural datetime representation. , Pctime sets arbitrarilly number seconds origin. seasons cycle-season pairs numbered one number seasons. Names abbreviations used available case builtin cycles partial cycles obtained . cycles cycle-season pairs numbered starting point. years, expected. cycles representing weeks, week 1 first ISO week 1970, c(1,1) corresponds 1969-12-29. cycle classes c(1,1) also corresponds first time first ISO week 1970. Subsetting \"[\" keeps Pctime class, \"[[\" returns datetime object. standard functions work Pctime objects, well, including seq. common source frustration accidental use .Date as_date, instead .POSIXlt as_datetime. four often equivalent, notably monthly, quarterly daily observations , general, conversion dates drops fractional day part datetime. default time zone UTC. time zones can used since calculations use standard datetime date functions base R package lubridate (Grolemund Wickham 2011) , currently tested.","code":""},{"path":"https://geobosh.github.io/pcts/reference/Pctime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pctime objects — Pctime","text":"Pctime, object S3 class Pctime","code":""},{"path":"https://geobosh.github.io/pcts/reference/Pctime.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Pctime objects — Pctime","text":"Grolemund G, Wickham H (2011). “Dates Times Made Easy lubridate.” Journal Statistical Software, 40(3), 1--25. doi: 10.18637/jss.v040.i03 .","code":""},{"path":"https://geobosh.github.io/pcts/reference/Pctime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pctime objects — Pctime","text":"","code":"## a bare bone date for four seasons pct4 <- Pctime(c(2020, 2), pcCycle(4)) pct4 #> [1] \"C2020 S2\"  ## quarterly cycle Pctime(\"2020-04-01\", BuiltinCycle(4)) #> [1] \"Y2020 Q2\" pctQ <- Pctime(c(2020, 2), BuiltinCycle(4))  # same pctQ #> [1] \"Y2020 Q2\"  ## day-in-week cycle ## c(1, 1) is the start of the first ISO week of 1970 weekW1S1 <- Pctime(c(1, 1), BuiltinCycle(7))  # W1 Mon weekW1S1 #> [1] \"W1 Mon\" as_datetime(weekW1S1) #> [1] \"1969-12-29 UTC\"  Pctime(\"1970-01-01\", BuiltinCycle(7)) #  W1 Thu #> [1] \"W1 Thu\" pctW1Th <- Pctime(c(1, 4), BuiltinCycle(7))  # same pctW1Th #> [1] \"W1 Thu\"  Pctime(\"2020-04-01\", BuiltinCycle(7)) #> [1] \"W2623 Wed\" pctW2623Wed <- Pctime(c(2623, 3), BuiltinCycle(7))  # same pctW2623Wed #> [1] \"W2623 Wed\" as_datetime(pctW2623Wed) #> [1] \"2020-04-01 UTC\"  ## Monday-Friday week - a partial cycle derived from DayOfWeekCycle BuiltinCycle(5) #> Object from class 'PartialCycle' #>     partial cycle of 'DayWeekCycle', seasons: 1, 2, 3, 4, 5 #> Cycle start: Monday  pctMF <- Pctime(\"2020-04-03\", BuiltinCycle(5)) # Fri seq(pctMF, length.out = 10) # note: Sat, Sun are skipped #>  [1] \"W2623 Fri\" \"W2624 Mon\" \"W2624 Tue\" \"W2624 Wed\" \"W2624 Thu\" \"W2624 Fri\" #>  [7] \"W2625 Mon\" \"W2625 Tue\" \"W2625 Wed\" \"W2625 Thu\"  Pctime(\"2020-04-04\", BuiltinCycle(5)) # Sat, not in the cycle #> [1] \"W2623 NA\"  ## monthly cycle Pctime(\"2020-04-01\", BuiltinCycle(12)) #> [1] \"Y2020 Apr\" pctY2020Apr <- Pctime(c(50, 4), BuiltinCycle(12))  # same pctY2020Apr #> [1] \"Y50 Apr\" as_datetime(pctW2623Wed) #> [1] \"2020-04-01 UTC\"  ## Pctime can hold a vector of times ap <- pcts(AirPassengers) aptime <- Pctime(ap)              #  as_Pctime(ap) aptime[1:12] # keep Pctime class #>  [1] \"Y1949 Jan\" \"Y1949 Feb\" \"Y1949 Mar\" \"Y1949 Apr\" \"Y1949 May\" \"Y1949 Jun\" #>  [7] \"Y1949 Jul\" \"Y1949 Aug\" \"Y1949 Sep\" \"Y1949 Oct\" \"Y1949 Nov\" \"Y1949 Dec\" aptime[1] #> [1] \"Y1949 Jan\"  aptime[[1]] # drop Pctime class #> [1] \"1949-01-01 UTC\"  head(aptime) #> [1] \"Y1949 Jan\" \"Y1949 Feb\" \"Y1949 Mar\" \"Y1949 Apr\" \"Y1949 May\" \"Y1949 Jun\" tail(aptime) #> [1] \"Y1960 Jul\" \"Y1960 Aug\" \"Y1960 Sep\" \"Y1960 Oct\" \"Y1960 Nov\" \"Y1960 Dec\"  apdates <- as_datetime(ap) head(apdates) #> [1] \"1949-01-01 UTC\" \"1949-02-01 UTC\" \"1949-03-01 UTC\" \"1949-04-01 UTC\" #> [5] \"1949-05-01 UTC\" \"1949-06-01 UTC\" tail(apdates) #> [1] \"1960-07-01 UTC\" \"1960-08-01 UTC\" \"1960-09-01 UTC\" \"1960-10-01 UTC\" #> [5] \"1960-11-01 UTC\" \"1960-12-01 UTC\""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicArModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class PeriodicArModel — PeriodicArModel-class","title":"Class PeriodicArModel — PeriodicArModel-class","text":"Class PeriodicArModel.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicArModel-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class PeriodicArModel — PeriodicArModel-class","text":"Objects can created calls form new(\"PeriodicArModel\", ar, ma, sigma2, ...).","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicArModel-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class PeriodicArModel — PeriodicArModel-class","text":"sigma2: Object class \"numeric\" ~~ ar: Object class \"PeriodicArFilter\" ~~ ma: Object class \"PeriodicMaFilter\" ~~ center: Object class \"numeric\" ~~ intercept: Object class \"numeric\" ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicArModel-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class PeriodicArModel — PeriodicArModel-class","text":"Class \"PeriodicArmaModel\", directly. Class \"VirtualPeriodicArmaModel\", class \"PeriodicArmaModel\", distance 2. Class \"PeriodicArmaSpec\", class \"PeriodicArmaModel\", distance 2. Class \"VirtualPeriodicFilterModel\", class \"PeriodicArmaModel\", distance 3. Class \"VirtualPeriodicStationaryModel\", class \"PeriodicArmaModel\", distance 3. Class \"PeriodicArmaFilter\", class \"PeriodicArmaModel\", distance 3. Class \"VirtualPeriodicAutocovarianceModel\", class \"PeriodicArmaModel\", distance 4. Class \"VirtualPeriodicMeanModel\", class \"PeriodicArmaModel\", distance 4.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicArModel-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class PeriodicArModel — PeriodicArModel-class","text":"autocovariances signature(x = \"PeriodicArModel\"): ... fitPM signature(x = \"\", model = \"PeriodicArModel\"): ...","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicArModel-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Create objects from class PeriodicArModel — PeriodicArModel-methods","title":"Create objects from class PeriodicArModel — PeriodicArModel-methods","text":"Create objects class PeriodicArModel","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicArModel-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create objects from class PeriodicArModel — PeriodicArModel-methods","text":"","code":"PeriodicArModel(object, ...)"},{"path":"https://geobosh.github.io/pcts/reference/PeriodicArModel-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create objects from class PeriodicArModel — PeriodicArModel-methods","text":"object object, can one number classes. ... arguments methods.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicArModel-methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create objects from class PeriodicArModel — PeriodicArModel-methods","text":"PeriodicArModel creates objects class   PeriodicArModel. generic function dispatch methods   first argument.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicArModel-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create objects from class PeriodicArModel — PeriodicArModel-methods","text":"object class \"PeriodicArModel\"","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicArModel-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Create objects from class PeriodicArModel — PeriodicArModel-methods","text":"signature(object = \"matrix\") \"object\" gives coefficients, one row per season. signature(object = \"numeric\") \"object\" gives model order. length taken       number seasons. coefficients set NA. signature(object = \"PeriodicMonicFilterSpec\")  signature(object = \"VirtualPeriodicArmaModel\")  signature(object = \"PeriodicMonicFilterSpec\")  signature(object = \"VirtualPeriodicArmaModel\")","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicArmaFilter-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Class PeriodicArmaFilter.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicArmaFilter-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class ","text":"Objects can created calls form new(\"PeriodicArmaFilter\", ..., ar, ma, nseasons).","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicArmaFilter-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"ar: Object class \"PeriodicBJFilter\" ~~ ma: Object class \"PeriodicSPFilter\" ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicArmaFilter-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class ","text":"Class \"VirtualArmaFilter\", directly. Class \"VirtualMonicFilter\", class \"VirtualArmaFilter\", distance 2.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicArmaFilter-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class ","text":"methods defined class \"PeriodicArmaFilter\" signature.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicArmaModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class PeriodicArmaModel — PeriodicArmaModel-class","title":"Class PeriodicArmaModel — PeriodicArmaModel-class","text":"Class PeriodicArmaModel.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicArmaModel-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class PeriodicArmaModel — PeriodicArmaModel-class","text":"Objects can created calls form new(\"PeriodicArmaModel\", ar, ma, sigma2, ...).","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicArmaModel-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class PeriodicArmaModel — PeriodicArmaModel-class","text":"sigma2: Object class \"numeric\" ~~ ar: Object class \"PeriodicArFilter\" ~~ ma: Object class \"PeriodicMaFilter\" ~~ center: Object class \"numeric\" ~~ intercept: Object class \"numeric\" ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicArmaModel-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class PeriodicArmaModel — PeriodicArmaModel-class","text":"Class \"VirtualPeriodicArmaModel\", directly. Class \"PeriodicArmaSpec\", directly. Class \"VirtualPeriodicFilterModel\", class \"VirtualPeriodicArmaModel\", distance 2. Class \"VirtualPeriodicStationaryModel\", class \"VirtualPeriodicArmaModel\", distance 2. Class \"PeriodicArmaFilter\", class \"PeriodicArmaSpec\", distance 2. Class \"VirtualPeriodicAutocovarianceModel\", class \"VirtualPeriodicArmaModel\", distance 3. Class \"VirtualPeriodicMeanModel\", class \"VirtualPeriodicArmaModel\", distance 3.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicArmaModel-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class PeriodicArmaModel — PeriodicArmaModel-class","text":"autocovariances signature(x = \"PeriodicArmaModel\"): ...","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicArmaSpec-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class PeriodicArmaSpec — PeriodicArmaSpec-class","title":"Class PeriodicArmaSpec — PeriodicArmaSpec-class","text":"Class PeriodicArmaSpec.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicArmaSpec-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class PeriodicArmaSpec — PeriodicArmaSpec-class","text":"Objects can created calls form new(\"PeriodicArmaSpec\", pcmean, pcintercept, ...).","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicArmaSpec-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class PeriodicArmaSpec — PeriodicArmaSpec-class","text":"sigma2: Object class \"numeric\" ~~ ar: Object class \"PeriodicArFilter\" ~~ ma: Object class \"PeriodicMaFilter\" ~~ center: Object class \"numeric\" ~~ intercept: Object class \"numeric\" ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicArmaSpec-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class PeriodicArmaSpec — PeriodicArmaSpec-class","text":"Class \"PeriodicArmaFilter\", directly.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicAutocorrelations-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class PeriodicAutocorrelations — PeriodicAutocorrelations-class","title":"Class PeriodicAutocorrelations — PeriodicAutocorrelations-class","text":"Class PeriodicAutocorrelations.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicAutocorrelations-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class PeriodicAutocorrelations — PeriodicAutocorrelations-class","text":"Objects can created calls form new(\"PeriodicAutocorrelations\", ..., data).","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicAutocorrelations-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class PeriodicAutocorrelations — PeriodicAutocorrelations-class","text":"modelCycle: Object class \"BasicCycle\" ~~ data: Object class \"Lagged\" ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicAutocorrelations-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class PeriodicAutocorrelations — PeriodicAutocorrelations-class","text":"Class \"ModelCycleSpec\", directly. Class \"FlexibleLagged\", directly. Class \"VirtualPeriodicAutocorrelations\", directly. Class \"Lagged\", class \"FlexibleLagged\", distance 2. Class \"VirtualPeriodicModel\", class \"VirtualPeriodicAutocorrelations\", distance 2.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicAutocorrelations-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class PeriodicAutocorrelations — PeriodicAutocorrelations-class","text":"plot signature(x = \"PeriodicAutocorrelations\", y = \"missing\"): ...","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicAutocovarianceModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class PeriodicAutocovarianceModel — PeriodicAutocovarianceModel-class","title":"Class PeriodicAutocovarianceModel — PeriodicAutocovarianceModel-class","text":"Class PeriodicAutocovarianceModel.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicAutocovarianceModel-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class PeriodicAutocovarianceModel — PeriodicAutocovarianceModel-class","text":"Objects can created calls form new(\"PeriodicAutocovarianceModel\", ...).","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicAutocovarianceModel-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class PeriodicAutocovarianceModel — PeriodicAutocovarianceModel-class","text":"pcmatrix: Object class \"\" ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicAutocovarianceModel-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class PeriodicAutocovarianceModel — PeriodicAutocovarianceModel-class","text":"Class \"VirtualPeriodicAutocovarianceModel\", directly. Class \"PeriodicAutocovarianceSpec\", directly.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicAutocovarianceModel-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class PeriodicAutocovarianceModel — PeriodicAutocovarianceModel-class","text":"autocovariances signature(x = \"PeriodicAutocovarianceModel\"): ... [ signature(x = \"PeriodicAutocovarianceModel\", = \"missing\", j = \"missing\", drop = \"\"): ... [ signature(x = \"PeriodicAutocovarianceModel\", = \"missing\", j = \"numeric\", drop = \"\"): ... [ signature(x = \"PeriodicAutocovarianceModel\", = \"numeric\", j = \"missing\", drop = \"\"): ... [ signature(x = \"PeriodicAutocovarianceModel\", = \"numeric\", j = \"numeric\", drop = \"\"): ... [<- signature(x = \"PeriodicAutocovarianceModel\", = \"\", j = \"\", value = \"\"): ... autocovariances signature(x = \"PeriodicAutocovarianceModel\", maxlag = \"\"): ... backwardPartialCoefficients signature(x = \"PeriodicAutocovarianceModel\"): ... backwardPartialVariances signature(x = \"PeriodicAutocovarianceModel\"): ... maxLag signature(object = \"PeriodicAutocovarianceModel\"): ... partialAutocorrelations signature(x = \"PeriodicAutocovarianceModel\", maxlag = \"\", lag_0 = \"\"): ... partialAutocovariances signature(x = \"PeriodicAutocovarianceModel\"): ... partialCoefficients signature(x = \"PeriodicAutocovarianceModel\"): ... partialVariances signature(x = \"PeriodicAutocovarianceModel\"): ... pc.bU signature(x = \"PeriodicAutocovarianceModel\"): ... pc.fL signature(x = \"PeriodicAutocovarianceModel\"): ... pc.phis2 signature(x = \"PeriodicAutocovarianceModel\"): ... [[ signature(x = \"PeriodicAutocovarianceModel\", = \"numeric\"): ...","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicAutocovarianceSpec-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class PeriodicAutocovarianceSpec — PeriodicAutocovarianceSpec-class","title":"Class PeriodicAutocovarianceSpec — PeriodicAutocovarianceSpec-class","text":"Class PeriodicAutocovarianceSpec.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicAutocovarianceSpec-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class PeriodicAutocovarianceSpec — PeriodicAutocovarianceSpec-class","text":"Objects can created calls form new(\"PeriodicAutocovarianceSpec\", ...).","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicAutocovarianceSpec-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class PeriodicAutocovarianceSpec — PeriodicAutocovarianceSpec-class","text":"pcmatrix: Object class \"\" ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicAutocovarianceSpec-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class PeriodicAutocovarianceSpec — PeriodicAutocovarianceSpec-class","text":"methods defined class \"PeriodicAutocovarianceSpec\" signature.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicAutocovariances-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class PeriodicAutocovariances — PeriodicAutocovariances-class","title":"Class PeriodicAutocovariances — PeriodicAutocovariances-class","text":"Class PeriodicAutocovariances.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicAutocovariances-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class PeriodicAutocovariances — PeriodicAutocovariances-class","text":"Objects can created calls form new(\"PeriodicAutocovariances\", ..., data).","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicAutocovariances-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class PeriodicAutocovariances — PeriodicAutocovariances-class","text":"modelCycle: Object class \"BasicCycle\" ~~ data: Object class \"Lagged\" ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicAutocovariances-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class PeriodicAutocovariances — PeriodicAutocovariances-class","text":"Class \"ModelCycleSpec\", directly. Class \"FlexibleLagged\", directly. Class \"VirtualPeriodicAutocovariances\", directly. Class \"Lagged\", class \"FlexibleLagged\", distance 2. Class \"VirtualPeriodicModel\", class \"VirtualPeriodicAutocovariances\", distance 2.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicAutocovariances-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class PeriodicAutocovariances — PeriodicAutocovariances-class","text":"autocorrelations signature(x = \"PeriodicAutocovariances\", maxlag = \"\", lag_0 = \"missing\"): ... partialAutocorrelations signature(x = \"PeriodicAutocovariances\", maxlag = \"\", lag_0 = \"missing\"): ...","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicBJFilter-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class PeriodicBJFilter — PeriodicBJFilter-class","title":"Class PeriodicBJFilter — PeriodicBJFilter-class","text":"class filters following Box-Jenkins sign convention","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicBJFilter-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class PeriodicBJFilter — PeriodicBJFilter-class","text":"Objects can created calls form new(\"PeriodicBJFilter\", coef, order, ...).","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicBJFilter-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class PeriodicBJFilter — PeriodicBJFilter-class","text":"coef: Object class \"matrix\" ~~ order: Object class \"numeric\" ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicBJFilter-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class PeriodicBJFilter — PeriodicBJFilter-class","text":"Class \"PeriodicMonicFilterSpec\", directly. Class \"VirtualBJFilter\", directly. Class \"VirtualMonicFilterSpec\", class \"PeriodicMonicFilterSpec\", distance 2. Class \"VirtualMonicFilter\", class \"VirtualBJFilter\", distance 2.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicBJFilter-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class PeriodicBJFilter — PeriodicBJFilter-class","text":"filterCoef signature(object = \"PeriodicBJFilter\", convention = \"character\"): ... coerce signature(= \"matrix\", = \"PeriodicBJFilter\"): ... coerce signature(= \"PeriodicBJFilter\", = \"PeriodicSPFilter\"): ... coerce signature(= \"PeriodicSPFilter\", = \"PeriodicBJFilter\"): ... filterPoly signature(object = \"PeriodicBJFilter\"): ... filterPolyCoef signature(object = \"PeriodicBJFilter\"): ... show signature(object = \"PeriodicBJFilter\"): ...","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicBJFilter-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class PeriodicBJFilter — PeriodicBJFilter-class","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/PeriodicBJFilter-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class PeriodicBJFilter — PeriodicBJFilter-class","text":"","code":"## a toy filter of order c(3, 3, 3, 3) and 4 seasons co <- matrix(c(1, 1, 0,                2, 2, 2,                3, 0, 0,                4, 4, 4), nrow = 4, ncol = 3)  ## these are equivalent: bj1 <- new(\"PeriodicBJFilter\", coef = co) bj1b <- new(\"PeriodicBJFilter\", coef = co, order = 3) bj1c <- new(\"PeriodicBJFilter\", coef = co, order = c(3, 3, 3, 3)) identical(bj1b, bj1c) # TRUE #> [1] TRUE identical(bj1, bj1b) # FALSE but only because classbj1@order is \"integer\" #> [1] FALSE  # \\dontshow{     ## redundant wrap with show() below since pkgdown::build_site()     ## throws errors without that. # }     ## a more refined spec. for the order: show( new(\"PeriodicBJFilter\", coef = co, order = c(2, 3, 1, 3)) ) #> An object of class \"PeriodicBJFilter\" #> order:  2 3 1 3  #> Coefficients: #>      [,1] [,2] [,3] #> [1,]    1    2    0 #> [2,]    1    2    4 #> [3,]    0    3    4 #> [4,]    2    0    4 #>      [,1] [,2] [,3] #> [1,]    1    2    0 #> [2,]    1    2    4 #> [3,]    0    3    4 #> [4,]    2    0    4  ## as() show( as(co, \"PeriodicBJFilter\") ) #> An object of class \"PeriodicBJFilter\" #> order:  3 3 3 3  #> Coefficients: #>      [,1] [,2] [,3] #> [1,]    1    2    0 #> [2,]    1    2    4 #> [3,]    0    3    4 #> [4,]    2    0    4 #>      [,1] [,2] [,3] #> [1,]    1    2    0 #> [2,]    1    2    4 #> [3,]    0    3    4 #> [4,]    2    0    4 show( as(co, \"PeriodicSPFilter\") ) #> An object of class \"PeriodicSPFilter\" #> order:  3 3 3 3  #> Coefficients: #>      [,1] [,2] [,3] #> [1,]    1    2    0 #> [2,]    1    2    4 #> [3,]    0    3    4 #> [4,]    2    0    4 #>      [,1] [,2] [,3] #> [1,]    1    2    0 #> [2,]    1    2    4 #> [3,]    0    3    4 #> [4,]    2    0    4  ## change the sign convention: sp1 <- as(bj1, \"PeriodicSPFilter\")  ## the two parameterisations have different signs: bj1 #> An object of class \"PeriodicBJFilter\" #> order:  3 3 3 3  #> Coefficients: #>      [,1] [,2] [,3] #> [1,]    1    2    0 #> [2,]    1    2    4 #> [3,]    0    3    4 #> [4,]    2    0    4 sp1 #> An object of class \"PeriodicSPFilter\" #> order:  3 3 3 3  #> Coefficients: #>      [,1] [,2] [,3] #> [1,]   -1   -2    0 #> [2,]   -1   -2   -4 #> [3,]    0   -3   -4 #> [4,]   -2    0   -4  ## nevertheless, bj1 and sp1 represent the same filter filterPoly(bj1) #> List of polynomials: #> [[1]] #> 1 - x - 2*x^2  #>  #> [[2]] #> 1 - x - 2*x^2 - 4*x^3  #>  #> [[3]] #> 1 - 3*x^2 - 4*x^3  #>  #> [[4]] #> 1 - 2*x - 4*x^3  #>  filterPoly(sp1) #> List of polynomials: #> [[1]] #> 1 - x - 2*x^2  #>  #> [[2]] #> 1 - x - 2*x^2 - 4*x^3  #>  #> [[3]] #> 1 - 3*x^2 - 4*x^3  #>  #> [[4]] #> 1 - 2*x - 4*x^3  #>  identical(filterPoly(bj1), filterPoly(sp1)) # TRUE #> [1] FALSE  filterPolyCoef(bj1) #>      [,1] [,2] [,3] [,4] #> [1,]    1   -1   -2    0 #> [2,]    1   -1   -2   -4 #> [3,]    1    0   -3   -4 #> [4,]    1   -2    0   -4 filterPolyCoef(sp1) #>      [,1] [,2] [,3] [,4] #> [1,]    1   -1   -2    0 #> [2,]    1   -1   -2   -4 #> [3,]    1    0   -3   -4 #> [4,]    1   -2    0   -4 identical(filterPolyCoef(bj1), filterPolyCoef(sp1)) # TRUE #> [1] TRUE  filterOrder(bj1) #> [1] 3 3 3 3 nSeasons(bj1) #> [1] 4"},{"path":"https://geobosh.github.io/pcts/reference/PeriodicFilterModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class PeriodicFilterModel — PeriodicFilterModel-class","title":"Class PeriodicFilterModel — PeriodicFilterModel-class","text":"Class PeriodicFilterModel.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicFilterModel-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class PeriodicFilterModel — PeriodicFilterModel-class","text":"Objects can created calls form new(\"PeriodicFilterModel\", pcmean, pcintercept, ...).","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicFilterModel-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class PeriodicFilterModel — PeriodicFilterModel-class","text":"center: Object class \"numeric\" ~~ intercept: Object class \"numeric\" ~~ sigma2: Object class \"numeric\" ~~ ar: Object class \"PeriodicArFilter\" ~~ ma: Object class \"PeriodicMaFilter\" ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicFilterModel-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class PeriodicFilterModel — PeriodicFilterModel-class","text":"Class \"VirtualPeriodicFilterModel\", directly. Class \"PeriodicArmaSpec\", directly. Class \"PeriodicArmaFilter\", class \"PeriodicArmaSpec\", distance 2.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicIntegratedArmaSpec-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class PeriodicIntegratedArmaSpec — PeriodicIntegratedArmaSpec-class","title":"Class PeriodicIntegratedArmaSpec — PeriodicIntegratedArmaSpec-class","text":"Class PeriodicIntegratedArmaSpec.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicIntegratedArmaSpec-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class PeriodicIntegratedArmaSpec — PeriodicIntegratedArmaSpec-class","text":"Objects can created calls form new(\"PeriodicIntegratedArmaSpec\", ...).","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicIntegratedArmaSpec-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class PeriodicIntegratedArmaSpec — PeriodicIntegratedArmaSpec-class","text":"pcmodel: Object class \"PeriodicArmaModel\" ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicIntegratedArmaSpec-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class PeriodicIntegratedArmaSpec — PeriodicIntegratedArmaSpec-class","text":"sigmaSq signature(object = \"PeriodicIntegratedArmaSpec\"): ...","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicInterceptSpec-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class PeriodicInterceptSpec — PeriodicInterceptSpec-class","title":"Class PeriodicInterceptSpec — PeriodicInterceptSpec-class","text":"Class PeriodicInterceptSpec.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicInterceptSpec-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class PeriodicInterceptSpec — PeriodicInterceptSpec-class","text":"Objects can created calls form new(\"PeriodicInterceptSpec\", ...).","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicInterceptSpec-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class PeriodicInterceptSpec — PeriodicInterceptSpec-class","text":"center: Object class \"numeric\" ~~ intercept: Object class \"numeric\" ~~ sigma2: Object class \"numeric\" ~~ modelCycle: Object class \"BasicCycle\" ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicInterceptSpec-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class PeriodicInterceptSpec — PeriodicInterceptSpec-class","text":"Class \"numeric\", data part. Class \"vector\", class \"numeric\", distance 2. Class \"index\", class \"numeric\", distance 2. Class \"replValue\", class \"numeric\", distance 2.       Class \"numLike\", class \"numeric\", distance 2. Class \"number\", class \"numeric\", distance 2. Class \"atomicVector\", class \"numeric\", distance 2.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicInterceptSpec-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class PeriodicInterceptSpec — PeriodicInterceptSpec-class","text":"methods defined class \"PeriodicInterceptSpec\" signature. sigmaSq signature(object = \"PeriodicInterceptSpec\"): ... allSeasons signature(x = \"PeriodicInterceptSpec\", abb = \"\"): ... initialize signature(.Object = \"PeriodicInterceptSpec\"): ... nSeasons signature(object = \"PeriodicInterceptSpec\"): ... show signature(object = \"PeriodicInterceptSpec\"): ...","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicMTS-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Class \"PeriodicMTS\" main class multivariate periodic   time series package \"pcts\".","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicMTS-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class ","text":"Objects can created calls form   new(\"PeriodicMTS\", ...) recommended use    function pcts cases.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicMTS-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":".Data: Object class \"matrix\",       core data.  Several functions can used extract       various formats, see Vec.  cycle: Object class \"BasicCycle\",       representing seasonal information, see       pcCycle.  pcstart: Object class \"\",       time first observation.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicMTS-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class ","text":"Class \"PeriodicTimeSeries\", directly. Class \"matrix\", data part. Class \"Cyclic\", class \"PeriodicTimeSeries\", distance 2. Class \"array\", class \"matrix\", distance 2.       Class \"mMatrix\", class \"matrix\", distance 2. Class \"optionalMatrix\", class \"matrix\", distance 2. Class \"structure\", class \"matrix\", distance 3. Class \"vector\", class \"matrix\", distance 4, explicit coerce.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicMTS-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class ","text":"$ signature(x = \"PeriodicMTS\"): ... [ signature(x = \"PeriodicMTS\", = \"\", j = \"missing\", drop = \"\"): ... [ signature(x = \"PeriodicMTS\", = \"missing\", j = \"missing\", drop = \"\"): ... [[ signature(x = \"PeriodicMTS\", = \"\"): ... coerce signature(= \"mts\", = \"PeriodicMTS\"): ... coerce signature(= \"PeriodicMTS\", = \"ts\"): ... coerce signature(= \"ts\", = \"PeriodicMTS\"): ... plot signature(x = \"PeriodicMTS\", y = \"missing\"): ... show signature(object = \"PeriodicMTS\"): ... summary signature(object = \"PeriodicMTS\"): ... [ signature(x = \"PeriodicMTS\", = \"\", j = \"\", drop = \"\"): ... [ signature(x = \"PeriodicMTS\", = \"AnyDateTime\", j = \"\", drop = \"\"): ... [ signature(x = \"PeriodicMTS\", = \"AnyDateTime\", j = \"missing\", drop = \"\"): ... [[ signature(x = \"PeriodicMTS\", = \"\", j = \"\"): ... fitPM signature(model = \"PeriodicArModel\", x = \"PeriodicMTS\"): ... pcApply signature(object = \"PeriodicMTS\"): ... pcMean signature(object = \"PeriodicMTS\"): ...","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/PeriodicMTS-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class ","text":"","code":"pcfr <- pcts(dataFranses1996) colnames(pcfr)[4] # \"GermanyGNP\" #> [1] \"GermanyGNP\"  ## extracting single time series as univariate  class(pcfr[[4]]) # \"PeriodicTS\" #> [1] \"PeriodicTS\" #> attr(,\"package\") #> [1] \"pcts\" identical(pcfr[[4]], pcfr$GermanyGNP )     # TRUE #> [1] TRUE identical(pcfr[[4]], pcfr[[\"GermanyGNP\"]]) # TRUE #> [1] TRUE plot(pcfr[[4]])   ## ... and as multivariate pcfr[4] #  \"PeriodicMTS\" #> An object of class \"PeriodicMTS\" #> Slot \"cycle\": Object from built-in class 'QuarterYearCycle' #> Cycle start: Quarter_1  #>  #>         GermanyGNP #> Y1955_1         NA #> Y1955_2         NA #> Y1955_3         NA #> Y1955_4         NA #> Y1956_1         NA #> Y1956_2         NA #> Y1956_3         NA #> Y1956_4         NA #> Y1957_1         NA #> Y1957_2         NA #> Y1957_3         NA #> Y1957_4         NA #> Y1958_1         NA #> Y1958_2         NA #> Y1958_3         NA #> Y1958_4         NA #> Y1959_1         NA #> Y1959_2         NA #> Y1959_3         NA #> Y1959_4         NA #> Y1960_1      167.0 #> Y1960_2      176.2 #> Y1960_3      198.0 #> Y1960_4      190.5 #> Y1961_1      180.1 #> Y1961_2      184.9 #> Y1961_3      202.9 #> Y1961_4      195.8 #> Y1962_1      185.4 #> Y1962_2      195.0 #> Y1962_3      214.5 #> Y1962_4      204.9 #> Y1963_1      183.0 #> Y1963_2      199.9 #> Y1963_3      223.5 #> Y1963_4      215.4 #> Y1964_1      201.6 #> Y1964_2      214.4 #> Y1964_3      232.8 #> Y1964_4      226.9 #> Y1965_1      213.4 #> Y1965_2      226.7 #> Y1965_3      243.4 #> Y1965_4      239.2 #> Y1966_1      224.3 #> Y1966_2      235.5 #> Y1966_3      250.0 #> Y1966_4      240.3 #> Y1967_1      220.3 #> Y1967_2      232.6 #> Y1967_3      248.3 #> Y1967_4      248.2 #> Y1968_1      226.9 #> Y1968_2      243.0 #> Y1968_3      267.1 #> Y1968_4      267.2 #> Y1969_1      244.0 #> Y1969_2      262.3 #> Y1969_3      287.1 #> Y1969_4      286.2 #> Y1970_1      257.4 #> Y1970_2      280.1 #> Y1970_3      298.2 #> Y1970_4      298.3 #> Y1971_1      274.5 #> Y1971_2      286.2 #> Y1971_3      304.8 #> Y1971_4      302.5 #> Y1972_1      286.0 #> Y1972_2      296.9 #> Y1972_3      315.2 #> Y1972_4      318.9 #> Y1973_1      304.5 #> Y1973_2      312.1 #> Y1973_3      328.7 #> Y1973_4      328.8 #> Y1974_1      309.4 #> Y1974_2      314.5 #> Y1974_3      328.4 #> Y1974_4      324.2 #> Y1975_1      298.2 #> Y1975_2      308.2 #> Y1975_3      322.1 #> Y1975_4      329.5 #> Y1976_1      316.1 #> Y1976_2      328.1 #> Y1976_3      335.2 #> Y1976_4      348.8 #> Y1977_1      328.6 #> Y1977_2      334.1 #> Y1977_3      341.8 #> Y1977_4      358.9 #> Y1978_1      336.5 #> Y1978_2      346.4 #> Y1978_3      354.8 #> Y1978_4      370.2 #> Y1979_1      348.3 #> Y1979_2      361.5 #> Y1979_3      369.8 #> Y1979_4      384.0 #> Y1980_1      365.3 #> Y1980_2      365.4 #> Y1980_3      372.8 #> Y1980_4      381.7 #> Y1981_1      360.9 #> Y1981_2      364.9 #> Y1981_3      374.8 #> Y1981_4      384.7 #> Y1982_1      357.5 #> Y1982_2      364.8 #> Y1982_3      369.2 #> Y1982_4      379.5 #> Y1983_1      359.4 #> Y1983_2      370.4 #> Y1983_3      376.0 #> Y1983_4      393.1 #> Y1984_1      375.8 #> Y1984_2      375.6 #> Y1984_3      391.2 #> Y1984_4      405.5 #> Y1985_1      375.8 #> Y1985_2      387.2 #> Y1985_3      402.7 #> Y1985_4      412.4 #> Y1986_1      381.0 #> Y1986_2      400.1 #> Y1986_3      411.4 #> Y1986_4      422.2 #> Y1987_1      388.3 #> Y1987_2      402.4 #> Y1987_3      417.5 #> Y1987_4      431.6 #> Y1988_1      405.3 #> Y1988_2      416.6 #> Y1988_3      432.2 #> Y1988_4      446.4 #> Y1989_1      424.1 #> Y1989_2      436.3 #> Y1989_3      445.0 #> Y1989_4      460.6 #> Y1990_1      442.0 #> Y1990_2      452.1 #> Y1990_3      468.9 #> Y1990_4      482.9 #> Y1991_1         NA #> Y1991_2         NA #> Y1991_3         NA #> Y1991_4         NA plot(pcfr[4])   ## extracting more than one time series plot(pcfr[2:4])  summary(pcfr[2:4]) #>    USTotalIPI     CanadaUnemployment   GermanyGNP    #>  Min.   : 37.10   Min.   : 210.0     Min.   :167.0   #>  1st Qu.: 61.30   1st Qu.: 372.8     1st Qu.:243.8   #>  Median : 76.60   Median : 587.0     Median :328.2   #>  Mean   : 77.22   Mean   : 707.4     Mean   :317.9   #>  3rd Qu.: 93.25   3rd Qu.: 940.5     3rd Qu.:375.9   #>  Max.   :118.30   Max.   :1630.0     Max.   :482.9   #>  NA's   :20       NA's   :36         NA's   :24       pcfr2 <- pcfr[[2]] plot(pcfr2)"},{"path":"https://geobosh.github.io/pcts/reference/PeriodicMTS_ts-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Class \"PeriodicMTS_ts\" periodic class holding   multivariate \"ts\" objects.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicMTS_ts-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class ","text":"Objects can created calls form new(\"PeriodicMTS_ts\", x, ...).","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicMTS_ts-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":".Data: Object class \"vector\" ~~ cycle: Object class \"BasicCycle\" ~~ pcstart: Object class \"\" ~~ tsp: Object class \"numeric\" ~~ .S3Class: Object class \"character\" ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicMTS_ts-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class ","text":"Class \"PeriodicTimeSeries\", directly. Class \"ts\", directly. Class \"Cyclic\", class \"PeriodicTimeSeries\", distance 2. Class \"structure\", class \"ts\", distance 2. Class \"oldClass\", class \"ts\", distance 2. Class \"vector\", class \"ts\", distance 3, explicit coerce.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicMTS_ts-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class ","text":"coerce signature(= \"ts\", = \"PeriodicMTS_ts\"): ... initialize signature(.Object = \"PeriodicMTS_ts\"): ...","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicMTS_zooreg-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Class \"PeriodicMTS_zooreg\" periodic class holding   multivariate \"zooreg\" objects.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicMTS_zooreg-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class ","text":"Objects can created calls form new(\"PeriodicMTS_zooreg\", ...).","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicMTS_zooreg-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"cycle: Object class \"BasicCycle\" ~~ .S3Class: Object class \"character\" ~~ pcstart: Object class \"\" ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicMTS_zooreg-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class ","text":"Class \"PeriodicTimeSeries\", directly. Class \"ts\", directly. Class \"Cyclic\", class \"PeriodicTimeSeries\", distance 2. Class \"structure\", class \"ts\", distance 2. Class \"oldClass\", class \"ts\", distance 2. Class \"vector\", class \"ts\", distance 3, explicit coerce.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicMTS_zooreg-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class ","text":"methods defined class \"PeriodicMTS_zooreg\" signature.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicMaModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class PeriodicMaModel — PeriodicMaModel-class","title":"Class PeriodicMaModel — PeriodicMaModel-class","text":"Class PeriodicMaModel.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicMaModel-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class PeriodicMaModel — PeriodicMaModel-class","text":"Objects can created calls form new(\"PeriodicMaModel\", ar, ma, sigma2, ...).","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicMaModel-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class PeriodicMaModel — PeriodicMaModel-class","text":"sigma2: Object class \"numeric\" ~~ ar: Object class \"PeriodicArFilter\" ~~ ma: Object class \"PeriodicMaFilter\" ~~ center: Object class \"numeric\" ~~ intercept: Object class \"numeric\" ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicMaModel-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class PeriodicMaModel — PeriodicMaModel-class","text":"Class \"PeriodicArmaModel\", directly. Class \"VirtualPeriodicArmaModel\", class \"PeriodicArmaModel\", distance 2. Class \"PeriodicArmaSpec\", class \"PeriodicArmaModel\", distance 2. Class \"VirtualPeriodicFilterModel\", class \"PeriodicArmaModel\", distance 3. Class \"VirtualPeriodicStationaryModel\", class \"PeriodicArmaModel\", distance 3. Class \"PeriodicArmaFilter\", class \"PeriodicArmaModel\", distance 3. Class \"VirtualPeriodicAutocovarianceModel\", class \"PeriodicArmaModel\", distance 4. Class \"VirtualPeriodicMeanModel\", class \"PeriodicArmaModel\", distance 4.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicMaModel-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class PeriodicMaModel — PeriodicMaModel-class","text":"methods defined class \"PeriodicMaModel\" signature.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicSPFilter-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class PeriodicSPFilter — PeriodicSPFilter-class","title":"Class PeriodicSPFilter — PeriodicSPFilter-class","text":"class filters following signal processing sign convention.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicSPFilter-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class PeriodicSPFilter — PeriodicSPFilter-class","text":"Objects can created calls form new(\"PeriodicSPFilter\", coef, order, ...).","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicSPFilter-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class PeriodicSPFilter — PeriodicSPFilter-class","text":"coef: Object class \"matrix\" ~~ order: Object class \"numeric\" ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicSPFilter-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class PeriodicSPFilter — PeriodicSPFilter-class","text":"Class \"PeriodicMonicFilterSpec\", directly. Class \"VirtualSPFilter\", directly. Class \"VirtualMonicFilterSpec\", class \"PeriodicMonicFilterSpec\", distance 2. Class \"VirtualMonicFilter\", class \"VirtualSPFilter\", distance 2.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicSPFilter-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class PeriodicSPFilter — PeriodicSPFilter-class","text":"filterCoef signature(object = \"PeriodicSPFilter\", convention = \"character\"): ...","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicSPFilter-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class PeriodicSPFilter — PeriodicSPFilter-class","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/PeriodicSPFilter-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class PeriodicSPFilter — PeriodicSPFilter-class","text":"","code":"## see \"PeriodicBJFilter-class\" for examples"},{"path":"https://geobosh.github.io/pcts/reference/PeriodicTS-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Class \"PeriodicTS\" main class univariate periodic   time series package \"pcts\".","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicTS-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class ","text":"Objects can created numeric vectors objects   time series classes calling pcts (recommended   cases). possible also use calls form new(\"PeriodicTS\",   ...). useful programming.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicTS-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":".Data: Object class \"numeric\",       core data.  Several functions can used extract       various formats, see Vec.  cycle: Object class \"BasicCycle\",       representing seasonal information, see       pcCycle.  pcstart: Object class \"\",       time first observation.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicTS-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class ","text":"Class \"PeriodicTimeSeries\", directly. Class \"numeric\", data part. Class \"Cyclic\", class \"PeriodicTimeSeries\", distance 2. Class \"vector\", class \"numeric\", distance 2. Class \"index\", class \"numeric\", distance 2. Class \"replValue\", class \"numeric\", distance 2.       Class \"numLike\", class \"numeric\", distance 2. Class \"number\", class \"numeric\", distance 2. Class \"atomicVector\", class \"numeric\", distance 2. Class \"numericVector\", class \"numeric\", distance 2. Class \"replValueSp\", class \"numeric\", distance 3. Class \"Mnumeric\", class \"numeric\", distance 3.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicTS-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class ","text":"coerce signature(= \"mts\", = \"PeriodicTS\"): ... coerce signature(= \"PeriodicTS\", = \"ts\"): ... coerce signature(= \"ts\", = \"PeriodicTS\"): ... plot signature(x = \"PeriodicTS\", y = \"missing\"): ... show signature(object = \"PeriodicTS\"): ... summary signature(object = \"PeriodicTS\"): ...","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/PeriodicTS_ts-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Class \"PeriodicTS_ts\" periodic class holding   \"ts\" objects.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicTS_ts-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class ","text":"Objects can created calls form new(\"PeriodicTS_zooreg\", ...).","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicTS_ts-class.html","id":"objects-from-the-class-1","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class ","text":"Objects can created calls form new(\"PeriodicTS_ts\", x, ...).","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicTS_ts-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":".Data: Object class \"vector\" ~~ cycle: Object class \"BasicCycle\" ~~ tsp: Object class \"numeric\" ~~ .S3Class: Object class \"character\" ~~ pcstart: Object class \"\" ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicTS_ts-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class ","text":"Class \"PeriodicTimeSeries\", directly. Class \"ts\", directly. Class \"Cyclic\", class \"PeriodicTimeSeries\", distance 2. Class \"structure\", class \"ts\", distance 2. Class \"oldClass\", class \"ts\", distance 2. Class \"vector\", class \"ts\", distance 3, explicit coerce.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicTS_ts-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class ","text":"coerce signature(= \"ts\", = \"PeriodicTS_ts\"): ... initialize signature(.Object = \"PeriodicTS_ts\"): ...","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicTS_zooreg-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Class \"PeriodicTS_zooreg\" periodic class holding   \"zooreg\" objects.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicTS_zooreg-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class ","text":"Objects can created calls form new(\"PeriodicTS_zooreg\", ...).","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicTS_zooreg-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"cycle: Object class \"BasicCycle\" ~~ .S3Class: Object class \"character\" ~~ pcstart: Object class \"\" ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicTS_zooreg-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class ","text":"Class \"PeriodicTimeSeries\", directly. Class \"ts\", directly. Class \"Cyclic\", class \"PeriodicTimeSeries\", distance 2. Class \"structure\", class \"ts\", distance 2. Class \"oldClass\", class \"ts\", distance 2. Class \"vector\", class \"ts\", distance 3, explicit coerce.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicTS_zooreg-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class ","text":"methods defined class \"PeriodicTS_zooreg\" signature.","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/PeriodicTimeSeries-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class PeriodicTimeSeries — PeriodicTimeSeries-class","title":"Class PeriodicTimeSeries — PeriodicTimeSeries-class","text":"Class PeriodicTimeSeries.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicTimeSeries-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class PeriodicTimeSeries — PeriodicTimeSeries-class","text":"virtual Class: objects may created .","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicTimeSeries-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class PeriodicTimeSeries — PeriodicTimeSeries-class","text":"cycle: Object class \"BasicCycle\". pcstart: Object class \"\".","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicTimeSeries-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class PeriodicTimeSeries — PeriodicTimeSeries-class","text":"Class \"Cyclic\", directly.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicTimeSeries-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class PeriodicTimeSeries — PeriodicTimeSeries-class","text":"pcTest signature(x = \"PeriodicTimeSeries\", nullmodel = \"character\"): ... head signature(x = \"PeriodicTimeSeries\"): ... pcCycle signature(x = \"PeriodicTimeSeries\", type = \"\"): ... tail signature(x = \"PeriodicTimeSeries\"): ...","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicVector-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class PeriodicVector — PeriodicVector-class","title":"Class PeriodicVector — PeriodicVector-class","text":"Objects methods class PeriodicVector.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicVector-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class PeriodicVector — PeriodicVector-class","text":"","code":"PeriodicVector(x, period = length(x))"},{"path":"https://geobosh.github.io/pcts/reference/PeriodicVector-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class PeriodicVector — PeriodicVector-class","text":"x values inidices 1 period, numeric. period period, defaults length(x).","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicVector-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Class PeriodicVector — PeriodicVector-class","text":"\\(p\\)-periodic vector, \\(X\\), \\(X_{+pk} = X_i\\)   integers \\(,k\\). Class PeriodicVector stores values \\(X_1,\\ldots,X_p\\)   provides indexing methods extracting setting   elements.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicVector-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Class PeriodicVector — PeriodicVector-class","text":"object class \"PeriodicVector\"","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicVector-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class PeriodicVector — PeriodicVector-class","text":"Objects can created calls form new(\"PeriodicVector\", ...) conveniently using \"PeriodicVector()\".","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicVector-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class PeriodicVector — PeriodicVector-class","text":".Data: Object class \"numeric\" ~~ period: Object class \"numeric\" ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicVector-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class PeriodicVector — PeriodicVector-class","text":"Class \"numeric\", data part. Class \"vector\", class \"numeric\", distance 2. Class \"atomicVector\", class \"numeric\", distance 2. Class \"index\", class \"numeric\", distance 2. Class \"numLike\", class \"numeric\", distance 2. Class \"number\", class \"numeric\", distance 2. Class \"replValue\", class \"numeric\", distance 2.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicVector-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class PeriodicVector — PeriodicVector-class","text":"\"PeriodicVector\" methods defined \"[\"   \"[<-\". Arithmetic operations just inherit recycling rules   \"numeric\". [ signature(x = \"PeriodicVector\", = \"\", j = \"\", drop = \"\"): ... [ signature(x = \"PeriodicVector\", = \"\", j = \"missing\", drop = \"\"): ... [ signature(x = \"PeriodicVector\", = \"missing\", j = \"\", drop = \"\"): ... [ signature(x = \"PeriodicVector\", = \"missing\", j = \"missing\", drop = \"\"): ... [<- signature(x = \"PeriodicVector\", = \"\", j = \"\", value = \"\"): ... [<- signature(x = \"PeriodicVector\", = \"missing\", j = \"\", value = \"\"): ...","code":""},{"path":"https://geobosh.github.io/pcts/reference/PeriodicVector-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class PeriodicVector — PeriodicVector-class","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/PeriodicVector-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class PeriodicVector — PeriodicVector-class","text":"","code":"PeriodicVector(1:4, period = 4) #> An object of class \"PeriodicVector\" #> [1] 1 2 3 4 #> Slot \"period\": #> [1] 4 #>  PeriodicVector(1:4) ## same #> An object of class \"PeriodicVector\" #> [1] 1 2 3 4 #> Slot \"period\": #> [1] 4 #>  new(\"PeriodicVector\", 1:4, period = 4) #> An object of class \"PeriodicVector\" #> [1] 1 2 3 4 #> Slot \"period\": #> [1] 4 #>   ## if period is given but x is missing, the vector is filled with NA's PeriodicVector(period = 4) #> An object of class \"PeriodicVector\" #> [1] NA NA NA NA #> Slot \"period\": #> [1] 4 #>   ## this throws error, since length(x) != period: ##    PeriodicVector(1:3, period = 4)  ## extract x <- PeriodicVector(1:4) x[3:12] #>  [1] 3 4 1 2 3 4 1 2 3 4 x[c(3, 7, 11, 15)] #> [1] 3 3 3 3  # any indices in (-Inf, Inf) work x[0] #> [1] 4 x[-3:0] #> [1] 1 2 3 4  ## \"[<-\" works on the underling vector x[1] <- 11; x #> An object of class \"PeriodicVector\" #> [1] 11  2  3  4 #> Slot \"period\": #> [1] 4 #>   ## modulo indexing works also in assignments: x[5] <- 21; x #> An object of class \"PeriodicVector\" #> [1] 21  2  3  4 #> Slot \"period\": #> [1] 4 #>   ## empty index returns the underlying vector x[] #> [1] 21  2  3  4  ## the recycling rule applies on assignment x[] <- 9; x #> An object of class \"PeriodicVector\" #> [1] 9 9 9 9 #> Slot \"period\": #> [1] 4 #>  x[] <- 1:2; x #> An object of class \"PeriodicVector\" #> [1] 1 2 1 2 #> Slot \"period\": #> [1] 4 #>   ## this gives warning, as for numeric vectors ##     x[] <- 8:1 ## compare: ##     x <- 1:4 ##     x[] <- 8:1  ## arithmetic works as usual: 2 * x #> An object of class \"PeriodicVector\" #> [1] 2 4 2 4 #> Slot \"period\": #> [1] 4 #>  x + 1:4 #> An object of class \"PeriodicVector\" #> [1] 2 4 4 6 #> Slot \"period\": #> [1] 4 #>  ## x + 1:3 # warning - '... a multiple ...'"},{"path":"https://geobosh.github.io/pcts/reference/PiPeriodicArModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class PiPeriodicArModel — PiPeriodicArModel-class","title":"Class PiPeriodicArModel — PiPeriodicArModel-class","text":"Class PiPeriodicArModel.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PiPeriodicArModel-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class PiPeriodicArModel — PiPeriodicArModel-class","text":"Objects can created calls form new(\"PiPeriodicArModel\", ...).","code":""},{"path":"https://geobosh.github.io/pcts/reference/PiPeriodicArModel-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class PiPeriodicArModel — PiPeriodicArModel-class","text":"piorder: Object class \"numeric\" ~~ picoef: Object class \"matrix\" ~~ pcmodel: Object class \"PeriodicArmaModel\" ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/PiPeriodicArModel-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class PiPeriodicArModel — PiPeriodicArModel-class","text":"Class \"PiPeriodicArmaModel\", directly. Class \"VirtualPeriodicFilterModel\", class \"PiPeriodicArmaModel\", distance 2. Class \"PeriodicIntegratedArmaSpec\", class \"PiPeriodicArmaModel\", distance 2.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PiPeriodicArModel-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class PiPeriodicArModel — PiPeriodicArModel-class","text":"fitPM signature(x = \"\", model = \"PiPeriodicArModel\"): ...","code":""},{"path":"https://geobosh.github.io/pcts/reference/PiPeriodicArmaModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class PiPeriodicArmaModel — PiPeriodicArmaModel-class","title":"Class PiPeriodicArmaModel — PiPeriodicArmaModel-class","text":"Class PiPeriodicArmaModel.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PiPeriodicArmaModel-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class PiPeriodicArmaModel — PiPeriodicArmaModel-class","text":"Objects can created calls form new(\"PiPeriodicArmaModel\", ...).","code":""},{"path":"https://geobosh.github.io/pcts/reference/PiPeriodicArmaModel-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class PiPeriodicArmaModel — PiPeriodicArmaModel-class","text":"piorder: Object class \"numeric\" ~~ picoef: Object class \"matrix\" ~~ pcmodel: Object class \"PeriodicArmaModel\" ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/PiPeriodicArmaModel-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class PiPeriodicArmaModel — PiPeriodicArmaModel-class","text":"Class \"VirtualPeriodicFilterModel\", directly. Class \"PeriodicIntegratedArmaSpec\", directly.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PiPeriodicArmaModel-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class PiPeriodicArmaModel — PiPeriodicArmaModel-class","text":"methods defined class \"PiPeriodicArmaModel\" signature.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PiPeriodicMaModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class PiPeriodicMaModel — PiPeriodicMaModel-class","title":"Class PiPeriodicMaModel — PiPeriodicMaModel-class","text":"Class PiPeriodicMaModel.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PiPeriodicMaModel-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class PiPeriodicMaModel — PiPeriodicMaModel-class","text":"Objects can created calls form new(\"PiPeriodicMaModel\", ...).","code":""},{"path":"https://geobosh.github.io/pcts/reference/PiPeriodicMaModel-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class PiPeriodicMaModel — PiPeriodicMaModel-class","text":"piorder: Object class \"numeric\" ~~ picoef: Object class \"matrix\" ~~ pcmodel: Object class \"PeriodicArmaModel\" ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/PiPeriodicMaModel-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class PiPeriodicMaModel — PiPeriodicMaModel-class","text":"Class \"PiPeriodicArmaModel\", directly. Class \"VirtualPeriodicFilterModel\", class \"PiPeriodicArmaModel\", distance 2. Class \"PeriodicIntegratedArmaSpec\", class \"PiPeriodicArmaModel\", distance 2.","code":""},{"path":"https://geobosh.github.io/pcts/reference/PiPeriodicMaModel-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class PiPeriodicMaModel — PiPeriodicMaModel-class","text":"methods defined class \"PiPeriodicMaModel\" signature.","code":""},{"path":"https://geobosh.github.io/pcts/reference/SLTypeMatrix-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class SLTypeMatrix — SLTypeMatrix-class","title":"Class SLTypeMatrix — SLTypeMatrix-class","text":"Class SLTypeMatrix virtual class classes can hold   objects season-lag conventions.","code":""},{"path":"https://geobosh.github.io/pcts/reference/SLTypeMatrix-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class SLTypeMatrix — SLTypeMatrix-class","text":"virtual Class: objects may created .","code":""},{"path":"https://geobosh.github.io/pcts/reference/SLTypeMatrix-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class SLTypeMatrix — SLTypeMatrix-class","text":"methods defined class \"SLTypeMatrix\" signature.","code":""},{"path":"https://geobosh.github.io/pcts/reference/SLTypeMatrix-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class SLTypeMatrix — SLTypeMatrix-class","text":"","code":"showClass(\"SLTypeMatrix\") #> Virtual Class \"SLTypeMatrix\" [package \"pcts\"] #>  #> No Slots, prototype of class \"slMatrix\" #>  #> Known Subclasses: \"slMatrix\", \"Lagged2d\""},{"path":"https://geobosh.github.io/pcts/reference/SamplePeriodicAutocorrelations-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class SamplePeriodicAutocorrelations — SamplePeriodicAutocorrelations-class","title":"Class SamplePeriodicAutocorrelations — SamplePeriodicAutocorrelations-class","text":"Class SamplePeriodicAutocorrelations.","code":""},{"path":"https://geobosh.github.io/pcts/reference/SamplePeriodicAutocorrelations-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class SamplePeriodicAutocorrelations — SamplePeriodicAutocorrelations-class","text":"Objects can created calls form new(\"SamplePeriodicAutocorrelations\", ..., data).","code":""},{"path":"https://geobosh.github.io/pcts/reference/SamplePeriodicAutocorrelations-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class SamplePeriodicAutocorrelations — SamplePeriodicAutocorrelations-class","text":"modelCycle: Object class \"BasicCycle\" ~~ data: Object class \"Lagged\" ~~ n: Object class \"numeric\" ~~ varnames: Object class \"character\" ~~ objectname: Object class \"character\" ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/SamplePeriodicAutocorrelations-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class SamplePeriodicAutocorrelations — SamplePeriodicAutocorrelations-class","text":"Class \"PeriodicAutocorrelations\", directly. Class \"Fitted\", directly. Class \"ModelCycleSpec\", class \"PeriodicAutocorrelations\", distance 2. Class \"FlexibleLagged\", class \"PeriodicAutocorrelations\", distance 2. Class \"VirtualPeriodicAutocorrelations\", class \"PeriodicAutocorrelations\", distance 2. Class \"Lagged\", class \"PeriodicAutocorrelations\", distance 3. Class \"VirtualPeriodicModel\", class \"PeriodicAutocorrelations\", distance 3.","code":""},{"path":"https://geobosh.github.io/pcts/reference/SamplePeriodicAutocorrelations-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class SamplePeriodicAutocorrelations — SamplePeriodicAutocorrelations-class","text":"methods defined class \"SamplePeriodicAutocorrelations\" signature.","code":""},{"path":"https://geobosh.github.io/pcts/reference/SamplePeriodicAutocovariances-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class SamplePeriodicAutocovariances — SamplePeriodicAutocovariances-class","title":"Class SamplePeriodicAutocovariances — SamplePeriodicAutocovariances-class","text":"Class SamplePeriodicAutocovariances.","code":""},{"path":"https://geobosh.github.io/pcts/reference/SamplePeriodicAutocovariances-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class SamplePeriodicAutocovariances — SamplePeriodicAutocovariances-class","text":"Objects can created calls form new(\"SamplePeriodicAutocovariances\", ..., data).","code":""},{"path":"https://geobosh.github.io/pcts/reference/SamplePeriodicAutocovariances-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class SamplePeriodicAutocovariances — SamplePeriodicAutocovariances-class","text":"modelCycle: Object class \"BasicCycle\" ~~ data: Object class \"Lagged\" ~~ n: Object class \"numeric\" ~~ varnames: Object class \"character\" ~~ objectname: Object class \"character\" ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/SamplePeriodicAutocovariances-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class SamplePeriodicAutocovariances — SamplePeriodicAutocovariances-class","text":"Class \"PeriodicAutocovariances\", directly. Class \"Fitted\", directly. Class \"ModelCycleSpec\", class \"PeriodicAutocovariances\", distance 2. Class \"FlexibleLagged\", class \"PeriodicAutocovariances\", distance 2. Class \"VirtualPeriodicAutocovariances\", class \"PeriodicAutocovariances\", distance 2. Class \"Lagged\", class \"PeriodicAutocovariances\", distance 3. Class \"VirtualPeriodicModel\", class \"PeriodicAutocovariances\", distance 3.","code":""},{"path":"https://geobosh.github.io/pcts/reference/SamplePeriodicAutocovariances-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class SamplePeriodicAutocovariances — SamplePeriodicAutocovariances-class","text":"autocorrelations signature(x = \"SamplePeriodicAutocovariances\", maxlag = \"\", lag_0 = \"missing\"): ...","code":""},{"path":"https://geobosh.github.io/pcts/reference/SiPeriodicArModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class SiPeriodicArModel — SiPeriodicArModel-class","title":"Class SiPeriodicArModel — SiPeriodicArModel-class","text":"Class SiPeriodicArModel.","code":""},{"path":"https://geobosh.github.io/pcts/reference/SiPeriodicArModel-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class SiPeriodicArModel — SiPeriodicArModel-class","text":"Objects can created calls form new(\"SiPeriodicArModel\", ...).","code":""},{"path":"https://geobosh.github.io/pcts/reference/SiPeriodicArModel-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class SiPeriodicArModel — SiPeriodicArModel-class","text":"iorder: Object class \"numeric\" ~~ siorder: Object class \"numeric\" ~~ pcmodel: Object class \"PeriodicArmaModel\" ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/SiPeriodicArModel-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class SiPeriodicArModel — SiPeriodicArModel-class","text":"Class \"SiPeriodicArmaModel\", directly. Class \"VirtualPeriodicFilterModel\", class \"SiPeriodicArmaModel\", distance 2. Class \"PeriodicIntegratedArmaSpec\", class \"SiPeriodicArmaModel\", distance 2.","code":""},{"path":"https://geobosh.github.io/pcts/reference/SiPeriodicArModel-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class SiPeriodicArModel — SiPeriodicArModel-class","text":"fitPM signature(model = \"SiPeriodicArModel\", x = \"\"): ...","code":""},{"path":"https://geobosh.github.io/pcts/reference/SiPeriodicArmaModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class SiPeriodicArmaModel — SiPeriodicArmaModel-class","title":"Class SiPeriodicArmaModel — SiPeriodicArmaModel-class","text":"Class SiPeriodicArmaModel.","code":""},{"path":"https://geobosh.github.io/pcts/reference/SiPeriodicArmaModel-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class SiPeriodicArmaModel — SiPeriodicArmaModel-class","text":"Objects can created calls form new(\"SiPeriodicArmaModel\", ...).","code":""},{"path":"https://geobosh.github.io/pcts/reference/SiPeriodicArmaModel-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class SiPeriodicArmaModel — SiPeriodicArmaModel-class","text":"iorder: Object class \"numeric\" ~~ siorder: Object class \"numeric\" ~~ pcmodel: Object class \"PeriodicArmaModel\" ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/SiPeriodicArmaModel-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class SiPeriodicArmaModel — SiPeriodicArmaModel-class","text":"Class \"VirtualPeriodicFilterModel\", directly. Class \"PeriodicIntegratedArmaSpec\", directly.","code":""},{"path":"https://geobosh.github.io/pcts/reference/SiPeriodicArmaModel-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class SiPeriodicArmaModel — SiPeriodicArmaModel-class","text":"methods defined class \"SiPeriodicArmaModel\" signature.","code":""},{"path":"https://geobosh.github.io/pcts/reference/SiPeriodicMaModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class SiPeriodicMaModel — SiPeriodicMaModel-class","title":"Class SiPeriodicMaModel — SiPeriodicMaModel-class","text":"Class SiPeriodicMaModel.","code":""},{"path":"https://geobosh.github.io/pcts/reference/SiPeriodicMaModel-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class SiPeriodicMaModel — SiPeriodicMaModel-class","text":"Objects can created calls form new(\"SiPeriodicMaModel\", ...).","code":""},{"path":"https://geobosh.github.io/pcts/reference/SiPeriodicMaModel-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class SiPeriodicMaModel — SiPeriodicMaModel-class","text":"iorder: Object class \"numeric\" ~~ siorder: Object class \"numeric\" ~~ pcmodel: Object class \"PeriodicArmaModel\" ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/SiPeriodicMaModel-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class SiPeriodicMaModel — SiPeriodicMaModel-class","text":"Class \"SiPeriodicArmaModel\", directly. Class \"VirtualPeriodicFilterModel\", class \"SiPeriodicArmaModel\", distance 2. Class \"PeriodicIntegratedArmaSpec\", class \"SiPeriodicArmaModel\", distance 2.","code":""},{"path":"https://geobosh.github.io/pcts/reference/SiPeriodicMaModel-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class SiPeriodicMaModel — SiPeriodicMaModel-class","text":"methods defined class \"SiPeriodicMaModel\" signature.","code":""},{"path":"https://geobosh.github.io/pcts/reference/SimpleCycle-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class SimpleCycle — SimpleCycle-class","title":"Class SimpleCycle — SimpleCycle-class","text":"Class SimpleCycle.","code":""},{"path":"https://geobosh.github.io/pcts/reference/SimpleCycle-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class SimpleCycle — SimpleCycle-class","text":"Objects can created calls form new(\"SimpleCycle\",   nseasons, seasons, first).  addition number seasons, class \"SimpleCycle\" holds   also seasons' names index season treated   first cycle.","code":""},{"path":"https://geobosh.github.io/pcts/reference/SimpleCycle-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class SimpleCycle — SimpleCycle-class","text":"seasons: Object class \"character\",       names seasons. nseasons: Object class \"integer\",       number seasons. cycle: Object class \"character\" ~~ season: Object class \"character\" ~~ abbreviated: Object class \"character\" ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/SimpleCycle-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class SimpleCycle — SimpleCycle-class","text":"Class \"BareCycle\", directly. Class \"BasicCycle\", directly.","code":""},{"path":"https://geobosh.github.io/pcts/reference/SimpleCycle-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class SimpleCycle — SimpleCycle-class","text":"methods defined class \"SimpleCycle\" signature.","code":""},{"path":"https://geobosh.github.io/pcts/reference/SimpleCycle-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class SimpleCycle — SimpleCycle-class","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/SimpleCycle-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class SimpleCycle — SimpleCycle-class","text":"","code":"showClass(\"SimpleCycle\") #> Class \"SimpleCycle\" [package \"pcts\"] #>  #> Slots: #>                                                                    #> Name:        cycle      season     seasons abbreviated    nseasons #> Class:   character   character   character   character     integer #>  #> Extends:  #> Class \"BareCycle\", directly #> Class \"BasicCycle\", by class \"BareCycle\", distance 2"},{"path":"https://geobosh.github.io/pcts/reference/SubsetPM-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class SubsetPM — SubsetPM-class","title":"Class SubsetPM — SubsetPM-class","text":"Class \"SubsetPM\" - subset PAR models trigonometric   parameterisation.","code":""},{"path":"https://geobosh.github.io/pcts/reference/SubsetPM-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class SubsetPM — SubsetPM-class","text":"Objects can created calls form new(\"SubsetPM\", ...)   typically created model fitting functions, see examples.","code":""},{"path":"https://geobosh.github.io/pcts/reference/SubsetPM-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class SubsetPM — SubsetPM-class","text":"theTS: \"\", time series model fitted. period: \"integer\", period. order: \"integer\", order. findex: \"function\". harmonics: \"integer\", Fourier harmonics include model. call: \"call\", call used fit model. : \"namedList\".","code":""},{"path":"https://geobosh.github.io/pcts/reference/SubsetPM-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class SubsetPM — SubsetPM-class","text":"coef signature(object = \"SubsetPM\"): ... fitted signature(object = \"SubsetPM\"): ... residuals signature(object = \"SubsetPM\"): ... show signature(object = \"SubsetPM\"): ... vcov signature(object = \"SubsetPM\"): ...","code":""},{"path":"https://geobosh.github.io/pcts/reference/SubsetPM-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class SubsetPM — SubsetPM-class","text":"","code":"pcfr4 <- pcts(dataFranses1996)[[4]] x4 <- as.numeric(window(pcfr4, start = availStart(pcfr4), end = availEnd(pcfr4)))  ## without 'harmonics' these models are equivalent tmpfit  <- fit_trigPAR_optim(x4, 2, 4, tol = 1e-14, verbose = FALSE) tmpfitL <- fit_trigPAR_optim(x4, 2, 4, tol = 1e-14, type = \"bylag\", verbose = FALSE)  ## for comparison tmpfitP <- pclsdf(x4, 4, 1:2, sintercept = FALSE)  ## with intercept tmpfitc  <- fit_trigPAR_optim(x4, 2, 4, tol = 1e-14, verbose = FALSE,     sintercept = TRUE) tmpfitcn  <- fit_trigPAR_optim(x4, 2, 4, tol = 1e-14, verbose = FALSE,     sintercept = structure(TRUE, merge = TRUE)) tmpfitLc <- fit_trigPAR_optim(x4, 2, 4, tol = 1e-14, type = \"bylag\",     verbose = FALSE, sintercept = TRUE)  coef(tmpfitc, matrix = TRUE) #>                 [,1] #> C_h0     11.01864998 #> C_h1cos -18.35545186 #> C_h1sin -14.20657604 #> C_h2    -16.09720546 #> h0        1.38811806 #> h1cos     0.03694445 #> h1sin    -0.10197056 #> h2cos     0.89914498 #> h2sin     0.81695108 #> h3cos    -0.13550727 #> h3sin    -0.04146482 #> h4       -1.09146423 coef(tmpfitcn, matrix = TRUE) #>             [,1] #> h0      7.495014 #> h1cos -12.359129 #> h1sin   5.013599 #> h2cos   6.972287 #> h2sin  11.960115 #> h3cos  10.548911 #> h3sin  -8.268658 #> h4cos  -5.042866 #> h4sin   6.551571 #> h5cos   1.689504 #> h5sin -13.356361 #> h6     -8.302937 coef(tmpfitLc, matrix = TRUE) #>       Sintercept       Lag_1       Lag_2 #> h0      11.01865  1.75332945  0.20976594 #> h1cos  -18.35545  0.15794355 -0.06969444 #> h1sin  -14.20658  0.01450817 -0.04278402 #> h2     -16.09721 -0.81695108  0.89914498  coef(tmpfitc) #>         C_h0      C_h1cos      C_h1sin         C_h2           h0        h1cos  #>  11.01864998 -18.35545186 -14.20657604 -16.09720546   1.38811806   0.03694445  #>        h1sin        h2cos        h2sin        h3cos        h3sin           h4  #>  -0.10197056   0.89914498   0.81695108  -0.13550727  -0.04146482  -1.09146423  coef(tmpfitcn) #>         h0      h1cos      h1sin      h2cos      h2sin      h3cos      h3sin  #>   7.495014 -12.359129   5.013599   6.972287  11.960115  10.548911  -8.268658  #>      h4cos      h4sin      h5cos      h5sin         h6  #>  -5.042866   6.551571   1.689504 -13.356361  -8.302937  coef(tmpfitLc) #>         C_h0      C_h1cos      C_h1sin         C_h2      Lag1_h0   Lag1_h1cos  #>  11.01864998 -18.35545186 -14.20657604 -16.09720546   1.75332945   0.15794355  #>   Lag1_h1sin      Lag1_h2      Lag2_h0   Lag2_h1cos   Lag2_h1sin      Lag2_h2  #>   0.01450817  -0.81695108   0.20976594  -0.06969444  -0.04278402   0.89914498   coef(tmpfit) #>          h0       h1cos       h1sin       h2cos       h2sin       h3cos  #>  1.40791663 -0.19130838  0.05886061  1.39162629  1.34741911  0.27824691  #>       h3sin          h4  #> -0.50995470 -1.04530311  coef(tmpfitL) #>      Lag1_h0   Lag1_h1cos   Lag1_h1sin      Lag1_h2      Lag2_h0   Lag2_h1cos  #>  1.734688313 -0.009230596 -0.460324686 -1.347419108  0.256406474  0.061474825  #>   Lag2_h1sin      Lag2_h2  #>  0.402213170  1.391626291   predict(tmpfitc, n.ahead = 4) #> [1] 491.8044 513.6137 484.4487 493.2365 predict(tmpfitcn, n.ahead = 4) #> [1] 491.8044 513.6137 484.4487 493.2365  sqrt(diag((vcov(tmpfitL)))) #>    XLag1_h0 XLag1_h1cos XLag1_h1sin    XLag1_h2    XLag2_h0 XLag2_h1cos  #>   0.1418448   0.1408195   0.1428627   0.1418448   0.1417504   0.1363816  #> XLag2_h1sin    XLag2_h2  #>   0.1469231   0.1417504  e <- residuals(tmpfitL) fi <-  fitted(tmpfitL)"},{"path":"https://geobosh.github.io/pcts/reference/Vec.html","id":null,"dir":"Reference","previous_headings":"","what":"Core data of periodic time series — Vec","title":"Core data of periodic time series — Vec","text":"Core data periodic time series.","code":""},{"path":"https://geobosh.github.io/pcts/reference/Vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Core data of periodic time series — Vec","text":"","code":"Vec(x, ...)  tsMatrix(x, ...)  tsVector(x, ...)  tsVec(x, ...)  pcMatrix(x, ...)  pcArray(x, ndim = 3, ...)  pctsArray(x, ndim = 3, ...)"},{"path":"https://geobosh.github.io/pcts/reference/Vec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Core data of periodic time series — Vec","text":"x object. ... arguments methods. ndim currently used.","code":""},{"path":"https://geobosh.github.io/pcts/reference/Vec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Core data of periodic time series — Vec","text":"functions give core data various common forms. data values can extracted vector periodic time   series object, say x, .vector(x) (x,   \"vector\").  Similarly, .matrix() (x, \"matrix\")   extract data matrix containing one column per variable.    multivariate time series vector returned .vector(x)   ((x, \"vector\")) equivalent   .vector(.matrix(x)). Vec() like .vector() returns result   matrix one column (column vector), usual matrix   calculus. default literally . common representation data statistics matrix-like   one column per variable.  descriptions algorithms   multivariate time series however usually define vector   observations given time column vector. particular,   implementations Kalman filter often require precisely   arrangement.  case data matrix transposed   common one vectorising operation stacks observations,   variables. functions tsMatrix(), tsVector() tsVec()   provide analogues .vector(), .matrix()   Vec() ``transposed'' arrangement. functions may look redundant since simple combinations   traspose operations. functions makes   readable programming. may efficient, well, example   underlying time series class stores data transposed   format. pcMatrix() pcArray() also give core   data. Effectively, give additional dimension   seasons. season becomes first dimension since column   oriented data season changes fastest. pcMatrix   suitable univariate time series, pcArray()   multivariate. Note pcArray() easily extends multiple   periodicities although currently (2019-04-19) methods   exploit . univariate time series, matrix returned   pcMatrix() row represents data one season   column one cycle. multivariate time series, matrices   variable put next . pcArray() returns data array, whose last dimension   corresponds variables.  default case array   3-dimensonal dimensions (season, year, variable). pctsArray() variant pcArray() corresponding   arrangement tsMatrix(). ordering dimensions   (variable, season, cycle).","code":""},{"path":"https://geobosh.github.io/pcts/reference/Vec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Core data of periodic time series — Vec","text":"vector, matrix array, indicated name function   described Details.","code":""},{"path":"https://geobosh.github.io/pcts/reference/Vec.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Core data of periodic time series — Vec","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/pcts/reference/Vec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Core data of periodic time series — Vec","text":"","code":"## window to make number of years different from number of months ap <- pcts(window(AirPassengers, start = c(1956, 1))) class( as.vector(ap)    ) #> [1] \"numeric\" class( as(ap, \"vector\") ) #> [1] \"numeric\"  dim( as.matrix(ap)    ) #> [1] 60  1 dim( as(ap, \"matrix\") ) #> [1] 60  1  dim( tsMatrix(ap) ) #> [1]  1 60  class( tsVector(ap) )  #> [1] \"numeric\" dim(   tsVec(ap)    )  #> [1] 60  1  dim( pcMatrix(ap)   ) #> [1] 12  5 dim( pcArray(ap)    ) #> [1] 12  5  1 dim( pctsArray(ap)  ) #> [1]  1 12  5  dfr <- pcts(dataFranses1996) dim(dfr)                     # c(148, 19) #> [1] 148  19 nSeasons(dfr)                # 4 #> [1] 4  length(as.vector(dfr)) #> [1] 2812  all.equal(as.vector(dfr)[1:148],       as.matrix(dfr)[ , 1]) # TRUE #> [1] TRUE all.equal(tsVector(dfr)[1:19],  unname(as.matrix(dfr)[1, ])) # TRUE #> [1] TRUE  dim( as.matrix(dfr) ) # c(148, 19) #> [1] 148  19 dim( tsMatrix(dfr)  ) # c(19, 148) #> [1]  19 148 all.equal(tsMatrix(dfr)[ , 1],  as.matrix(dfr)[1, ]) # TRUE #> [1] TRUE  dim( Vec(dfr)   )  #> [1] 2812    1 dim( tsVec(dfr) )  #> [1] 2812    1 all.equal(tsVec(dfr)[1:19],  unname(as.matrix(dfr)[1, ])) # TRUE #> [1] TRUE  dim( pcMatrix(dfr)   ) # c(4, 703), one row for each season #> [1]   4 703 dim( pcArray(dfr)    ) # c(4, 37, 19), note: 703 == 37*19    #> [1]  4 37 19  dim( pctsArray(dfr)  ) # c(19, 4, 37), note: 703 == 37*19    #> [1] 19  4 37"},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicArModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"~~ Dummy title ~~ — VirtualPeriodicArModel-class","title":"~~ Dummy title ~~ — VirtualPeriodicArModel-class","text":"~~ Dummy description ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicArModel-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"~~ Dummy title ~~ — VirtualPeriodicArModel-class","text":"Objects can created calls form new(\"VirtualPeriodicArModel\", ...).","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicArModel-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"~~ Dummy title ~~ — VirtualPeriodicArModel-class","text":"Class \"VirtualPeriodicArmaModel\", directly. Class \"VirtualPeriodicFilterModel\", class \"VirtualPeriodicArmaModel\", distance 2. Class \"VirtualPeriodicStationaryModel\", class \"VirtualPeriodicArmaModel\", distance 2. Class \"VirtualPeriodicAutocovarianceModel\", class \"VirtualPeriodicArmaModel\", distance 3. Class \"VirtualPeriodicMeanModel\", class \"VirtualPeriodicArmaModel\", distance 3.","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicArModel-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"~~ Dummy title ~~ — VirtualPeriodicArModel-class","text":"methods defined class \"VirtualPeriodicArModel\" signature.","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicArmaModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class VirtualPeriodicArmaModel — VirtualPeriodicArmaModel-class","title":"Class VirtualPeriodicArmaModel — VirtualPeriodicArmaModel-class","text":"Class VirtualPeriodicArmaModel.","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicArmaModel-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class VirtualPeriodicArmaModel — VirtualPeriodicArmaModel-class","text":"Objects can created calls form new(\"VirtualPeriodicArmaModel\", ...).","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicArmaModel-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class VirtualPeriodicArmaModel — VirtualPeriodicArmaModel-class","text":"Class \"VirtualPeriodicFilterModel\", directly. Class \"VirtualPeriodicStationaryModel\", directly. Class \"VirtualPeriodicAutocovarianceModel\", class \"VirtualPeriodicStationaryModel\", distance 2. Class \"VirtualPeriodicMeanModel\", class \"VirtualPeriodicStationaryModel\", distance 2.","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicArmaModel-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class VirtualPeriodicArmaModel — VirtualPeriodicArmaModel-class","text":"PeriodicArModel signature(object = \"VirtualPeriodicArmaModel\"): ...","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicAutocorrelations-class.html","id":null,"dir":"Reference","previous_headings":"","what":"~~ Dummy title ~~ — VirtualPeriodicAutocorrelations-class","title":"~~ Dummy title ~~ — VirtualPeriodicAutocorrelations-class","text":"~~ Dummy description ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicAutocorrelations-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"~~ Dummy title ~~ — VirtualPeriodicAutocorrelations-class","text":"virtual Class: objects may created .","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicAutocorrelations-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"~~ Dummy title ~~ — VirtualPeriodicAutocorrelations-class","text":"Class \"VirtualPeriodicModel\", directly.","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicAutocorrelations-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"~~ Dummy title ~~ — VirtualPeriodicAutocorrelations-class","text":"methods defined class \"VirtualPeriodicAutocorrelations\" signature.","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicAutocovarianceModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"~~ Dummy title ~~ — VirtualPeriodicAutocovarianceModel-class","title":"~~ Dummy title ~~ — VirtualPeriodicAutocovarianceModel-class","text":"~~ Dummy description ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicAutocovarianceModel-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"~~ Dummy title ~~ — VirtualPeriodicAutocovarianceModel-class","text":"virtual Class: objects may created .","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicAutocovarianceModel-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"~~ Dummy title ~~ — VirtualPeriodicAutocovarianceModel-class","text":"[ signature(x = \"VirtualPeriodicAutocovarianceModel\", = \"missing\", j = \"missing\", drop = \"\"): ... [ signature(x = \"VirtualPeriodicAutocovarianceModel\", = \"missing\", j = \"numeric\", drop = \"\"): ... [ signature(x = \"VirtualPeriodicAutocovarianceModel\", = \"numeric\", j = \"missing\", drop = \"\"): ... [ signature(x = \"VirtualPeriodicAutocovarianceModel\", = \"numeric\", j = \"numeric\", drop = \"\"): ... maxLag signature(object = \"VirtualPeriodicAutocovarianceModel\"): ... autocorrelations signature(x = \"VirtualPeriodicAutocovarianceModel\", maxlag = \"missing\", lag_0 = \"\"): ... autocorrelations signature(x = \"VirtualPeriodicAutocovarianceModel\", maxlag = \"numeric\", lag_0 = \"\"): ...","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicAutocovariances-class.html","id":null,"dir":"Reference","previous_headings":"","what":"~~ Dummy title ~~ — VirtualPeriodicAutocovariances-class","title":"~~ Dummy title ~~ — VirtualPeriodicAutocovariances-class","text":"~~ Dummy description ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicAutocovariances-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"~~ Dummy title ~~ — VirtualPeriodicAutocovariances-class","text":"virtual Class: objects may created .","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicAutocovariances-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"~~ Dummy title ~~ — VirtualPeriodicAutocovariances-class","text":"Class \"VirtualPeriodicModel\", directly.","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicAutocovariances-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"~~ Dummy title ~~ — VirtualPeriodicAutocovariances-class","text":"autocorrelations signature(x = \"VirtualPeriodicAutocovariances\", maxlag = \"\", lag_0 = \"missing\"): ... autocovariances signature(x = \"VirtualPeriodicAutocovariances\", maxlag = \"\"): ... backwardPartialCoefficients signature(x = \"VirtualPeriodicAutocovariances\"): ... backwardPartialVariances signature(x = \"VirtualPeriodicAutocovariances\"): ... partialAutocorrelations signature(x = \"VirtualPeriodicAutocovariances\", maxlag = \"\", lag_0 = \"\"): ... partialAutocovariances signature(x = \"VirtualPeriodicAutocovariances\"): ... partialCoefficients signature(x = \"VirtualPeriodicAutocovariances\"): ... partialVariances signature(x = \"VirtualPeriodicAutocovariances\"): ... pc.bU signature(x = \"VirtualPeriodicAutocovariances\"): ... pc.fL signature(x = \"VirtualPeriodicAutocovariances\"): ... pc.phis2 signature(x = \"VirtualPeriodicAutocovariances\"): ...","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicFilterModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"~~ Dummy title ~~ — VirtualPeriodicFilterModel-class","title":"~~ Dummy title ~~ — VirtualPeriodicFilterModel-class","text":"~~ Dummy description ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicFilterModel-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"~~ Dummy title ~~ — VirtualPeriodicFilterModel-class","text":"virtual Class: objects may created .","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicFilterModel-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"~~ Dummy title ~~ — VirtualPeriodicFilterModel-class","text":"methods defined class \"VirtualPeriodicFilterModel\" signature.","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicMaModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"~~ Dummy title ~~ — VirtualPeriodicMaModel-class","title":"~~ Dummy title ~~ — VirtualPeriodicMaModel-class","text":"~~ Dummy description ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicMaModel-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"~~ Dummy title ~~ — VirtualPeriodicMaModel-class","text":"Objects can created calls form new(\"VirtualPeriodicMaModel\", ...).","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicMaModel-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"~~ Dummy title ~~ — VirtualPeriodicMaModel-class","text":"Class \"VirtualPeriodicArmaModel\", directly. Class \"VirtualPeriodicFilterModel\", class \"VirtualPeriodicArmaModel\", distance 2. Class \"VirtualPeriodicStationaryModel\", class \"VirtualPeriodicArmaModel\", distance 2. Class \"VirtualPeriodicAutocovarianceModel\", class \"VirtualPeriodicArmaModel\", distance 3. Class \"VirtualPeriodicMeanModel\", class \"VirtualPeriodicArmaModel\", distance 3.","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicMaModel-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"~~ Dummy title ~~ — VirtualPeriodicMaModel-class","text":"methods defined class \"VirtualPeriodicMaModel\" signature.","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicMeanModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"~~ Dummy title ~~ — VirtualPeriodicMeanModel-class","title":"~~ Dummy title ~~ — VirtualPeriodicMeanModel-class","text":"~~ Dummy description ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicMeanModel-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"~~ Dummy title ~~ — VirtualPeriodicMeanModel-class","text":"virtual Class: objects may created .","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicMeanModel-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"~~ Dummy title ~~ — VirtualPeriodicMeanModel-class","text":"methods defined class \"VirtualPeriodicMeanModel\" signature.","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"~~ Dummy title ~~ — VirtualPeriodicModel-class","title":"~~ Dummy title ~~ — VirtualPeriodicModel-class","text":"~~ Dummy description ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicModel-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"~~ Dummy title ~~ — VirtualPeriodicModel-class","text":"virtual Class: objects may created .","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicModel-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"~~ Dummy title ~~ — VirtualPeriodicModel-class","text":"allSeasons signature(x = \"VirtualPeriodicModel\", abb = \"\"): ... nSeasons signature(object = \"VirtualPeriodicModel\"): ... seqSeasons signature(x = \"VirtualPeriodicModel\"): ... unitCycle signature(x = \"VirtualPeriodicModel\"): ... unitSeason signature(x = \"VirtualPeriodicModel\"): ...","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicMonicFilter-class.html","id":null,"dir":"Reference","previous_headings":"","what":"~~ Dummy title ~~ — VirtualPeriodicMonicFilter-class","title":"~~ Dummy title ~~ — VirtualPeriodicMonicFilter-class","text":"~~ Dummy description ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicMonicFilter-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"~~ Dummy title ~~ — VirtualPeriodicMonicFilter-class","text":"virtual Class: objects may created .","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicMonicFilter-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"~~ Dummy title ~~ — VirtualPeriodicMonicFilter-class","text":"methods defined class \"VirtualPeriodicMonicFilter\" signature.","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicStationaryModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"~~ Dummy title ~~ — VirtualPeriodicStationaryModel-class","title":"~~ Dummy title ~~ — VirtualPeriodicStationaryModel-class","text":"~~ Dummy description ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicStationaryModel-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"~~ Dummy title ~~ — VirtualPeriodicStationaryModel-class","text":"Objects can created calls form new(\"VirtualPeriodicStationaryModel\", ...).","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicStationaryModel-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"~~ Dummy title ~~ — VirtualPeriodicStationaryModel-class","text":"Class \"VirtualPeriodicAutocovarianceModel\", directly. Class \"VirtualPeriodicMeanModel\", directly.","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicStationaryModel-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"~~ Dummy title ~~ — VirtualPeriodicStationaryModel-class","text":"methods defined class \"VirtualPeriodicStationaryModel\" signature.","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicWhiteNoiseModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"~~ Dummy title ~~ — VirtualPeriodicWhiteNoiseModel-class","title":"~~ Dummy title ~~ — VirtualPeriodicWhiteNoiseModel-class","text":"~~ Dummy description ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicWhiteNoiseModel-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"~~ Dummy title ~~ — VirtualPeriodicWhiteNoiseModel-class","text":"Objects can created calls form new(\"VirtualPeriodicWhiteNoiseModel\", ...).","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicWhiteNoiseModel-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"~~ Dummy title ~~ — VirtualPeriodicWhiteNoiseModel-class","text":"Class \"VirtualPeriodicStationaryModel\", directly. Class \"VirtualPeriodicAutocovarianceModel\", class \"VirtualPeriodicStationaryModel\", distance 2. Class \"VirtualPeriodicMeanModel\", class \"VirtualPeriodicStationaryModel\", distance 2.","code":""},{"path":"https://geobosh.github.io/pcts/reference/VirtualPeriodicWhiteNoiseModel-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"~~ Dummy title ~~ — VirtualPeriodicWhiteNoiseModel-class","text":"methods defined class \"VirtualPeriodicWhiteNoiseModel\" signature.","code":""},{"path":"https://geobosh.github.io/pcts/reference/allSeasons.html","id":null,"dir":"Reference","previous_headings":"","what":"Get names of seasons — allSeasons","title":"Get names of seasons — allSeasons","text":"Functions methods fo get names seasons related quantities   objects cycle, periodic time series classes   objects concepts defined.","code":""},{"path":"https://geobosh.github.io/pcts/reference/allSeasons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get names of seasons — allSeasons","text":"","code":"unitSeason(x) unitCycle(x) seqSeasons(x) allSeasons(x, abb = FALSE, prefix = \"S\", ...)  unitSeason ( x, ... ) <- value unitCycle ( x, ... ) <- value allSeasons ( x, abb, ... ) <- value  # S4 method for SimpleCycle allSeasons(x, abb, prefix, ...) <- value  # S4 method for Cyclic allSeasons(x, abb = FALSE, ...) <- value"},{"path":"https://geobosh.github.io/pcts/reference/allSeasons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get names of seasons — allSeasons","text":"x cycle, time series object concept     seasons defined. abb TRUE give abbreviated names seasons. prefix use prefix automatically generated names seasons. ... arguments methods. value character string","code":""},{"path":"https://geobosh.github.io/pcts/reference/allSeasons.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get names of seasons — allSeasons","text":"cycle classes, .e. classes inheriting class   BasicCycle, provide common functionality.   particular, guarantee functions described topic   available. functions work also periodic time series   classes may defined classes make sense.","code":""},{"path":"https://geobosh.github.io/pcts/reference/allSeasons.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get names of seasons — allSeasons","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/pcts/reference/allSeasons.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Get names of seasons — allSeasons","text":"Methods allSeasons(): signature(x = \"BasicCycle\", abb = \"\")  signature(x = \"DayWeekCycle\", abb = \"logical\")  signature(x = \"DayWeekCycle\", abb = \"missing\")  signature(x = \"FiveDayWeekCycle\", abb = \"logical\")  signature(x = \"FiveDayWeekCycle\", abb = \"missing\")  signature(x = \"MonthYearCycle\", abb = \"logical\")  signature(x = \"MonthYearCycle\", abb = \"missing\")  signature(x = \"OpenCloseCycle\", abb = \"logical\")  signature(x = \"OpenCloseCycle\", abb = \"missing\")  signature(x = \"QuarterYearCycle\", abb = \"logical\")  signature(x = \"QuarterYearCycle\", abb = \"missing\")  signature(x = \"SimpleCycle\", abb = \"\")  signature(x = \"Cyclic\", abb = \"\")  signature(x = \"Every30MinutesCycle\", abb = \"logical\")  signature(x = \"Every30MinutesCycle\", abb = \"missing\")  signature(x = \"VirtualPeriodicModel\", abb = \"\")","code":""},{"path":"https://geobosh.github.io/pcts/reference/allSeasons.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get names of seasons — allSeasons","text":"","code":"opcycle <- new(\"OpenCloseCycle\") ## convert to SimpleCycle to change some names siopcycle <- as(opcycle, \"SimpleCycle\") ## siopcycle inherits names from opcycle unitSeason(siopcycle)             # \"Season\" #> [1] \"OpenOrClose\" unitCycle(siopcycle)              # \"Cycle\" #> [1] \"HalfDay\" allSeasons(siopcycle)             # \"Open\"  \"Close\" #> [1] \"Open\"  \"Close\" allSeasons(siopcycle, abb = TRUE) # \"O\" \"C\" #> [1] \"O\" \"C\"  allSeasons(siopcycle) <- c(\"Day\", \"Night\") allSeasons(siopcycle) # now: \"Day\"   \"Night\" #> [1] \"Day\"   \"Night\" ## change also abbreviations allSeasons(siopcycle, abb = TRUE) <- c(\"D\", \"N\") allSeasons(siopcycle, abb = TRUE) # now: \"D\" \"N\" #> [1] \"D\" \"N\"  seasons <- new(\"SimpleCycle\", 4) unitSeason(seasons)             # \"Season\" #> [1] \"Season\" unitCycle(seasons)              # \"Cycle\" #> [1] \"Cycle\" allSeasons(seasons) #> [1] \"Season_1\" \"Season_2\" \"Season_3\" \"Season_4\" allSeasons(seasons, abb = TRUE)  #> [1] \"S1\" \"S2\" \"S3\" \"S4\"  unitCycle(seasons) <- \"Year\" unitCycle(seasons) #> [1] \"Year\" allSeasons(seasons) <- c(\"Winter\", \"Spring\", \"Summer\", \"Autumn\") allSeasons(seasons) #> [1] \"Winter\" \"Spring\" \"Summer\" \"Autumn\" allSeasons(seasons, abb = TRUE) <- c(\"Win\", \"Spr\", \"Sum\", \"Aut\") allSeasons(seasons, abb = TRUE) #> [1] \"Win\" \"Spr\" \"Sum\" \"Aut\"  ## change autumn to Fall allSeasons(seasons)[4] <- \"Fall\" allSeasons(seasons, abb = TRUE)[4] <- \"Fal\" allSeasons(seasons) #> [1] \"Winter\" \"Spring\" \"Summer\" \"Fall\"   allSeasons(seasons, abb = TRUE) #> [1] \"Win\" \"Spr\" \"Sum\" \"Fal\"  ## indexing of cycle objects is equivalent to allSeasons. seasons[] #> [1] \"Winter\" \"Spring\" \"Summer\" \"Fall\"   seasons[ , abb = TRUE] #> [1] \"Win\" \"Spr\" \"Sum\" \"Fal\"  seasons[4] <- \"Herbst\" seasons #> Object from class 'SimpleCycle' #> Number of seasons: 4  #> Seasons: Winter Spring Summer Herbst  #> Abbreviated: Win Spr Sum Fal   unitCycle(seasons) <- \"Jahre\" unitCycle(seasons) #> [1] \"Jahre\" unitSeason(seasons) <- \"Jahreszeit\" seasons[] <- c(\"Winter\", \"Frueling\", \"Sommer\", \"Herbst\") seasons[ , abb = TRUE] <- c(\"W\", \"F\", \"S\", \"H\") seasons[] #> [1] \"Winter\"   \"Frueling\" \"Sommer\"   \"Herbst\"   seasons #> Object from class 'SimpleCycle' #> Number of seasons: 4  #> Seasons: Winter Frueling Sommer Herbst  #> Abbreviated: W F S H"},{"path":"https://geobosh.github.io/pcts/reference/as_date-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace methods for as_date in package pcts — as_date-methods","title":"Replace methods for as_date in package pcts — as_date-methods","text":"Replace methods as_date package pcts.","code":""},{"path":"https://geobosh.github.io/pcts/reference/as_date-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Replace methods for as_date in package pcts — as_date-methods","text":"signature(x = \"PeriodicTimeSeries\")  signature(x = \"\")  signature(x = \"character\")  signature(x = \"Cyclic\")  signature(x = \"numeric\")  signature(x = \"POSIXt\")","code":""},{"path":"https://geobosh.github.io/pcts/reference/as_datetime-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for as_datetime in package pcts — as_datetime-methods","title":"Methods for as_datetime in package pcts — as_datetime-methods","text":"Methods as_datetime package pcts.","code":""},{"path":"https://geobosh.github.io/pcts/reference/as_datetime-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Methods for as_datetime in package pcts — as_datetime-methods","text":"signature(x = \"PeriodicTimeSeries\")","code":""},{"path":"https://geobosh.github.io/pcts/reference/autocorrelations-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute autocorrelations and periodic autocorrelations — autocorrelations-methods","title":"Compute autocorrelations and periodic autocorrelations — autocorrelations-methods","text":"Methods computation autocorrelations periodic   autocorrelations.","code":""},{"path":"https://geobosh.github.io/pcts/reference/autocorrelations-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Compute autocorrelations and periodic autocorrelations — autocorrelations-methods","text":"signature(x = \"numeric\", maxlag = \"\", lag_0 = \"missing\")  signature(x = \"PeriodicTimeSeries\", maxlag = \"\", lag_0 = \"missing\")  signature(x = \"PeriodicAutocovariances\", maxlag = \"\",            lag_0 = \"missing\")  signature(x = \"SamplePeriodicAutocovariances\", maxlag = \"\",            lag_0 = \"missing\")  signature(x = \"VirtualPeriodicAutocovariances\", maxlag = \"\",            lag_0 = \"missing\")  signature(x = \"VirtualPeriodicAutocovarianceModel\", maxlag = \"\",            lag_0 = \"missing\")","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/autocorrelations-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute autocorrelations and periodic autocorrelations — autocorrelations-methods","text":"","code":"## periodic ts object => peridic acf autocorrelations(pcts(AirPassengers), maxlag = 10) #> An object of class \"SamplePeriodicAutocorrelations\" #> Slot \"modelCycle\": #> Object from built-in class 'MonthYearCycle' #> Cycle start: January  #>  #> Slot \"data\": #> An object of class \"Lagged2d\" #> Slot *data*:  #>     Lag_0     Lag_1     Lag_2     Lag_3     Lag_4     Lag_5     Lag_6     Lag_7 #> Jan     1 0.7625916 0.7615747 0.7411110 0.7590680 0.7611872 0.7466266 0.7554121 #> Feb     1 0.9982465 0.7576557 0.7558500 0.7346974 0.7525411 0.7546380 0.7409393 #> Mar     1 0.9918130 0.9932155 0.7422192 0.7420423 0.7238225 0.7407296 0.7444457 #> Apr     1 0.9915893 0.9947516 0.9959179 0.7576004 0.7559386 0.7351574 0.7506037 #> May     1 0.9982897 0.9947421 0.9950393 0.9968230 0.7534542 0.7523672 0.7330159 #> Jun     1 0.9958044 0.9949104 0.9949229 0.9972964 0.9987000 0.7565890 0.7554144 #> Jul     1 0.9982106 0.9963570 0.9949812 0.9918817 0.9949910 0.9977168 0.7573203 #> Aug     1 0.9977557 0.9976737 0.9952191 0.9923076 0.9948521 0.9959544 0.9974787 #> Sep     1 0.9973339 0.9988078 0.9985273 0.9967242 0.9951878 0.9949687 0.9950109 #> Oct     1 0.9985617 0.9974285 0.9989874 0.9978559 0.9978369 0.9962766 0.9923116 #> Nov     1 0.9985629 0.9984778 0.9971015 0.9973429 0.9971131 0.9966455 0.9928667 #> Dec     1 0.9986007 0.9971084 0.9976800 0.9939314 0.9962021 0.9943744 0.9939361 #>         Lag_8     Lag_9    Lag_10 #> Jan 0.7393576 0.7235248 0.7850520 #> Feb 0.7484447 0.7311993 0.7136811 #> Mar 0.7302015 0.7418925 0.7195945 #> Apr 0.7556423 0.7399045 0.7478320 #> May 0.7491317 0.7550857 0.7387131 #> Jun 0.7356265 0.7536952 0.7550155 #> Jul 0.7573028 0.7381362 0.7556274 #> Aug 0.7561910 0.7577808 0.7385832 #> Sep 0.9963723 0.7490285 0.7485433 #> Oct 0.9964015 0.9979196 0.7520121 #> Nov 0.9943344 0.9944752 0.9956477 #> Dec 0.9906844 0.9906346 0.9910534 #>  #> Slot \"n\": #> [1] 144 #>  #> Slot \"varnames\": #> character(0) #>  #> Slot \"objectname\": #> [1] \"pcts(AirPassengers)\" #>   ## for \"ts\" or \"numeric\" objects the default is non-periodic acf autocorrelations(AirPassengers, maxlag = 10)  #> An object of class \"SampleAutocorrelations\" #>     Lag_0     Lag_1     Lag_2     Lag_3     Lag_4     Lag_5     Lag_6     Lag_7  #> 1.0000000 0.9480473 0.8755748 0.8066812 0.7526254 0.7137700 0.6817336 0.6629044  #>     Lag_8     Lag_9    Lag_10  #> 0.6556105 0.6709483 0.7027199  #> Slot n: #> [1] 144 #> Slot varnames:   <not set> #> Slot objectname:  x autocorrelations(as.numeric(AirPassengers)) #> An object of class \"SampleAutocorrelations\" #>     Lag_0     Lag_1     Lag_2     Lag_3     Lag_4     Lag_5     Lag_6     Lag_7  #> 1.0000000 0.9480473 0.8755748 0.8066812 0.7526254 0.7137700 0.6817336 0.6629044  #>     Lag_8     Lag_9    Lag_10    Lag_11    Lag_12    Lag_13    Lag_14    Lag_15  #> 0.6556105 0.6709483 0.7027199 0.7432402 0.7603950 0.7126609 0.6463423 0.5859234  #>    Lag_16    Lag_17    Lag_18    Lag_19    Lag_20    Lag_21  #> 0.5379552 0.4997475 0.4687340 0.4498707 0.4416288 0.4572238  #> Slot n: #> [1] 144 #> Slot varnames:   <not set> #> Slot objectname:  x ## argument 'nseasons' forces periodic acf autocorrelations(AirPassengers, maxlag = 10, nseasons = 12) #> An object of class \"SampleAutocorrelations\" #>     Lag_0     Lag_1     Lag_2     Lag_3     Lag_4     Lag_5     Lag_6     Lag_7  #> 1.0000000 0.9480473 0.8755748 0.8066812 0.7526254 0.7137700 0.6817336 0.6629044  #>     Lag_8     Lag_9    Lag_10  #> 0.6556105 0.6709483 0.7027199  #> Slot n: #> [1] 144 #> Slot varnames:   <not set> #> Slot objectname:  x autocorrelations(as.numeric(AirPassengers), maxlag = 10, nseasons = 12) #> An object of class \"SamplePeriodicAutocorrelations\" #> Slot \"modelCycle\": #> Object from class 'BareCycle' #> Number of seasons:   #>  #> Slot \"data\": #> An object of class \"Lagged2d\" #> Slot *data*:  #>     Lag_0     Lag_1     Lag_2     Lag_3     Lag_4     Lag_5     Lag_6     Lag_7 #> S1      1 0.7625916 0.7615747 0.7411110 0.7590680 0.7611872 0.7466266 0.7554121 #> S2      1 0.9982465 0.7576557 0.7558500 0.7346974 0.7525411 0.7546380 0.7409393 #> S3      1 0.9918130 0.9932155 0.7422192 0.7420423 0.7238225 0.7407296 0.7444457 #> S4      1 0.9915893 0.9947516 0.9959179 0.7576004 0.7559386 0.7351574 0.7506037 #> S5      1 0.9982897 0.9947421 0.9950393 0.9968230 0.7534542 0.7523672 0.7330159 #> S6      1 0.9958044 0.9949104 0.9949229 0.9972964 0.9987000 0.7565890 0.7554144 #> S7      1 0.9982106 0.9963570 0.9949812 0.9918817 0.9949910 0.9977168 0.7573203 #> S8      1 0.9977557 0.9976737 0.9952191 0.9923076 0.9948521 0.9959544 0.9974787 #> S9      1 0.9973339 0.9988078 0.9985273 0.9967242 0.9951878 0.9949687 0.9950109 #> S10     1 0.9985617 0.9974285 0.9989874 0.9978559 0.9978369 0.9962766 0.9923116 #> S11     1 0.9985629 0.9984778 0.9971015 0.9973429 0.9971131 0.9966455 0.9928667 #> S12     1 0.9986007 0.9971084 0.9976800 0.9939314 0.9962021 0.9943744 0.9939361 #>         Lag_8     Lag_9    Lag_10 #> S1  0.7393576 0.7235248 0.7850520 #> S2  0.7484447 0.7311993 0.7136811 #> S3  0.7302015 0.7418925 0.7195945 #> S4  0.7556423 0.7399045 0.7478320 #> S5  0.7491317 0.7550857 0.7387131 #> S6  0.7356265 0.7536952 0.7550155 #> S7  0.7573028 0.7381362 0.7556274 #> S8  0.7561910 0.7577808 0.7385832 #> S9  0.9963723 0.7490285 0.7485433 #> S10 0.9964015 0.9979196 0.7520121 #> S11 0.9943344 0.9944752 0.9956477 #> S12 0.9906844 0.9906346 0.9910534 #>  #> Slot \"n\": #> [1] 144 #>  #> Slot \"varnames\": #> character(0) #>  #> Slot \"objectname\": #> [1] \"as.numeric(AirPassengers)\" #>"},{"path":"https://geobosh.github.io/pcts/reference/autocovariances-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute autocovariances and periodic autocovariances — autocovariances-methods","title":"Compute autocovariances and periodic autocovariances — autocovariances-methods","text":"Methods generic function autocovariances(),   computes autocovariances meaningful first argument.   objects representing time series, computes sample autocovariances   (univariate, multivariate, periodic, appropriate). objects   representing models, computes relevant theoretical   autocovariances.","code":""},{"path":"https://geobosh.github.io/pcts/reference/autocovariances-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Compute autocovariances and periodic autocovariances — autocovariances-methods","text":"signature(x = \"numeric\", maxlag = \"\")  signature(x = \"PeriodicArmaModel\", maxlag = \"\")  signature(x = \"PeriodicArModel\", maxlag = \"\")  signature(x = \"PeriodicAutocovarianceModel\", maxlag = \"\")  signature(x = \"PeriodicTS\", maxlag = \"\")  signature(x = \"VirtualPeriodicAutocovariances\", maxlag = \"\") maxlag missing equal maxLag(x), x     returned unchanged. Otherwise number available lags     adjusted maxlag.","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/autocovariances-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute autocovariances and periodic autocovariances — autocovariances-methods","text":"","code":"## periodic ts object => peridic acvf autocovariances(pcts(AirPassengers), maxlag = 10) #> An object of class \"SamplePeriodicAutocovariances\" #> Slot \"modelCycle\": #> Object from built-in class 'MonthYearCycle' #> Cycle start: January  #>  #> Slot \"data\": #> An object of class \"Lagged2d\" #> Slot *data*:  #>         Lag_0     Lag_1     Lag_2     Lag_3     Lag_4     Lag_5     Lag_6 #> Jan  9357.021  7281.135  6713.656  7601.193  8713.974 10982.141 10844.250 #> Feb  7362.333  8285.417  6416.792  5910.458  6684.146  7663.104  9657.688 #> Mar  9269.472  8193.417  9249.958  7053.391  6510.794  7389.061  8463.578 #> Apr 10568.576  9814.486  8774.667  9903.771  7687.529  7082.272  8013.427 #> May 12068.139 11274.181 10521.028  9379.250 10592.708  8169.873  7532.303 #> Jun 16513.722 14057.778 13143.611 12309.472 10996.500 12414.417  9596.676 #> Jul 22545.222 19260.694 16434.722 15358.556 14338.861 12819.000 14491.167 #> Aug 22246.076 22344.889 19122.194 16306.681 15215.326 14286.069 12746.000 #> Sep 14084.243 17653.632 17798.194 15228.222 12994.569 12141.715 11368.514 #> Oct 11242.410 12565.257 15773.868 15904.389 13596.278 11622.764 10859.701 #> Nov  8305.306  9649.014 10798.986 13553.264 13647.389 11677.361  9977.889 #> Dec  9742.639  8982.722 10435.431 11686.819 14632.597 14764.306 12612.778 #>         Lag_7     Lag_8     Lag_9    Lag_10 #> Jan  9390.208  7856.760  7194.995  7311.302 #> Feb  9545.917  8252.583  6892.292  6295.354 #> Mar 10690.235 10555.954  9178.907  7610.891 #> Apr  9157.685 11586.472 11421.185  9879.495 #> May  8538.140  9766.638 12372.091 12184.935 #> Jun  8846.787 10023.273 11494.366 14471.218 #> Jul 11223.935 10362.741 11751.505 13464.856 #> Aug 14391.271 11132.598 10300.258 11680.350 #> Sep 10132.167 11438.188  8774.117  8095.832 #> Oct 10129.903  9065.083 10235.146  7870.328 #> Nov  9302.014  8724.444  7776.417  8777.125 #> Dec 10777.472 10052.681  9414.111  8393.500 #>  #> Slot \"n\": #> [1] 144 #>  #> Slot \"varnames\": #> character(0) #>  #> Slot \"objectname\": #> [1] \"pcts(AirPassengers)\" #>   ## for \"ts\" or \"numeric\" objects the default is non-periodic acvf autocovariances(AirPassengers, maxlag = 10)  #> An object of class \"SampleAutocovariances\" #>     Lag_0     Lag_1     Lag_2     Lag_3     Lag_4     Lag_5     Lag_6     Lag_7  #> 14291.973 13549.467 12513.692 11529.066 10756.502 10201.181  9743.318  9474.212  #>     Lag_8     Lag_9    Lag_10  #>  9369.968  9589.176 10043.254  #> Slot n: #> [1] 144 #> Slot varnames:   <not set> #> Slot objectname:  x autocovariances(as.numeric(AirPassengers)) #> An object of class \"SampleAutocovariances\" #>     Lag_0     Lag_1     Lag_2     Lag_3     Lag_4     Lag_5     Lag_6     Lag_7  #> 14291.973 13549.467 12513.692 11529.066 10756.502 10201.181  9743.318  9474.212  #>     Lag_8     Lag_9    Lag_10    Lag_11    Lag_12    Lag_13    Lag_14    Lag_15  #>  9369.968  9589.176 10043.254 10622.369 10867.546 10185.330  9237.507  8374.002  #>    Lag_16    Lag_17    Lag_18    Lag_19    Lag_20    Lag_21  #>  7688.441  7142.378  6699.134  6429.540  6311.747  6534.630  #> Slot n: #> [1] 144 #> Slot varnames:   <not set> #> Slot objectname:  x ## argument 'nseasons' forces periodic acvf autocovariances(AirPassengers, maxlag = 10, nseasons = 12) #> An object of class \"SampleAutocovariances\" #>     Lag_0     Lag_1     Lag_2     Lag_3     Lag_4     Lag_5     Lag_6     Lag_7  #> 14291.973 13549.467 12513.692 11529.066 10756.502 10201.181  9743.318  9474.212  #>     Lag_8     Lag_9    Lag_10  #>  9369.968  9589.176 10043.254  #> Slot n: #> [1] 144 #> Slot varnames:   <not set> #> Slot objectname:  x autocovariances(as.numeric(AirPassengers), maxlag = 10, nseasons = 12) #> An object of class \"SamplePeriodicAutocovariances\" #> Slot \"modelCycle\": #> Object from class 'BareCycle' #> Number of seasons:   #>  #> Slot \"data\": #> An object of class \"Lagged2d\" #> Slot *data*:  #>         Lag_0     Lag_1     Lag_2     Lag_3     Lag_4     Lag_5     Lag_6 #> S1   9357.021  7281.135  6713.656  7601.193  8713.974 10982.141 10844.250 #> S2   7362.333  8285.417  6416.792  5910.458  6684.146  7663.104  9657.688 #> S3   9269.472  8193.417  9249.958  7053.391  6510.794  7389.061  8463.578 #> S4  10568.576  9814.486  8774.667  9903.771  7687.529  7082.272  8013.427 #> S5  12068.139 11274.181 10521.028  9379.250 10592.708  8169.873  7532.303 #> S6  16513.722 14057.778 13143.611 12309.472 10996.500 12414.417  9596.676 #> S7  22545.222 19260.694 16434.722 15358.556 14338.861 12819.000 14491.167 #> S8  22246.076 22344.889 19122.194 16306.681 15215.326 14286.069 12746.000 #> S9  14084.243 17653.632 17798.194 15228.222 12994.569 12141.715 11368.514 #> S10 11242.410 12565.257 15773.868 15904.389 13596.278 11622.764 10859.701 #> S11  8305.306  9649.014 10798.986 13553.264 13647.389 11677.361  9977.889 #> S12  9742.639  8982.722 10435.431 11686.819 14632.597 14764.306 12612.778 #>         Lag_7     Lag_8     Lag_9    Lag_10 #> S1   9390.208  7856.760  7194.995  7311.302 #> S2   9545.917  8252.583  6892.292  6295.354 #> S3  10690.235 10555.954  9178.907  7610.891 #> S4   9157.685 11586.472 11421.185  9879.495 #> S5   8538.140  9766.638 12372.091 12184.935 #> S6   8846.787 10023.273 11494.366 14471.218 #> S7  11223.935 10362.741 11751.505 13464.856 #> S8  14391.271 11132.598 10300.258 11680.350 #> S9  10132.167 11438.188  8774.117  8095.832 #> S10 10129.903  9065.083 10235.146  7870.328 #> S11  9302.014  8724.444  7776.417  8777.125 #> S12 10777.472 10052.681  9414.111  8393.500 #>  #> Slot \"n\": #> [1] 144 #>  #> Slot \"varnames\": #> character(0) #>  #> Slot \"objectname\": #> [1] \"as.numeric(AirPassengers)\" #>"},{"path":"https://geobosh.github.io/pcts/reference/availStart.html","id":null,"dir":"Reference","previous_headings":"","what":"Time of first or last non-NA value — availStart","title":"Time of first or last non-NA value — availStart","text":"Time first last non-NA value.","code":""},{"path":"https://geobosh.github.io/pcts/reference/availStart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time of first or last non-NA value — availStart","text":"","code":"availStart(x, any = TRUE)  availEnd(x, any = TRUE)"},{"path":"https://geobosh.github.io/pcts/reference/availStart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Time of first or last non-NA value — availStart","text":"x time series similar object logical flag multivariate objects. default TRUE     requests first/last index containing non-NA value.     FALSE requires values     first/last index must non-NA.","code":""},{"path":"https://geobosh.github.io/pcts/reference/availStart.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Time of first or last non-NA value — availStart","text":"time given cycle-season pair. Argument meaningful multivariate objects.    name short   \"first/last index values (ie least one) non-NA\".   = FALSE taken mean index first/last   values non-NA. functions can used together windows trim   NA's beginning /end data.   alternative provide also methods periodic time series methods   zoo:na.trim, see examples .","code":""},{"path":"https://geobosh.github.io/pcts/reference/availStart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Time of first or last non-NA value — availStart","text":"numeric, length 2","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/availStart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Time of first or last non-NA value — availStart","text":"","code":"tipi <- pcts(dataFranses1996[ , \"USTotalIPI\"]) start(tipi) #> [1] 1955    1 end(tipi) #> [1] 1991    4 head(tipi) #> An object of class \"PeriodicTS\" #> Slot \"cycle\": Start:  1955   Quarter_1  #> Cycle:  QuarterYearCycle  #> Number of seasons: 4  #>  #>       Q1 Q2 Q3 Q4 #> Y1955 NA NA NA NA #> Y1956 NA NA       tail(tipi) #> An object of class \"PeriodicTS\" #> Slot \"cycle\": Start:  1990   Quarter_3  #> Cycle:  QuarterYearCycle  #> Number of seasons: 4  #>  #>       Q1    Q2    Q3    Q4    #> Y1990             118.3 114.5 #> Y1991 111.4 112.4 116.0 113.9  tipi <- window(tipi, start = availStart(tipi), end = availEnd(tipi)) start(tipi) #> [1] 1960    1 end(tipi) #> [1] 1991    4 plot(tipi)   pcfr <- pcts(dataFranses1996)  pcfr2to4 <- pcfr[2:4] head(pcfr2to4) #> An object of class \"PeriodicMTS\" #> Slot \"cycle\": Object from built-in class 'QuarterYearCycle' #> Cycle start: Quarter_1  #>  #>         USTotalIPI CanadaUnemployment GermanyGNP #> Y1955_1         NA                 NA         NA #> Y1955_2         NA                 NA         NA #> Y1955_3         NA                 NA         NA #> Y1955_4         NA                 NA         NA #> Y1956_1         NA                 NA         NA #> Y1956_2         NA                 NA         NA tail(pcfr2to4) #> An object of class \"PeriodicMTS\" #> Slot \"cycle\": Object from built-in class 'QuarterYearCycle' #> Cycle start: Quarter_1  #>  #>         USTotalIPI CanadaUnemployment GermanyGNP #> Y1990_3      118.3                 NA      468.9 #> Y1990_4      114.5                 NA      482.9 #> Y1991_1      111.4                 NA         NA #> Y1991_2      112.4                 NA         NA #> Y1991_3      116.0                 NA         NA #> Y1991_4      113.9                 NA         NA ## time of first and last data, can be NA's start(pcfr2to4) # 1955 Q1 #> [1] 1955    1 end(pcfr2to4)   # 1991 Q4 #> [1] 1991    4  ## time of first nonNA: availStart(pcfr[[2]]) # 1960 Q1 #> [1] 1960    1 availStart(pcfr2to4)  # 1960 Q1 #> [1] 1960    1  ## time of last nonNA: availEnd(pcfr[[2]])   # 1991 Q4 #> [1] 1991    4 availEnd(pcfr[[3]])   # 1987 Q4 #> [1] 1987    4 availEnd(pcfr[[4]])   # 1990 Q4 #> [1] 1990    4 ## but at least one of them is  available for 1991 Q4, so: availEnd(pcfr2to4)   # 1991 Q4 #> [1] 1991    4 ## this requests the time of the last full record: availEnd(pcfr2to4, any = FALSE)   # 1987 Q4 #> [1] 1987    4  pcfr2to4a <- window(pcfr2to4, start = availStart(pcfr2to4), end = availEnd(pcfr2to4)) head(pcfr2to4a) #> An object of class \"PeriodicMTS\" #> Slot \"cycle\": Object from built-in class 'QuarterYearCycle' #> Cycle start: Quarter_1  #>  #>         USTotalIPI CanadaUnemployment GermanyGNP #> Y1960_1       40.2                583      167.0 #> Y1960_2       39.8                427      176.2 #> Y1960_3       38.5                334      198.0 #> Y1960_4       38.0                439      190.5 #> Y1961_1       37.1                703      180.1 #> Y1961_2       39.2                480      184.9 tail(pcfr2to4a, 20) #> An object of class \"PeriodicMTS\" #> Slot \"cycle\": Object from built-in class 'QuarterYearCycle' #> Cycle start: Quarter_1  #>  #>         USTotalIPI CanadaUnemployment GermanyGNP #> Y1987_1      101.5               1358      388.3 #> Y1987_2      103.8               1197      402.4 #> Y1987_3      107.3               1097      417.5 #> Y1987_4      107.2               1016      431.6 #> Y1988_1      107.6                 NA      405.3 #> Y1988_2      110.0                 NA      416.6 #> Y1988_3      113.5                 NA      432.2 #> Y1988_4      112.6                 NA      446.4 #> Y1989_1      113.6                 NA      424.1 #> Y1989_2      114.5                 NA      436.3 #> Y1989_3      115.6                 NA      445.0 #> Y1989_4      114.3                 NA      460.6 #> Y1990_1      114.3                 NA      442.0 #> Y1990_2      115.5                 NA      452.1 #> Y1990_3      118.3                 NA      468.9 #> Y1990_4      114.5                 NA      482.9 #> Y1991_1      111.4                 NA         NA #> Y1991_2      112.4                 NA         NA #> Y1991_3      116.0                 NA         NA #> Y1991_4      113.9                 NA         NA  ## trim NA's from both ends, up to the firsxst/last full record: pcfr2to4b <- window(pcfr2to4, start = availStart(pcfr2to4, FALSE),                               end = availEnd(pcfr2to4, FALSE))  ## TODO: need a better example here since the first non-NA value for all ##     ts in pcfr2to4 is at the same  ## alternatively, use na.trim(), the default for is.na is \"any\" pcpres <- window(pcts(presidents), end = c(1972, 4))  availStart(pcpres) # 1945 2 #> [1] 1945    2 availEnd(pcpres)   # 1972 2 #> [1] 1972    2  both <- na.trim(pcpres) # same as \"both\" identical(na.trim(pcpres), both) # TRUE #> [1] TRUE head(both, 7) #> An object of class \"PeriodicTS\" #> Slot \"cycle\": Start:  1945   Quarter_2  #> Cycle:  QuarterYearCycle  #> Number of seasons: 4  #>  #>       Q1 Q2 Q3 Q4 #> Y1945    87 82 75 #> Y1946 63 50 43 32 tail(both) #> An object of class \"PeriodicTS\" #> Slot \"cycle\": Start:  1971   Quarter_1  #> Cycle:  QuarterYearCycle  #> Number of seasons: 4  #>  #>       Q1 Q2 Q3 Q4 #> Y1971 51 48 54 49 #> Y1972 49 61       head(na.trim(pcpres, \"left\"), 7) #> An object of class \"PeriodicTS\" #> Slot \"cycle\": Start:  1945   Quarter_2  #> Cycle:  QuarterYearCycle  #> Number of seasons: 4  #>  #>       Q1 Q2 Q3 Q4 #> Y1945    87 82 75 #> Y1946 63 50 43 32 tail(na.trim(pcpres, \"right\")) #> An object of class \"PeriodicTS\" #> Slot \"cycle\": Start:  1971   Quarter_1  #> Cycle:  QuarterYearCycle  #> Number of seasons: 4  #>  #>       Q1 Q2 Q3 Q4 #> Y1971 51 48 54 49 #> Y1972 49 61        cguk <- pcfr[c(\"CanadaUnemployment\", \"GermanyGNP\", \"UKTotalInvestment\")] availStart(cguk) #> [1] 1955    1 availStart(cguk, TRUE) # same #> [1] 1955    1  availStart(cguk, FALSE) #> [1] 1960    1  availEnd(cguk) #> [1] 1990    4 availEnd(cguk, TRUE) # same #> [1] 1990    4  availEnd(cguk, FALSE) #> [1] 1987    4   na.trim(cguk) #> An object of class \"PeriodicMTS\" #> Slot \"cycle\": Object from built-in class 'QuarterYearCycle' #> Cycle start: Quarter_1  #>  #>         CanadaUnemployment GermanyGNP UKTotalInvestment #> Y1960_1                583      167.0              7480 #> Y1960_2                427      176.2              7466 #> Y1960_3                334      198.0              7745 #> Y1960_4                439      190.5              8386 #> Y1961_1                703      180.1              8211 #> Y1961_2                480      184.9              8325 #> Y1961_3                325      202.9              8744 #> Y1961_4                358      195.8              8832 #> Y1962_1                561      185.4              8467 #> Y1962_2                373      195.0              8485 #> Y1962_3                282      214.5              8698 #> Y1962_4                346      204.9              8696 #> Y1963_1                546      183.0              7704 #> Y1963_2                372      199.9              8497 #> Y1963_3                272      223.5              8984 #> Y1963_4                305      215.4              9639 #> Y1964_1                463      201.6              9855 #> Y1964_2                326      214.4              9738 #> Y1964_3                243      232.8             10211 #> Y1964_4                266      226.9             10785 #> Y1965_1                397      213.4             10866 #> Y1965_2                298      226.7             10161 #> Y1965_3                210      243.4             10442 #> Y1965_4                214      239.2             11220 #> Y1966_1                303      224.3             11115 #> Y1966_2                237      235.5             10378 #> Y1966_3                236      250.0             10876 #> Y1966_4                230      240.3             11411 #> Y1967_1                340      220.3             11866 #> Y1967_2                294      232.6             11713 #> Y1967_3                260      248.3             11893 #> Y1967_4                290      248.2             12137 #> Y1968_1                411      226.9             12809 #> Y1968_2                365      243.0             11782 #> Y1968_3                332      267.1             12359 #> Y1968_4                324      267.2             13640 #> Y1969_1                405      244.0             12375 #> Y1969_2                368      262.3             11887 #> Y1969_3                329      287.1             12698 #> Y1969_4                346      286.2             13333 #> Y1970_1                455      257.4             12533 #> Y1970_2                490      280.1             12454 #> Y1970_3                479      298.2             12804 #> Y1970_4                479      298.3             13773 #> Y1971_1                601      274.5             12963 #> Y1971_2                545      286.2             12708 #> Y1971_3                494      304.8             13079 #> Y1971_4                502      302.5             13767 #> Y1972_1                591      286.0             13217 #> Y1972_2                540      296.9             12650 #> Y1972_3                536      315.2             12904 #> Y1972_4                545      318.9             13630 #> Y1973_1                599      304.5             14648 #> Y1973_2                501      312.1             13247 #> Y1973_3                476      328.7             13549 #> Y1973_4                483      328.8             14347 #> Y1974_1                564      309.4             14539 #> Y1974_2                494      314.5             12668 #> Y1974_3                488      328.4             13201 #> Y1974_4                512      324.2             14057 #> Y1975_1                738      298.2             13904 #> Y1975_2                685      308.2             12681 #> Y1975_3                670      322.1             13394 #> Y1975_4                666      329.5             13404 #> Y1976_1                776      316.1             14295 #> Y1976_2                717      328.1             12795 #> Y1976_3                709      335.2             13402 #> Y1976_4                703      348.8             13785 #> Y1977_1                909      328.6             13328 #> Y1977_2                838      334.1             12736 #> Y1977_3                826      341.8             13125 #> Y1977_4                824      358.9             14118 #> Y1978_1                999      336.5             14233 #> Y1978_2                930      346.4             13139 #> Y1978_3                878      354.8             13574 #> Y1978_4                827      370.2             13968 #> Y1979_1                966      348.3             14000 #> Y1979_2                856      361.5             13216 #> Y1979_3                759      369.8             14089 #> Y1979_4                762      384.0             15145 #> Y1980_1                953      365.3             14194 #> Y1980_2                907      365.4             12661 #> Y1980_3                816      372.8             13032 #> Y1980_4                784      381.7             13529 #> Y1981_1                951      360.9             12193 #> Y1981_2                864      364.9             11439 #> Y1981_3                840      374.8             12005 #> Y1981_4                937      384.7             12661 #> Y1982_1               1152      357.5             12423 #> Y1982_2               1266      364.8             11839 #> Y1982_3               1384      369.2             12869 #> Y1982_4               1455      379.5             13784 #> Y1983_1               1630      359.4             13485 #> Y1983_2               1515      370.4             12236 #> Y1983_3               1353      376.0             13130 #> Y1983_4               1295      393.1             14625 #> Y1984_1               1497      375.8             14552 #> Y1984_2               1430      375.6             13431 #> Y1984_3               1345      391.2             14504 #> Y1984_4               1325      405.5             15588 #> Y1985_1               1495      375.8             16000 #> Y1985_2               1353      387.2             13542 #> Y1985_3               1236      402.7             14922 #> Y1985_4               1228      412.4             15819 #> Y1986_1               1356      381.0             15393 #> Y1986_2               1245      400.1             13685 #> Y1986_3               1186      411.4             15579 #> Y1986_4               1156      422.2             16636 #> Y1987_1               1358      388.3             15956 #> Y1987_2               1197      402.4             14973 #> Y1987_3               1097      417.5             16859 #> Y1987_4               1016      431.6             18585 head( na.trim(cguk, sides = \"left\") ) #> An object of class \"PeriodicMTS\" #> Slot \"cycle\": Object from built-in class 'QuarterYearCycle' #> Cycle start: Quarter_1  #>  #>         CanadaUnemployment GermanyGNP UKTotalInvestment #> Y1960_1                583      167.0              7480 #> Y1960_2                427      176.2              7466 #> Y1960_3                334      198.0              7745 #> Y1960_4                439      190.5              8386 #> Y1961_1                703      180.1              8211 #> Y1961_2                480      184.9              8325 tail( na.trim(cguk, sides = \"right\") ) #> An object of class \"PeriodicMTS\" #> Slot \"cycle\": Object from built-in class 'QuarterYearCycle' #> Cycle start: Quarter_1  #>  #>         CanadaUnemployment GermanyGNP UKTotalInvestment #> Y1986_3               1186      411.4             15579 #> Y1986_4               1156      422.2             16636 #> Y1987_1               1358      388.3             15956 #> Y1987_2               1197      402.4             14973 #> Y1987_3               1097      417.5             16859 #> Y1987_4               1016      431.6             18585  head( na.trim(cguk, sides = \"left\", is.na = \"all\") ) #> An object of class \"PeriodicMTS\" #> Slot \"cycle\": Object from built-in class 'QuarterYearCycle' #> Cycle start: Quarter_1  #>  #>         CanadaUnemployment GermanyGNP UKTotalInvestment #> Y1955_1                 NA         NA              5654 #> Y1955_2                 NA         NA              5720 #> Y1955_3                 NA         NA              5925 #> Y1955_4                 NA         NA              6469 #> Y1956_1                 NA         NA              6019 #> Y1956_2                 NA         NA              6019 tail( na.trim(cguk, sides = \"right\", is.na = \"all\") ) #> An object of class \"PeriodicMTS\" #> Slot \"cycle\": Object from built-in class 'QuarterYearCycle' #> Cycle start: Quarter_1  #>  #>         CanadaUnemployment GermanyGNP UKTotalInvestment #> Y1989_3                 NA      445.0                NA #> Y1989_4                 NA      460.6                NA #> Y1990_1                 NA      442.0                NA #> Y1990_2                 NA      452.1                NA #> Y1990_3                 NA      468.9                NA #> Y1990_4                 NA      482.9                NA"},{"path":"https://geobosh.github.io/pcts/reference/backwardPartialCoefficients-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute periodic backward partial coefficients — backwardPartialCoefficients-methods","title":"Compute periodic backward partial coefficients — backwardPartialCoefficients-methods","text":"Methods computation periodic backward partial coefficients.","code":""},{"path":"https://geobosh.github.io/pcts/reference/backwardPartialCoefficients-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Compute periodic backward partial coefficients — backwardPartialCoefficients-methods","text":"signature(x = \"VirtualPeriodicAutocovariances\")","code":""},{"path":"https://geobosh.github.io/pcts/reference/backwardPartialVariances-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute periodic backward partial variances — backwardPartialVariances-methods","title":"Compute periodic backward partial variances — backwardPartialVariances-methods","text":"Compute periodic backward partial variances.","code":""},{"path":"https://geobosh.github.io/pcts/reference/backwardPartialVariances-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Compute periodic backward partial variances — backwardPartialVariances-methods","text":"signature(x = \"VirtualPeriodicAutocovariances\")","code":""},{"path":"https://geobosh.github.io/pcts/reference/dataFranses1996.html","id":null,"dir":"Reference","previous_headings":"","what":"Example data from Franses (1996) — dataFranses1996","title":"Example data from Franses (1996) — dataFranses1996","text":"multivariate time series containing data used   examples Franses (1996).","code":""},{"path":"https://geobosh.github.io/pcts/reference/dataFranses1996.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example data from Franses (1996) — dataFranses1996","text":"","code":"data(\"dataFranses1996\")"},{"path":"https://geobosh.github.io/pcts/reference/dataFranses1996.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example data from Franses (1996) — dataFranses1996","text":"multivariate quarterly time series.","code":""},{"path":"https://geobosh.github.io/pcts/reference/dataFranses1996.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example data from Franses (1996) — dataFranses1996","text":"column quarterly time series. time series start end   different times, NA's used align single   multivariate time series. Detailed account sources data   given   Franses (1996; Data Appendix, p. 214) .  year (column 1) time formatted yyyy.Q, yyyy year       Q quarter (one 1, 2, 3 4.). column       part original data really needed since       time series object contains time information.  USTotalIPI (column 2) Total Industrial Production Index United States (1985 =       100), 1960.1--1991.4. CanadaUnemployment (column 3) Unemployment Canada, measured 1000 persons, 1960.1 - 1987.4. GermanyGNP (column 4) Real GNP Germany, 1960.1 - 1990.4 . UKTotalInvestment (column 5) Real Total Investment United Kindom, 1955.1 - 1988.4. SA_USTotalIPI (column 6)       Seasonally adjusted USTotalIPI. SA_CanadaUnemployment (column 7) Seasonally adjusted CanadaUnemployment. SA_GermanyGNP (column 8) Seasonally adjusted GermanyGNP. UKGDP (column 9) United Kingdom gross domestic product (1985 prices),       1955.1--1988.4. UKTotalConsumption (column 10) United Kingdom total consumption (1985 prices),       1955.1--1988.4. UKNondurablesConsumption (column 11) United Kindom nondurables consumption (1985 prices), 1955.1--1988.4. UKExport (column 12) United Kindom exports goods services (1985 prices),       1955.1--1988.4. UKImport (column 13) United Kindom imports goods services (1985 prices),       1955.1--1988.4. UKPublicInvestment (column 14) United Kindom public investment (1985 prices), 1962.1--1988.4. UKWorkforce (column 15) United Kindom workforce (consisting workforce employment       unemployment), 1955.1--1988.4. SwedenNondurablesConsumption (column 16) Real per capita non-durables consumption Sweden (measured       logs), 1963.1--1988.1. SwedenDisposableIncome (column 17) Real per capita disposable income Sweden (measured logs),       1963.1--1988.1. SA_SwedenNondurablesConsumption (column 18) Seasonally adjusted SwedenNondurablesConsumption       Census X-11 method, 1964.1--1988.1.  (Using approximate linear       Census X-11 filter given Table 4.1, p. 52       Franses (1996)  generating forecasts       backcasts described Ooms (1994)).  SA_SwedenDisposableIncome (column 19) Seasonally adjusted SwedenDisposableIncome Census X-11       method, 1964.1--1988.1. (Using method .)  details individual time series given   Franses (1996) .","code":""},{"path":"https://geobosh.github.io/pcts/reference/dataFranses1996.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example data from Franses (1996) — dataFranses1996","text":"data downloaded    http://people..eur.nl/franses/research/data/data1.txt,   link now broken.","code":""},{"path":"https://geobosh.github.io/pcts/reference/dataFranses1996.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Example data from Franses (1996) — dataFranses1996","text":"time series dataFranses1996 available   separate datasets package `partsm'. numbers   note , time writing , datasets   carry complete time information.","code":""},{"path":"https://geobosh.github.io/pcts/reference/dataFranses1996.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example data from Franses (1996) — dataFranses1996","text":"Franses PH (1996). Periodicity Stochastic Trends Economic Time Series. Oxford University Press Inc., New York.","code":""},{"path":"https://geobosh.github.io/pcts/reference/dataFranses1996.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example data from Franses (1996) — dataFranses1996","text":"","code":"data(dataFranses1996) class(dataFranses1996) #> [1] \"mts\"    \"ts\"     \"matrix\" colnames(dataFranses1996) #>  [1] \"year\"                            \"USTotalIPI\"                      #>  [3] \"CanadaUnemployment\"              \"GermanyGNP\"                      #>  [5] \"UKTotalInvestment\"               \"SA_USTotalIPI\"                   #>  [7] \"SA_CanadaUnemployment\"           \"SA_GermanyGNP\"                   #>  [9] \"UKGDP\"                           \"UKTotalConsumption\"              #> [11] \"UKNondurablesConsumption\"        \"UKExport\"                        #> [13] \"UKImport\"                        \"UKPublicInvestment\"              #> [15] \"UKWorkforce\"                     \"SwedenNondurablesConsumption\"    #> [17] \"SwedenDisposableIncome\"          \"SA_SwedenNondurablesConsumption\" #> [19] \"SA_SwedenDisposableIncome\"       dim(dataFranses1996) # c(148, 19) #> [1] 148  19 plot(dataFranses1996[ , 2:11])   tipi <- dataFranses1996[ , \"USTotalIPI\"] plot(tipi)  ## convert to PeriodicTS and remove NA's at the start and end pctipi <- pcts(tipi) pctipi <- window(pctipi, start = availStart(pctipi), end = availEnd(pctipi)) plot(pctipi)   ## convert  the whole dataset to class \"PeriodicMTS\" pcfr <- pcts(dataFranses1996)  colnames(pcfr)[2:3] #  \"USTotalIPI\" \"CanadaUnemployment\" #> [1] \"USTotalIPI\"         \"CanadaUnemployment\"  ## subset as \"PeriodicMTS\" pcfr2to3 <- pcfr[2:3] plot(pcfr2to3)  ## \"[\" \"PeriodicMTS\" even with length one arg. pcfr2to2  <- pcfr[2] pcfr2to2a <- pcfr[\"USTotalIPI\"] # same  ## use \"[[\" or $ to get \"PeriodicTS\" pcfr2 <- pcfr[[2]] pcfr2a <- pcfr[[\"USTotalIPI\"]] # same pcfr2b <- pcfr$USTotalIPI      # same identical(pcfr2, pcfr2a) # TRUE #> [1] TRUE identical(pcfr2, pcfr2b) # TRUE #> [1] TRUE  cycle(pcfr) #> An object of class \"PeriodicTS\" #> Slot \"cycle\": Start:  1955   Quarter_1  #> Cycle:  QuarterYearCycle  #> Number of seasons: 4  #>  #>       Q1 Q2 Q3 Q4 #> Y1955  1  2  3  4 #> Y1956  1  2  3  4 #> Y1957  1  2  3  4 #> Y1958  1  2  3  4 #> Y1959  1  2  3  4 #> Y1960  1  2  3  4 #> Y1961  1  2  3  4 #> Y1962  1  2  3  4 #> Y1963  1  2  3  4 #> Y1964  1  2  3  4 #> Y1965  1  2  3  4 #> Y1966  1  2  3  4 #> Y1967  1  2  3  4 #> Y1968  1  2  3  4 #> Y1969  1  2  3  4 #> Y1970  1  2  3  4 #> Y1971  1  2  3  4 #> Y1972  1  2  3  4 #> Y1973  1  2  3  4 #> Y1974  1  2  3  4 #> Y1975  1  2  3  4 #> Y1976  1  2  3  4 #> Y1977  1  2  3  4 #> Y1978  1  2  3  4 #> Y1979  1  2  3  4 #> Y1980  1  2  3  4 #> Y1981  1  2  3  4 #> Y1982  1  2  3  4 #> Y1983  1  2  3  4 #> Y1984  1  2  3  4 #> Y1985  1  2  3  4 #> Y1986  1  2  3  4 #> Y1987  1  2  3  4 #> Y1988  1  2  3  4 #> Y1989  1  2  3  4 #> Y1990  1  2  3  4 #> Y1991  1  2  3  4 frequency(pcfr) #> [1] 4"},{"path":"https://geobosh.github.io/pcts/reference/date_ass-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace methods for date in package pcts — date<--methods","title":"Replace methods for date in package pcts — date<--methods","text":"Replace methods date package pcts.","code":""},{"path":"https://geobosh.github.io/pcts/reference/date_ass-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Replace methods for date in package pcts — date<--methods","text":"signature(x = \"BasicCycle\")  signature(x = \"Cyclic\")","code":""},{"path":"https://geobosh.github.io/pcts/reference/ex1f.html","id":null,"dir":"Reference","previous_headings":"","what":"An example PAR autocorrelation function — ex1f","title":"An example PAR autocorrelation function — ex1f","text":"ex1 autocorrelation function used reference   example solution periodic Yule-Walker system gives   invalid PAR model.  can happen Lambert-Lacroix's   condition PAR order satisfied, see pdSafeParOrder.","code":""},{"path":"https://geobosh.github.io/pcts/reference/ex1f.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"An example PAR autocorrelation function — ex1f","text":"function two arguments","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/ex1f.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"An example PAR autocorrelation function — ex1f","text":"See pp. 429--430 reference.","code":""},{"path":"https://geobosh.github.io/pcts/reference/ex1f.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"An example PAR autocorrelation function — ex1f","text":"Lambert-Lacroix S (2005). `` Extension autocovariance coefficients sequence periodically correlated processes.'' Journal Time Series Analysis, 26(6), pp. 423-435.","code":""},{"path":"https://geobosh.github.io/pcts/reference/ex1f.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"An example PAR autocorrelation function — ex1f","text":"","code":"data(ex1f) ## compute the first few autocorrelations pc3 <- slMatrix(period = 2, maxlag = 5, f = ex1f, type = \"tt\") ## Fir a PAR(0,2) model res0p2 <- alg1(pc3[],c(0,2)) ## model is invalid since a partial autocorrelation is larger than one: res0p2$be #>      [,1] [,2]     [,3] #> [1,]    1  0.0 0.000000 #> [2,]    1  0.9 2.064742 ## Find a modified order: pdSafeParOrder(c(0,2)) # PAR(1,2) #> [1] 1 2 ## now the parcor's are fine: res1p2 <- alg1(pc3[],c(1,2)) res1p2$be #>      [,1] [,2]      [,3] #> [1,]    1 0.81 0.0000000 #> [2,]    1 0.90 0.6689647"},{"path":"https://geobosh.github.io/pcts/reference/filterCoef-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the coefficients of a periodic filter — filterCoef-methods","title":"Get the coefficients of a periodic filter — filterCoef-methods","text":"Get coefficients periodic filter.","code":""},{"path":"https://geobosh.github.io/pcts/reference/filterCoef-methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the coefficients of a periodic filter — filterCoef-methods","text":"filterCoef generic function extract coefficients   periodic filters. Argument convention can used force   particular convention signs. description   methods defined package. convention missing, coefficient matrix returned   stored object. Otherwise, convention one   strings \"BJ\", \"--\" \"-\", coefficients   returned opposite sign auxilliary polynomial   (Box-Jenkins' convention). convention one \"SP\",   \"++\" \"+\", coefficients auxilliary   polynomial (convention used signal processing).","code":""},{"path":"https://geobosh.github.io/pcts/reference/filterCoef-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the coefficients of a periodic filter — filterCoef-methods","text":"matrix","code":""},{"path":"https://geobosh.github.io/pcts/reference/filterCoef-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Get the coefficients of a periodic filter — filterCoef-methods","text":"signature(object = \"PeriodicBJFilter\", convention = \"character\")  signature(object = \"PeriodicSPFilter\", convention = \"character\")","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/filterPoly-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"~~ Dummy title ~~ — filterPoly-methods","title":"~~ Dummy title ~~ — filterPoly-methods","text":"~~ Dummy description ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/filterPoly-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"~~ Dummy title ~~ — filterPoly-methods","text":"signature(object = \"PeriodicBJFilter\")  signature(object = \"PeriodicSPFilter\")","code":""},{"path":"https://geobosh.github.io/pcts/reference/filterPolyCoef-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"~~ Dummy title ~~ — filterPolyCoef-methods","title":"~~ Dummy title ~~ — filterPolyCoef-methods","text":"~~ Dummy description ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/filterPolyCoef-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"~~ Dummy title ~~ — filterPolyCoef-methods","text":"signature(object = \"PeriodicBJFilter\")  signature(object = \"PeriodicSPFilter\")","code":""},{"path":"https://geobosh.github.io/pcts/reference/fitPM.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit periodic time series models — fitPM","title":"Fit periodic time series models — fitPM","text":"Generic function methods fitting periodic time series models.","code":""},{"path":"https://geobosh.github.io/pcts/reference/fitPM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit periodic time series models — fitPM","text":"","code":"fitPM( model, x, ...)"},{"path":"https://geobosh.github.io/pcts/reference/fitPM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit periodic time series models — fitPM","text":"x time series. model periodic model, see Details. ... arguments passed individual methods.","code":""},{"path":"https://geobosh.github.io/pcts/reference/fitPM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit periodic time series models — fitPM","text":"generic function. model provides specification model. particular,   class model determines model fitted.  Specific   values parameters generally ignored non-iterative   methods methods can handle detailed specifications, see   individual methods.","code":""},{"path":"https://geobosh.github.io/pcts/reference/fitPM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit periodic time series models — fitPM","text":"fitted model,   typically object class class(model)","code":""},{"path":"https://geobosh.github.io/pcts/reference/fitPM.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Fit periodic time series models — fitPM","text":"signature(model = \"\", x = \"\") default method. simply exits error message   stating fitPM method model   specified model. signature(model = \"numeric\", x = \"\") Fits PAR model x. model vector   non-negative integers giving PAR order. length vector   taken number seasons. convenience method. constructs PAR model callls   method model = \"PeriodicArModel\". signature(model = \"PeriodicArModel\", x = \"\") Fits PAR model. signature(model = \"mcSpec\", x = \"\") Fits periodic model according specification given     model. Currently method uses mC.ss set     optimisation environment calls one optimisation     functions environment specified argument     optim.method, see . Additional arguments may specified control optimisation. Argument init can used give initial values.     passed mC.ss (format required ). optim.method name optimisation function     environment returned mC.ss. default     optim.method = \"minim\", based standard R function     optim.  Alternatives \"minimBB\" \"minimBBLU\".     needs documented see mC.ss xx.ss     details. arguments passed optimisation method.     typical argument supported optimisation functions     control. signature(model = \"PiPeriodicArModel\", x = \"\") Fits periodically integrated PAR model using parameters     model initial values. Calls pclspiar     actual work. signature(model = \"SiPeriodicArModel\", x = \"\") Fits seasonally integrated PAR model. signature(model = \"PeriodicArModel\", x = \"PeriodicMTS\")  signature(model = \"PeriodicArModel\", x = \"PeriodicTS\")","code":""},{"path":"https://geobosh.github.io/pcts/reference/fitPM.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit periodic time series models — fitPM","text":"(todo: completed properly later)   Hipel KW, McLeod AI (1994). Time series modelling water resources environmental systems,  Developments water science; 45. London; Amsterdam: Elsevier. Boshnakov GN, Iqelan BM (2009). “Generation time series models given spectral properties.” J. Time Series Anal., 30(3), 349--368. ISSN 0143-9782, doi: 10.1111/j.1467-9892.2009.00617.x .","code":""},{"path":"https://geobosh.github.io/pcts/reference/fitPM.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit periodic time series models — fitPM","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/pcts/reference/fitPM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit periodic time series models — fitPM","text":"","code":"## newm1 <- list(phi = matrix(1:12, nrow=4), p=rep(3,4), period=4, si2 = rep(1,4)) ## new_pfm1 <- PeriodicFilterModel(newm1, intercept=0)  ## generate some data; set.seed(1234) simts1 <- pcts(rnorm(1024), nseasons = 4)  fitPM(c(3,3,3,3), simts1) #> An object of class FittedPeriodicArModel  #> Number of seasons:  4  #> Mean:     -0.06076922 -0.002750496 -0.0114049 -0.05637432  #> SigmaSq:    1.060891 0.9714497 0.9903078 0.9074826  #>  #> Periodic order:  AR(3,3,3,3)  #>  #>            ar1          ar2          ar3 #> S1  0.11396728 -0.122469184 0.0075900305 #> S2 -0.00450794  0.083377197 0.0164112748 #> S3 -0.04491259 -0.005276924 0.0396226884 #> S4  0.03387766 -0.070385164 0.0001322766 #>  #> number of obs. for each season: #>       256 256 256 256  fitPM(3, simts1) #> An object of class FittedPeriodicArModel  #> Number of seasons:  4  #> Mean:     -0.06076922 -0.002750496 -0.0114049 -0.05637432  #> SigmaSq:    1.060891 0.9714497 0.9903078 0.9074826  #>  #> Periodic order:  AR(3,3,3,3)  #>  #>            ar1          ar2          ar3 #> S1  0.11396728 -0.122469184 0.0075900305 #> S2 -0.00450794  0.083377197 0.0164112748 #> S3 -0.04491259 -0.005276924 0.0396226884 #> S4  0.03387766 -0.070385164 0.0001322766 #>  #> number of obs. for each season: #>       256 256 256 256  ## the fit on the underlying data is equivalent. fitPM(c(3,3,3,3), as.numeric(simts1)) #> An object of class FittedPeriodicArModel  #> Number of seasons:  4  #> Mean:     -0.06076922 -0.002750496 -0.0114049 -0.05637432  #> SigmaSq:    1.060891 0.9714497 0.9903078 0.9074826  #>  #> Periodic order:  AR(3,3,3,3)  #>  #>            ar1          ar2          ar3 #> S1  0.11396728 -0.122469184 0.0075900305 #> S2 -0.00450794  0.083377197 0.0164112748 #> S3 -0.04491259 -0.005276924 0.0396226884 #> S4  0.03387766 -0.070385164 0.0001322766 #>  #> number of obs. for each season: #>       256 256 256 256   ## equivalently, use a PAR(3,3,3,3) model for argument 'model' ## here the coefficients of pfm1 are ignored, since the estimation is linear. pfm1 <- PeriodicArModel(matrix(1:12, nrow = 4), order = rep(3,4), sigma2 = 1) pfm1 #> An object of class \"PeriodicArModel\" #> Number of seasons:  4  #> Mean:     0 0 0 0  #> SigmaSq:    1 1 1 1  #>  #> Periodic order:  AR(3,3,3,3)  #>  #>    ar1 ar2 ar3 #> S1   1   5   9 #> S2   2   6  10 #> S3   3   7  11 #> S4   4   8  12 ## these give same results as above fitPM(pfm1, simts1) #> An object of class FittedPeriodicArModel  #> Number of seasons:  4  #> Mean:     -0.06076922 -0.002750496 -0.0114049 -0.05637432  #> SigmaSq:    1.060891 0.9714497 0.9903078 0.9074826  #>  #> Periodic order:  AR(3,3,3,3)  #>  #>            ar1          ar2          ar3 #> S1  0.11396728 -0.122469184 0.0075900305 #> S2 -0.00450794  0.083377197 0.0164112748 #> S3 -0.04491259 -0.005276924 0.0396226884 #> S4  0.03387766 -0.070385164 0.0001322766 #>  #> number of obs. for each season: #>       256 256 256 256  fitPM(pfm1, as.numeric(simts1)) #> An object of class FittedPeriodicArModel  #> Number of seasons:  4  #> Mean:     -0.06076922 -0.002750496 -0.0114049 -0.05637432  #> SigmaSq:    1.060891 0.9714497 0.9903078 0.9074826  #>  #> Periodic order:  AR(3,3,3,3)  #>  #>            ar1          ar2          ar3 #> S1  0.11396728 -0.122469184 0.0075900305 #> S2 -0.00450794  0.083377197 0.0164112748 #> S3 -0.04491259 -0.005276924 0.0396226884 #> S4  0.03387766 -0.070385164 0.0001322766 #>  #> number of obs. for each season: #>       256 256 256 256   fitPM(c(1,1,1,1), simts1) #> An object of class FittedPeriodicArModel  #> Number of seasons:  4  #> Mean:     -0.06076922 -0.002750496 -0.0114049 -0.05637432  #> SigmaSq:    1.075896 0.978132 0.9917217 0.91232  #>  #> Periodic order:  AR(1,1,1,1)  #>  #>             ar1 #> S1  0.108486672 #> S2  0.001318166 #> S3 -0.041828251 #> S4  0.036776157 #>  #> number of obs. for each season: #>       256 256 256 256  fitPM(c(3,2,2,1), simts1) #> An object of class FittedPeriodicArModel  #> Number of seasons:  4  #> Mean:     -0.06076922 -0.002750496 -0.0114049 -0.05637432  #> SigmaSq:    1.060947 0.9717132 0.9917187 0.91232  #>  #> Periodic order:  AR(3,2,2,1)  #>  #>             ar1          ar2           ar3 #> S1  0.113395504 -0.122778518 -0.0004315542 #> S2 -0.006365449  0.084234949            NA #> S3 -0.041825811 -0.001666751            NA #> S4  0.036776157           NA            NA #>  #> number of obs. for each season: #>       256 256 256 256  fitPM(c(3,2,2,2), simts1) #> An object of class FittedPeriodicArModel  #> Number of seasons:  4  #> Mean:     -0.06076922 -0.002750496 -0.0114049 -0.05637432  #> SigmaSq:    1.060891 0.9717132 0.9917187 0.9074826  #>  #> Periodic order:  AR(3,2,2,2)  #>  #>             ar1          ar2         ar3 #> S1  0.113967280 -0.122469184 0.007590031 #> S2 -0.006365449  0.084234949          NA #> S3 -0.041825811 -0.001666751          NA #> S4  0.033877417 -0.070384980          NA #>  #> number of obs. for each season: #>       256 256 256 256   pdSafeParOrder(c(3,2,2,1)) #> [1] 3 2 2 2 pdSafeParOrder(rev(c(3,2,2,1))) #> [1] 1 2 2 3  x <- arima.sim(list(ar = 0.9), n = 960) pcx <- pcts(x, nseasons = 4) mx <- matrix(x, nrow = 4)  ##pc.acf(mx) ##pc.acf(mx, maxlag=10) ## TODO: avoid the warning when length ot the time series is not multiple autocovariances(t(mx), maxlag = 6, nseasons = 4) #> An object of class \"Lagged2d\" #> Slot *data*:  #>     Lag_0    Lag_1    Lag_2    Lag_3    Lag_4    Lag_5    Lag_6 #>  4.413696 3.698001 3.444325 3.083434 2.981296 2.740127 2.443547 #>  5.256342 4.480398 3.791234 3.376241 2.959491 2.945734 2.704898 #>  4.544553 4.226788 3.573730 2.787481 2.179323 1.972540 2.118425 #>  4.744290 4.149401 3.620436 3.039397 2.267672 1.595720 1.419777 #>  6.188442 4.913592 4.132992 3.413550 2.893992 1.944995 1.202820 #>  5.079685 5.095852 4.020852 3.462512 2.909262 2.517747 1.724930 #>  4.452634 4.097511 4.466851 3.581613 2.929054 2.568013 2.159905 #>  4.028403 3.766262 3.375314 3.895400 3.027806 2.462040 2.266185 #>  4.256483 3.789805 3.519559 3.181409 3.595804 2.723855 2.312791 #>  5.064014 4.082757 3.780803 3.857862 3.271179 3.849951 2.962659 #>  4.610889 4.241189 3.677709 3.378335 3.220566 2.679142 3.078473 #>  4.492845 4.083564 3.715123 3.132441 2.782178 2.780713 2.430421 #>  4.759835 4.221811 3.785254 3.334577 2.753388 2.379137 2.523684 #>  4.176337 3.914353 3.379820 3.318057 2.895464 2.089529 1.813878 #>  4.256341 3.795704 3.522276 3.120697 3.030260 2.548401 1.864357 #>  4.123065 3.730340 3.387307 3.057720 2.614952 2.406073 2.003338 autocovariances(t(mx)) #> An object of class \"SampleAutocovariances\" #> , , Lag_0 #>  #>                                      #>  4.940244 4.425333 3.856613 3.312517 #>  4.425333 4.931782 4.153459 3.576585 #>  3.856613 4.153459 4.586589 4.037720 #>  3.312517 3.576585 4.037720 4.444731 #>  #> , , Lag_1 #>  #>                                      #>  3.053109 3.270405 3.765441 4.205794 #>  2.830618 3.009076 3.520014 3.771935 #>  2.262606 2.432067 2.839903 3.242108 #>  1.928944 2.007498 2.285101 2.672126 #>  #> , , Lag_2 #>  #>                                      #>  1.754047 1.767143 2.068452 2.409498 #>  1.430174 1.496301 1.828329 2.244051 #>  1.298815 1.204518 1.458011 1.818073 #>  1.238070 1.181317 1.385222 1.602964 #>  #> , , Lag_3 #>  #>                                         #>  1.3489948 1.2683819 1.4101905 1.573585 #>  0.9844681 0.8640092 1.0299877 1.269531 #>  0.9647423 0.9969533 0.9680465 1.158972 #>  1.1158544 1.1012862 1.0621654 1.144140 #>  #> , , Lag_4 #>  #>                                          #>  1.0681173 1.1595254 1.0799309 1.1913186 #>  0.8013338 0.9328923 0.7987529 0.8834352 #>  0.8382119 0.9644516 0.8820007 0.8776038 #>  0.9012098 1.0414786 1.0527977 0.9306610 #>  #> , , Lag_5 #>  #>                                          #>  0.8764845 1.0569533 1.0166630 0.9120474 #>  0.8499661 1.0786949 0.8387545 0.7325839 #>  0.6867834 0.9726713 0.8366954 0.8057214 #>  0.8406734 1.0936087 0.8225248 0.8450239 #>  #> , , Lag_6 #>  #>                                          #>  0.9444448 1.1035309 0.8113775 0.8291835 #>  1.1822682 1.2821839 1.0012574 0.8592283 #>  0.8407831 0.8361079 0.6282596 0.6109829 #>  0.8258035 0.7665833 0.6435341 0.6931841 #>  #> , , Lag_7 #>  #>                                          #>  0.8689502 0.7994249 0.7699847 0.7690557 #>  1.0024370 0.9676477 0.9242707 0.9797624 #>  0.6284261 0.5784530 0.5320890 0.5642380 #>  0.5484201 0.5434399 0.4715212 0.5167750 #>  #> , , Lag_8 #>  #>                                          #>  0.3468684 0.4347957 0.4606310 0.4804946 #>  0.6027137 0.5625705 0.6254156 0.6782344 #>  0.4822539 0.4593642 0.4413930 0.4271425 #>  0.4255004 0.4902419 0.4739370 0.3877285 #>  #> , , Lag_9 #>  #>                                          #>  0.2562200 0.3388748 0.2662562 0.2117790 #>  0.3822483 0.4504162 0.3251202 0.3949501 #>  0.1804663 0.3399479 0.2212054 0.3085179 #>  0.1899286 0.3206453 0.1264308 0.1618857 #>  #> , , Lag_10 #>  #>                                                #>   0.15180484 0.1875179 -0.03011971 -0.01144414 #>   0.05629723 0.1683812 -0.02502021  0.03307518 #>  -0.08409547 0.1247324 -0.20909008 -0.16511840 #>  -0.07978351 0.1421987 -0.13790670 -0.11767234 #>  #> , , Lag_11 #>  #>                                                  #>  -0.11875727  0.136673414 -0.12715441 -0.1241331 #>  -0.13047205  0.071926993 -0.12785582 -0.1132037 #>  -0.08908832 -0.009374151 -0.14856401 -0.1563577 #>  -0.04172053  0.093328912  0.04497078 -0.1002592 #>  #> , , Lag_12 #>  #>                                                     #>  -0.0005362661  0.055885198 -0.06454129 -0.12617478 #>  -0.0837065154 -0.030487010 -0.12492654 -0.05076665 #>  -0.1603845066 -0.092526648 -0.18793024 -0.07192433 #>  -0.0329581327 -0.002391903 -0.07344575  0.04800647 #>  #> , , Lag_13 #>  #>                                                  #>  0.110795032 0.08497155 -0.10692939  0.039275700 #>  0.067135202 0.08472719 -0.08162884 -0.013675882 #>  0.003970013 0.07475564 -0.12919526 -0.199029101 #>  0.117818973 0.25836952  0.01765533  0.005315572 #>  #> , , Lag_14 #>  #>                                            #>  0.2569690 0.4167017 0.1750001 0.099989082 #>  0.2811720 0.3627738 0.2535473 0.142481793 #>  0.2898364 0.3371195 0.1645728 0.008941963 #>  0.2990899 0.3708633 0.1952323 0.025439383 #>  #> , , Lag_15 #>  #>                                          #>  0.3366081 0.3613924 0.3104424 0.1448003 #>  0.4606357 0.4791444 0.4525622 0.2297306 #>  0.3597465 0.3331262 0.3165522 0.1907237 #>  0.3781567 0.3046630 0.2260963 0.2302541 #>  #> , , Lag_16 #>  #>                                          #>  0.3386886 0.2301517 0.1967166 0.2457013 #>  0.4153102 0.2978708 0.3316045 0.3155847 #>  0.3095268 0.2480752 0.2709355 0.3258925 #>  0.2947141 0.2232702 0.2175240 0.3021335 #>  #> , , Lag_17 #>  #>                                          #>  0.3556765 0.2901412 0.2181435 0.3035475 #>  0.3473894 0.3594809 0.3021085 0.3914716 #>  0.3700382 0.4697207 0.3183025 0.4731177 #>  0.2458445 0.4474799 0.2438784 0.4462941 #>  #> Slot n: #> [1] 240 #> Slot varnames: #> [1] \"Series 1\" \"Series 2\" \"Series 3\" \"Series 4\" #> Slot objectname:  x  ##It is an error to have more columns than rows. ## autocovariances(mx, maxlag = 6, nseasons = 4) ## autocovariances(mx)  num2pcpar(mx, c(1,1,1,1), period = 4) #> $mean #> [1] 0.2212892 0.2610529 0.2222639 0.1751942 #>  #> $coef #> An object of class \"slMatrix\" #> Slot \"m\": #>       lag #> season 0          1 #>      1 1 -0.9462426 #>      2 1 -0.8957722 #>      3 1 -0.8421822 #>      4 1 -0.8803319 #>  #>  #> $scale #> [1] 0.9800724 0.9837131 1.0433693 0.9435026 #>  num2pcpar(mx, c(3,3,3,3), period = 4) #> $mean #> [1] 0.2212892 0.2610529 0.2222639 0.1751942 #>  #> $coef #> An object of class \"slMatrix\" #> Slot \"m\": #>       lag #> season 0          1            2           3 #>      1 1 -0.9962631  0.009726434  0.05118143 #>      2 1 -0.9003005  0.144883523 -0.15588601 #>      3 1 -0.7223822 -0.177308198  0.05138492 #>      4 1 -0.9444632  0.052370207  0.01986882 #>  #>  #> $scale #> [1] 0.9768186 0.9723284 1.0339197 0.9404123 #>   sipfm1 <- new(\"SiPeriodicArModel\", iorder = 1, siorder = 1, pcmodel = pfm1) sipfm1 #> An object of class \"SiPeriodicArModel\" #> iorder: 1, siorder: 1 #> PAR part of the model, An object of class \"PeriodicArModel\" #> Number of seasons:  4  #> Mean:     0 0 0 0  #> SigmaSq:    1 1 1 1  #>  #> Periodic order:  AR(3,3,3,3)  #>  #>    ar1 ar2 ar3 #> S1   1   5   9 #> S2   2   6  10 #> S3   3   7  11 #> S4   4   8  12 fitPM(sipfm1, mx) #> An object of class \"SiPeriodicArModel\" #> iorder: 1, siorder: 1 #> PAR part of the model, An object of class FittedPeriodicArModel  #> Number of seasons:  4  #> Mean:     0 0 0 0  #> SigmaSq:    1.900178 2.014823 2.512701 1.919159  #>  #> Periodic order:  AR(3,3,3,3)  #>  #>            ar1         ar2        ar3 #> S1  0.03633172  0.02831852 0.02492281 #> S2 -0.02263934 -0.21176922 0.09351833 #> S3 -0.17347841  0.01862405 0.13451737 #> S4  0.02770379  0.11071311 0.07843985 #>  #> number of obs. for each season: #>       238 238 238 238  pfm1 #> An object of class \"PeriodicArModel\" #> Number of seasons:  4  #> Mean:     0 0 0 0  #> SigmaSq:    1 1 1 1  #>  #> Periodic order:  AR(3,3,3,3)  #>  #>    ar1 ar2 ar3 #> S1   1   5   9 #> S2   2   6  10 #> S3   3   7  11 #> S4   4   8  12   ## experiments and testing fit1    <- fitPM(c(3,3,3,3), simts1) fit1_mf <- new(\"MultiFilter\", coef = fit1@ar@coef) vs      <- mcompanion::mf_VSform(fit1_mf, form = \"I\") tmp <- mcompanion::VAR2pcfilter(vs$Phi[ , -4],                                 Phi0inv = vs$Phi0inv, D = fit1@sigma2, what = \"\") names(tmp) #  \"pcfilter\" \"var\"      \"Uform\"    #> [1] \"pcfilter\" \"var\"      \"Uform\"    tmp$var #> [1] 0.9074826 0.9903078 0.9714497 1.0608910 zapsmall(tmp$pcfilter) #>             [,1]        [,2]       [,3] [,4] [,5] [,6] #> [1,]  0.11396728 -0.12246918 0.00759003    0    0    0 #> [2,] -0.00450794  0.08337720 0.01641127    0    0    0 #> [3,] -0.04491259 -0.00527692 0.03962269    0    0    0 #> [4,]  0.03387766 -0.07038516 0.00013228    0    0    0 fit1@ar@coef #>       lag #> season           1            2            3 #>      1  0.11396728 -0.122469184 0.0075900305 #>      2 -0.00450794  0.083377197 0.0164112748 #>      3 -0.04491259 -0.005276924 0.0396226884 #>      4  0.03387766 -0.070385164 0.0001322766 all.equal(tmp$pcfilter[ , 1:3], fit1@ar@coef, check.attributes = FALSE) # TRUE #> [1] TRUE tmp$Uform #> $Sigma #> [1] 1.0608910 0.9714497 0.9903078 0.9074826 #>  #> $U0 #>      [,1]        [,2]       [,3]          [,4] #> [1,]    1 -0.03387766 0.07038516 -0.0001322766 #> [2,]    0  1.00000000 0.04491259  0.0052769241 #> [3,]    0  0.00000000 1.00000000  0.0045079396 #> [4,]    0  0.00000000 0.00000000  1.0000000000 #>  #> $U #>              [,1]          [,2]          [,3] #> [1,] 1.224810e-18  7.453890e-20 -2.117582e-22 #> [2,] 3.962269e-02  0.000000e+00 -6.776264e-21 #> [3,] 8.337720e-02  1.641127e-02  0.000000e+00 #> [4,] 1.139673e-01 -1.224692e-01  7.590031e-03 #>  #> $U0inv #>      [,1]       [,2]        [,3]          [,4] #> [1,]    1 0.03387766 -0.07190670  0.0002776578 #> [2,]    0 1.00000000 -0.04491259 -0.0050744608 #> [3,]    0 0.00000000  1.00000000 -0.0045079396 #> [4,]    0 0.00000000  0.00000000  1.0000000000 #>  #> $perm #> [1] 4 3 2 1 #>  fit1@sigma2 #> [1] 1.0608910 0.9714497 0.9903078 0.9074826  ## both give the matrix Sigma for the \"I\" form identical(     vs$Phi0inv %*% diag(fit1@sigma2) %*% t(vs$Phi0inv)     ,     tmp$Uform$U0inv %*% diag(tmp$Uform$Sigma)  %*% t(tmp$Uform$U0inv) ) # TRUE #> [1] TRUE  ## no, this is a different matrix var1_mat <- cbind(vs$Phi0, # identity matrix                   - vs$Phi) # drop trailing zero columns? var1_mat <- mcompanion::mCompanion(var1_mat) var1_Sigma <- vs$Phi0inv %*% diag(fit1@sigma2) %*% t(vs$Phi0inv) abs(eigen(diag(nrow(var1_mat)) - var1_mat)$values) #> [1] 1.002444e+00 1.002444e+00 1.000000e+00 9.999852e-01 6.624797e-03 #> [6] 6.624797e-03 1.480313e-05 0.000000e+00"},{"path":"https://geobosh.github.io/pcts/reference/fit_trigPAR_optim.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a subset trigonometric PAR model — fit_trigPAR_optim","title":"Fit a subset trigonometric PAR model — fit_trigPAR_optim","text":"Fit subset PAR model trigonometric parameterisation.","code":""},{"path":"https://geobosh.github.io/pcts/reference/fit_trigPAR_optim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a subset trigonometric PAR model — fit_trigPAR_optim","text":"","code":"fit_trigPAR_optim(x, order, nseasons, seasonof1st = 1, maxiter = 200,                    harmonics = NULL, sintercept = FALSE, tol = 1e-07,                    type = c(\"vecbyrow\", \"bylag\"), verbose = TRUE)"},{"path":"https://geobosh.github.io/pcts/reference/fit_trigPAR_optim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a subset trigonometric PAR model — fit_trigPAR_optim","text":"x time series. order order, integer number. nseasons number seasons, integer number. seasonof1st season first observation. maxiter max number iterations. harmonics harmonics include model, vector non-negative     integers. sintercept TRUE include seasonal intercept. tol stop iterations. type type parameterisation, currently one \"vecbyrow\"     \"bylag\".  verbose TRUE print details estimation.","code":""},{"path":"https://geobosh.github.io/pcts/reference/fit_trigPAR_optim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit a subset trigonometric PAR model — fit_trigPAR_optim","text":"Fits subset PAR model using trigonometric parameterisation,   .e. Fourier series written terms sines cosines. argument type bylag, parameters lag   parameterised independently lags. sintercept   TRUE, trigonometric representation. argument type vecbyrow (“Vec operation   row”), PAR  parameters stacked vector parameters   first season, followed parameters second,   . trigonometric parameterisation vector used.   fundamental frequency 1/(nseasons * order).   sintercept TRUE type = vecbyrow,   intercept eaach season put PAR parameters   fundamental frequency becomes 1/(nseasons * (order + 1).    Putting together intercepts PAR parameters may   useful parsimonious trigonometric parameterisation,   separate set coefficients intercepts set   attribute\"merge\" sintercept FALSE.","code":""},{"path":"https://geobosh.github.io/pcts/reference/fit_trigPAR_optim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a subset trigonometric PAR model — fit_trigPAR_optim","text":"object class SubsetPM","code":""},{"path":"https://geobosh.github.io/pcts/reference/fit_trigPAR_optim.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit a subset trigonometric PAR model — fit_trigPAR_optim","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/pcts/reference/fit_trigPAR_optim.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Fit a subset trigonometric PAR model — fit_trigPAR_optim","text":"function may change.","code":""},{"path":"https://geobosh.github.io/pcts/reference/fit_trigPAR_optim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a subset trigonometric PAR model — fit_trigPAR_optim","text":"","code":"## see examples for class \"SubsetPM\""},{"path":"https://geobosh.github.io/pcts/reference/four_stocks_since2016_01_01.html","id":null,"dir":"Reference","previous_headings":"","what":"Data for four stocks since 2016-01-01 — four_stocks_since2016_01_01","title":"Data for four stocks since 2016-01-01 — four_stocks_since2016_01_01","text":"Data four stocks since 2016-01-01.","code":""},{"path":"https://geobosh.github.io/pcts/reference/four_stocks_since2016_01_01.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data for four stocks since 2016-01-01 — four_stocks_since2016_01_01","text":"","code":"data(\"four_stocks_since2016_01_01\")"},{"path":"https://geobosh.github.io/pcts/reference/four_stocks_since2016_01_01.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data for four stocks since 2016-01-01 — four_stocks_since2016_01_01","text":"list components \"DELL\",\"MSFT\", \"INTC\", \"IBM\".   component time series class \"xts\" \"zoo\".","code":""},{"path":"https://geobosh.github.io/pcts/reference/four_stocks_since2016_01_01.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data for four stocks since 2016-01-01 — four_stocks_since2016_01_01","text":"Note: dataset temporary use testing, although   may appear examples. Eventually  may renamed /  replaced data. Stock market data Dell, Microsoft, Intel IBM, 2016-01-01   2020-04-17. Dell data start 2016-08-17. data   downloaded Yahoo Finance 2020-04-18.","code":""},{"path":"https://geobosh.github.io/pcts/reference/four_stocks_since2016_01_01.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data for four stocks since 2016-01-01 — four_stocks_since2016_01_01","text":"https://finance.yahoo.com/","code":""},{"path":"https://geobosh.github.io/pcts/reference/four_stocks_since2016_01_01.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data for four stocks since 2016-01-01 — four_stocks_since2016_01_01","text":"","code":"data(four_stocks_since2016_01_01) DELL <- four_stocks_since2016_01_01$DELL head(DELL) #>            DELL.Open DELL.High DELL.Low DELL.Close DELL.Volume DELL.Adjusted #> 2016-08-17  24.08638  24.36323 23.80953   23.80953      137600      23.80953 #> 2016-08-18  24.36323  24.36323 23.53267   23.67110      895700      23.67110 #> 2016-08-19  23.64341  24.08638 23.61573   24.08638     2400300      24.08638 #> 2016-08-22  23.80953  25.24917 23.58804   24.16944     1138300      24.16944 #> 2016-08-23  24.22481  25.41528 24.08638   24.91694      751600      24.91694 #> 2016-08-24  27.68549  27.68549 24.97231   25.24917     1280200      25.24917 tail(DELL) #>            DELL.Open DELL.High DELL.Low DELL.Close DELL.Volume DELL.Adjusted #> 2020-04-09     41.67     42.75    41.14      41.56     4231200         41.56 #> 2020-04-13     40.66     41.32    39.92      40.46     1740500         40.46 #> 2020-04-14     41.19     42.35    40.80      41.34     2536300         41.34 #> 2020-04-15     40.03     40.86    39.60      40.45     2087900         40.45 #> 2020-04-16     40.74     41.19    39.87      41.10     1540600         41.10 #> 2020-04-17     42.15     42.27    41.00      41.51     3242500         41.51  dell <- pcts(DELL)  head(as_datetime(dell)) #> [1] \"2016-08-17 UTC\" \"2016-08-18 UTC\" \"2016-08-19 UTC\" \"2016-08-22 UTC\" #> [5] \"2016-08-23 UTC\" \"2016-08-24 UTC\" head(Pctime(dell)) #> [1] \"W2434 Wed\" \"W2434 Thu\" \"W2434 Fri\" \"W2435 Mon\" \"W2435 Tue\" \"W2435 Wed\"  ## Weekends are totally absent from the data, ## so a Monday-Friday sub-cycle is created: nSeasons(dell) #> [1] 5 dell@cycle #> Object from class 'PartialCycle' #>     partial cycle of 'DayWeekCycle', seasons: 1, 2, 3, 4, 5 #> Cycle start: Monday    ## there are some NA's in the data, due to Bank holidays Pctime(c(2624, 5), pcCycle(dell))               # \"W2624 Fri\" #> [1] \"W2624 Fri\" as_datetime(Pctime(c(2624, 5), pcCycle(dell)))  # \"2020-04-10 UTC\" #> [1] \"2020-04-10 UTC\"  ## dell[\"2020-04-10 UTC\"]  head(cycle(dell)) #> An object of class \"PeriodicTS\" #> Slot \"cycle\": Start:  2434   Wednesday  #> Cycle:  PartialCycle  #> Number of seasons: 5  #>  #>       Mon Tue Wed Thu Fri #> W2434          3   4   5  #> W2435  1   2   3           tail(Pctime(dell)) #> [1] \"W2624 Fri\" \"W2625 Mon\" \"W2625 Tue\" \"W2625 Wed\" \"W2625 Thu\" \"W2625 Fri\" tail(as.Date(Pctime(dell))) #> [1] \"2020-04-10\" \"2020-04-13\" \"2020-04-14\" \"2020-04-15\" \"2020-04-16\" #> [6] \"2020-04-17\""},{"path":"https://geobosh.github.io/pcts/reference/head-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for function head() in package pcts — head-methods","title":"Methods for function head() in package pcts — head-methods","text":"Methods function head() package pcts.","code":""},{"path":"https://geobosh.github.io/pcts/reference/head-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Methods for function head() in package pcts — head-methods","text":"signature(x = \"PeriodicTimeSeries\")","code":""},{"path":"https://geobosh.github.io/pcts/reference/mC.ss.html","id":null,"dir":"Reference","previous_headings":"","what":"Create environment for mc-fitting — mC.ss","title":"Create environment for mc-fitting — mC.ss","text":"Creates environment mc-fitting. functions transitory,   hence strange names.","code":""},{"path":"https://geobosh.github.io/pcts/reference/mC.ss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create environment for mc-fitting — mC.ss","text":"","code":"mC.ss(spec, ...)  xx.ss(period, type.eigval, n.root, eigabs, eigsign, co_r, co_arg,        init = NULL, len.block = NULL, mo.col, generators = NULL)"},{"path":"https://geobosh.github.io/pcts/reference/mC.ss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create environment for mc-fitting — mC.ss","text":"spec model, object class mcSpec. ... arguments passed xx.ss. period number seasons. type.eigval types eigenvalues, character vector       elements \"r\" \"cp\", see Details. n.root number roots. Currently dimension matrix       set . eigabs absolute values/moduli eigenvalues, numeric vector. eigsign signs/moduli eigenvalues. co_r similar eigabs co parameters. co_arg similar eigsign co parameters. init initial values, see Details. len.block lengths Jordan blocks. mo.col last non-zero column top matrix. generators ~~ TODO: describe argument. ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/mC.ss.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create environment for mc-fitting — mC.ss","text":"mC.ss takes specification model object   class mcSpec calls xx.ss. Basically, value returned functions extended   model specification together environment can used   fitting model, exploring results trying various things.   may used getting better understanding model   optimisation routines. result functions list, containing several functions   environment. environment (element env)   important element since allows access everything model   environment. function elements list simply   convenience. Several functions env available fitting   model. Currently minim, minimBB   minimBBlu. first argument functions time   series model fitted. default, conditional   likelihood optimised. base optimisation conditional   sum squares, set argument CONDLIK FALSE.  remaining   arguments call functions passed   corresponding optimisation routine (whose help page   consulted details). minim uses core R function optim.   minimBB minimBBlu use BBoptim package   BB. result list, returned corresponding   optimisation function optimal parameters  element   par. elements vector named help somewhat   interpretation complete information fitted model can   obtained environment. Firstly, end optimisation, optimal parameters   information stored env. call (maybe   modified instructions optimisation) repeated,   parameters used initial values new optimisation   run. may useful, example, previous run   converge. Secondly, properties fitted model useful   representations can obtained using functions environment   convinience functions list returned xx.ss. optparam2mcparam converts vector parameters   familiar filter representation, -th row contains   coefficients -th season. function takes one argument   vector parameters, e.g. one returned fitting   functions. updates number variables env, computes   filter representation model stores   wrkmodel. returns NULL.   function may used exploratory purposes set new   values parameters, e.g. used starting values   new optimisation run. mcparam2optparam opposite. converts current   model env vector parameter. function   arguments. mclik computes value conditional likelihood   given parameters. first argument time series, second   vector parameters third vector innovations.   first argument compulsory. param supplied,   current parameters env used. Otherwise, updated   new parameters used. innovations default   zero vector.   mcss similar computes conditional sum squares. Argument init can used provide initial   values. missing NULL, random initial values generated   free parameters.   init may also numeric vector suitable call   optparam2mcparam(init), see . vector typically   come previous optimisation run. init may also list elements \"eigabs\",   \"eigsign\", \"co_r\", \"co_abs\". components   meaning corresponding arguments xx.ss. TODO: needed !","code":""},{"path":"https://geobosh.github.io/pcts/reference/mC.ss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create environment for mc-fitting — mC.ss","text":"list following components: fmcss function compute sum squares model. fparamvec function convert mc-parameters optimisation       parameters. fmcparam function convert optimisation parameters       mc-parameters. env object class environment","code":""},{"path":"https://geobosh.github.io/pcts/reference/mC.ss.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create environment for mc-fitting — mC.ss","text":"Boshnakov GN, Iqelan BM (2009). “Generation time series models given spectral properties.” J. Time Series Anal., 30(3), 349--368. ISSN 0143-9782, doi: 10.1111/j.1467-9892.2009.00617.x .","code":""},{"path":"https://geobosh.github.io/pcts/reference/mC.ss.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create environment for mc-fitting — mC.ss","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/mC.ss.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create environment for mc-fitting — mC.ss","text":"","code":"# test0 roots spec.coz2 <- mcompanion::mcSpec(dim = 5, mo = 4, root1 = c(1,1), order = rep(2,4)) spec.coz2 #> An object of class \"mcSpec\" #> Slot \"dim\": #> [1] 5 #>  #> Slot \"mo\": #> [1] 4 #>  #> Slot \"ev.type\": #> [1] \"r\" \"r\" \"r\" \"r\" \"r\" #>  #> Slot \"co.type\": #> character(0) #>  #> Slot \"order\": #> [1] 2 2 2 2 #>  #> Slot \"n.root\": #> [1] 2 #>  #> Slot \"ev.abs\": #> [1] 1 1 0 0 0 #>  #> Slot \"ev.arg\": #> [1] 0 0 0 0 0 #>  #> Slot \"block.length\": #> [1] 1 1 1 1 1 #>  #> Slot \"co.abs\": #>      [,1] [,2] [,3] [,4] [,5] #> [1,]   NA   NA    0    0    0 #> [2,]   NA   NA    1    0    0 #> [3,]   NA   NA    0    1    0 #> [4,]   NA   NA    0    0    1 #>  #> Slot \"co.arg\": #>      [,1] [,2] [,3] [,4] [,5] #> [1,]   NA   NA    0    0    0 #> [2,]   NA   NA    0    0    0 #> [3,]   NA   NA    0    0    0 #> [4,]   NA   NA    0    0    0 #>  #> Slot \"mo.col\": #> [1] 2 #>  #> Slot \"F0bot\": #> NULL #>  xxcoz2a <- mC.ss(spec.coz2)  ## test0 roots spec.coz4 <- mcompanion::mcSpec(dim = 5, mo = 4, root1 = c(1,1), order = rep(3,4)) xxcoz4a <- mC.ss(spec.coz4)"},{"path":"https://geobosh.github.io/pcts/reference/maxLag-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for function maxLag() in package 'pcts' — maxLag-methods","title":"Methods for function maxLag() in package 'pcts' — maxLag-methods","text":"Methods function maxLag() package 'pcts'.","code":""},{"path":"https://geobosh.github.io/pcts/reference/maxLag-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Methods for function maxLag() in package 'pcts' — maxLag-methods","text":"signature(object = \"PeriodicArmaFilter\")","code":""},{"path":"https://geobosh.github.io/pcts/reference/maxLag-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Methods for function maxLag() in package 'pcts' — maxLag-methods","text":"","code":"## non-periodic autocovariances maxLag(autocovariances(AirPassengers)) #> [1] 21  ## periodic pcts_exdata() # creates ap, ap7to9, pcfr, pcfr2to4, #> [1] \"ap\"       \"ap7to9\"   \"pcfr\"     \"pcfr2to4\"  maxLag(autocovariances(ap, maxlag = 6)) #> [1] 6  ## pcarma filter m <- rbind(c(0.81, 0), c(0.4972376, 0.4972376)) ar_filt3 <- new(\"PeriodicBJFilter\",  coef =  m, order = c(1,2)) arma_filt3 <- new(\"PeriodicArmaFilter\", ar = ar_filt3) maxLag(arma_filt3) #> [1] 2"},{"path":"https://geobosh.github.io/pcts/reference/mcOptimCore-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class mcOptimCore — mcOptimCore-class","title":"Class mcOptimCore — mcOptimCore-class","text":"Class mcOptimCore.","code":""},{"path":"https://geobosh.github.io/pcts/reference/mcOptimCore-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class mcOptimCore — mcOptimCore-class","text":"reference classes extend inherit methods \"envRefClass\".","code":""},{"path":"https://geobosh.github.io/pcts/reference/mcOptimCore-class.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Class mcOptimCore — mcOptimCore-class","text":"flag.exploring: Object class logical ~~ private.counter.fn: Object class integer ~~ period: Object class integer ~~ len.block: Object class integer ~~ n_col: Object class integer ~~ r_col: Object class integer ~~ cp_col: Object class integer ~~ ind.r.eigval: Object class integer ~~ r_ind: Object class integer ~~ ind.cp.eigval: Object class integer ~~ cp_ind: Object class integer ~~ filter.order: Object class integer ~~ ev_abs: Object class matrix ~~ ev_sign: Object class matrix ~~ co_r: Object class matrix ~~ co_arg: Object class matrix ~~ flag.generators: Object class logical ~~ par.ind: Object class ~~ auto.ind: Object class ~~ inf.ind: Object class ~~ universe: Object class ~~ col.minusinf.ind: Object class ~~ col.inf.ind: Object class ~~ ind1: Object class integer ~~ ind2: Object class integer ~~ ind3: Object class integer ~~ ind4: Object class integer ~~ n1: Object class integer ~~ n2: Object class integer ~~ n3: Object class integer ~~ n4: Object class integer ~~ seqn1: Object class integer ~~ seqn2: Object class integer ~~ seqn3: Object class integer ~~ seqn4: Object class integer ~~ co: Object class matrix ~~ initmodel: Object class ~~ wrkmodel: Object class ~~ model: Object class list ~~ tempnam: Object class ~~ param_names: Object class character ~~ lo_bound: Object class ~~ up_bound: Object class ~~ mcss.cnt: Object class integer ~~ wrkev: Object class ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/mcOptimCore-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class mcOptimCore — mcOptimCore-class","text":"mclik(param, x, eps): ~~ minimBBlu(x, ..., CONDLIK): ~~ mcss(param, x, eps): ~~ matepshat(param, x, eps): ~~ process.mcss.cnt(mclik, mepshat): ~~ sigma2hat(param, x, eps): ~~ initialize(...): ~~ mcparam2optparam(): ~~ optparam2mcparam(param): ~~ minimBB(x, ..., CONDLIK): ~~ optimize(optimfn, mcmethod, x, ..., MCBOUNDS): ~~ mcsigma2(param, x, eps): ~~ minim(x, ..., CONDLIK): ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/mcOptimCore-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class mcOptimCore — mcOptimCore-class","text":"","code":"showClass(\"mcOptimCore\") #> Class \"mcOptimCore\" [package \"pcts\"] #>  #> Slots: #>                    #> Name:       .xData #> Class: environment #>  #> Extends:  #> Class \"envRefClass\", directly #> Class \".environment\", by class \"envRefClass\", distance 2 #> Class \"refClass\", by class \"envRefClass\", distance 2 #> Class \"environment\", by class \"envRefClass\", distance 3, with explicit coerce #> Class \"refObject\", by class \"envRefClass\", distance 3"},{"path":"https://geobosh.github.io/pcts/reference/meanvarcheck.html","id":null,"dir":"Reference","previous_headings":"","what":"Asymptotic covariance matrix of periodic mean — meanvarcheck","title":"Asymptotic covariance matrix of periodic mean — meanvarcheck","text":"Asymptotic covariance matrix periodic mean.","code":""},{"path":"https://geobosh.github.io/pcts/reference/meanvarcheck.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Asymptotic covariance matrix of periodic mean — meanvarcheck","text":"","code":"meanvarcheck(parmodel, n)  meancovmat(parmodel, n, cor = FALSE, result = \"var\")"},{"path":"https://geobosh.github.io/pcts/reference/meanvarcheck.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Asymptotic covariance matrix of periodic mean — meanvarcheck","text":"parmodel periodic model. n number observations (TODO: need clarification ). cor TRUE, return correlations result \"var\", return diagonal covariance matrix,     otherwise return matrix.","code":""},{"path":"https://geobosh.github.io/pcts/reference/meanvarcheck.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Asymptotic covariance matrix of periodic mean — meanvarcheck","text":"Computes asymptotic covariance correlation matrix periodic   means.","code":""},{"path":"https://geobosh.github.io/pcts/reference/meanvarcheck.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Asymptotic covariance matrix of periodic mean — meanvarcheck","text":"result = \"var\" matrix,   otherwise vector","code":""},{"path":"https://geobosh.github.io/pcts/reference/meanvarcheck.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Asymptotic covariance matrix of periodic mean — meanvarcheck","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/meanvarcheck.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Asymptotic covariance matrix of periodic mean — meanvarcheck","text":"","code":"x <- arima.sim(list(ar=0.9), n=1000) proba1 <- fitPM(c(3,2,2,2), x)  meancovmat(proba1, 100) #> [1] 0.988953 1.094719 1.121733 1.171675 meancovmat(proba1, 100, cor = TRUE) #>           [,1]      [,2]      [,3]      [,4] #> [1,] 1.0000000 0.9827059 0.9813786 0.9848972 #> [2,] 0.9827059 1.0000000 0.9862408 0.9808960 #> [3,] 0.9813786 0.9862408 1.0000000 0.9880167 #> [4,] 0.9848972 0.9808960 0.9880167 1.0000000 meancovmat(proba1, 100, result = \"\") #>          [,1]     [,2]     [,3]     [,4] #> [1,] 0.988953 1.022498 1.033640 1.060186 #> [2,] 1.022498 1.094719 1.092897 1.110907 #> [3,] 1.033640 1.092897 1.121733 1.132694 #> [4,] 1.060186 1.110907 1.132694 1.171675 meancovmat(proba1, 100, cor = TRUE, result = \"\") #>           [,1]      [,2]      [,3]      [,4] #> [1,] 1.0000000 0.9827059 0.9813786 0.9848972 #> [2,] 0.9827059 1.0000000 0.9862408 0.9808960 #> [3,] 0.9813786 0.9862408 1.0000000 0.9880167 #> [4,] 0.9848972 0.9808960 0.9880167 1.0000000  meanvarcheck(proba1, 100) #> [1] 0.8907291 0.9859517 1.0093846 1.0544765"},{"path":"https://geobosh.github.io/pcts/reference/modelCycle.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the cycle of a periodic object — modelCycle","title":"Get the cycle of a periodic object — modelCycle","text":"Get cycle periodic object, generic function.","code":""},{"path":"https://geobosh.github.io/pcts/reference/modelCycle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the cycle of a periodic object — modelCycle","text":"","code":"modelCycle(object)  modelCycle(object, ... ) <- value"},{"path":"https://geobosh.github.io/pcts/reference/modelCycle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the cycle of a periodic object — modelCycle","text":"object object. value new value cycle, object inheriting     \"BasicCycle\".  ... used.","code":""},{"path":"https://geobosh.github.io/pcts/reference/modelCycle.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the cycle of a periodic object — modelCycle","text":"modelCycle essentially internal, programming. user   level function get cycle object pcCycle. modelCycle returns Cycle object (sense package   pcts), associated object.  modelCycle   generic function makes possible associate cycle   objects class, without inheriting cycle classes. definition, NULL represents model cycle objects   classes (inherited) method modelCycle. default method modelCycle returns NULL.   default method replacement version throws error.","code":""},{"path":"https://geobosh.github.io/pcts/reference/modelCycle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the cycle of a periodic object — modelCycle","text":"modelCycle, object inheriting class \"BasicCycle\" NULL; \"modelCycle<-\" used side effect changing   cycle object.","code":""},{"path":"https://geobosh.github.io/pcts/reference/modelCycle.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Get the cycle of a periodic object — modelCycle","text":"signature(object = \"\")  signature(object = \"ModelCycleSpec\")","code":""},{"path":"https://geobosh.github.io/pcts/reference/nCycles.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic information about periodic ts objects — nCycles","title":"Basic information about periodic ts objects — nCycles","text":"Basic information periodic periodic time series objects.","code":""},{"path":"https://geobosh.github.io/pcts/reference/nCycles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Basic information about periodic ts objects — nCycles","text":"","code":"nCycles(x, ...)  nTicks(x)  nVariables(x, ...)"},{"path":"https://geobosh.github.io/pcts/reference/nCycles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Basic information about periodic ts objects — nCycles","text":"x object periodic time series class. ... arguments methods.","code":""},{"path":"https://geobosh.github.io/pcts/reference/nCycles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Basic information about periodic ts objects — nCycles","text":"nTicks gives number time points, .e. number rows   matrix representation. nVariables gives number variables time series. nSeasons gives number seasons time series   periodic objects. nCycles gives number cycles available data,   e.g. number years monthly data. always gives integer   number. Currently, result integer error   raised. TODO: case round give number full   cycles available seems somewhat dangerous done quietly.   good alternative provide argument control . functions get set names units   season seasons, see allSeasons.","code":""},{"path":"https://geobosh.github.io/pcts/reference/nCycles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Basic information about periodic ts objects — nCycles","text":"integer number","code":""},{"path":"https://geobosh.github.io/pcts/reference/nCycles.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Basic information about periodic ts objects — nCycles","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/nCycles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Basic information about periodic ts objects — nCycles","text":"","code":"ap <- pcts(AirPassengers) nVariables(ap) #> [1] 1 nTicks(ap) #> [1] 144 nCycles(ap) #> [1] 12 nSeasons(ap) #> [1] 12  monthplot(ap)  boxplot(ap)"},{"path":"https://geobosh.github.io/pcts/reference/nSeasons-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of seasons for a periodic object — nSeasons-methods","title":"Number of seasons for a periodic object — nSeasons-methods","text":"Number seasons periodic object.","code":""},{"path":"https://geobosh.github.io/pcts/reference/nSeasons-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of seasons for a periodic object — nSeasons-methods","text":"object object notion number seasons makes sense.","code":""},{"path":"https://geobosh.github.io/pcts/reference/nSeasons-methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Number of seasons for a periodic object — nSeasons-methods","text":"nSeasons generic function. page gives methods    defined package \"pcts\".","code":""},{"path":"https://geobosh.github.io/pcts/reference/nSeasons-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of seasons for a periodic object — nSeasons-methods","text":"integer number","code":""},{"path":"https://geobosh.github.io/pcts/reference/nSeasons-methods.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Number of seasons for a periodic object — nSeasons-methods","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/pcts/reference/nSeasons-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Number of seasons for a periodic object — nSeasons-methods","text":"signature(object = \"DayWeekCycle\")  signature(object = \"FiveDayWeekCycle\")  signature(object = \"MonthYearCycle\")  signature(object = \"PeriodicIntegratedArmaSpec\")  signature(object = \"QuarterYearCycle\")  signature(object = \"PeriodicMonicFilterSpec\")  signature(object = \"PeriodicInterceptSpec\")  signature(object = \"Cyclic\")  signature(object = \"BareCycle\")  signature(object = \"OpenCloseCycle\")  signature(object = \"Every30MinutesCycle\")  signature(object = \"PartialCycle\")  signature(object = \"VirtualPeriodicModel\")","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/nSeasons-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of seasons for a periodic object — nSeasons-methods","text":"","code":"ap <- pcts(AirPassengers) nSeasons(ap) # 12 #> [1] 12  pcfr <- pcts(dataFranses1996) nSeasons(pcfr) # 4 #> [1] 4"},{"path":"https://geobosh.github.io/pcts/reference/nTicks-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of observations in a time series — nTicks-methods","title":"Number of observations in a time series — nTicks-methods","text":"Number observations time series.","code":""},{"path":"https://geobosh.github.io/pcts/reference/nTicks-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Number of observations in a time series — nTicks-methods","text":"signature(x = \"matrix\")  signature(x = \"numeric\")  signature(x = \"PeriodicTimeSeries\")  signature(x = \"Cyclic\")","code":""},{"path":"https://geobosh.github.io/pcts/reference/num2pcpar.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit PAR model using sample autocorrelations — num2pcpar","title":"Fit PAR model using sample autocorrelations — num2pcpar","text":"Fit PAR model using sample autocorrelations.","code":""},{"path":"https://geobosh.github.io/pcts/reference/num2pcpar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit PAR model using sample autocorrelations — num2pcpar","text":"","code":"num2pcpar(x, order, result = NULL, ...)"},{"path":"https://geobosh.github.io/pcts/reference/num2pcpar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit PAR model using sample autocorrelations — num2pcpar","text":"x time series, numeric vector. order PAR order, single number vector one entry     season.  result return, default return full model,     see Details. ... passed calc_peracf.","code":""},{"path":"https://geobosh.github.io/pcts/reference/num2pcpar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit PAR model using sample autocorrelations — num2pcpar","text":"Computes periodic autocorrelations fits PAR model using   Periodic Levinson-Durbin algorithm. order vector non-negative integers, specifying   autoregressive orders season. order single   number, seasons order. mean controls centering computation   autocorrelations.  mean numeric, subtract   supplied mean computing autocovariances. mean   TRUE, default, compute subtract sample periodic mean   computing autocovariances. mean FALSE,   centre series, .e. assume mean zero. result NULL, default, returns full model.   result = \"coef\", returns PAR coefficients (currently   value result NULL effect).","code":""},{"path":"https://geobosh.github.io/pcts/reference/num2pcpar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit PAR model using sample autocorrelations — num2pcpar","text":"coefficients fitted model list components: mean mean, set described Details. coef forward prediction coefficients. scale standard deviations innovations.","code":""},{"path":"https://geobosh.github.io/pcts/reference/num2pcpar.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit PAR model using sample autocorrelations — num2pcpar","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/num2pcpar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit PAR model using sample autocorrelations — num2pcpar","text":"","code":"if (FALSE) { simts1 <- matrix(rnorm(100), nrow = 4)  num2pcpar(simts1, order = c(3,2,2,2), period = 4 ) num2pcpar(simts1, order = c(3,2,1,2), period = 4 ) pdSafeParOrder(c(3,2,1,2)) pdSafeParOrder(c(3,2,2,1)) num2pcpar(simts1, order = c(3,2,2,1), period = 4 ) num2pcpar(simts1, order = pdSafeParOrder(c(3,2,2,1)), period = 4 )  num2pcpar(simts1, order = c(3,2,1,2), period = 4 ) num2pcpar(simts1, order = c(3,2,1,2), period = 4, mean = rep(0,4) ) num2pcpar(simts1, order = c(3,2,1,2), period = 4, mean = FALSE ) num2pcpar(simts1, order = c(3,2,1,2), period = 4, mean = FALSE )$coef@m -        num2pcpar(simts1, order = c(3,2,1,2), period = 4 )$coef@m }"},{"path":"https://geobosh.github.io/pcts/reference/parcovmatlist.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute asymptotic covariance matrix for PAR model — parcovmatlist","title":"Compute asymptotic covariance matrix for PAR model — parcovmatlist","text":"Compute asymptotic covariance matrix PAR model","code":""},{"path":"https://geobosh.github.io/pcts/reference/parcovmatlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute asymptotic covariance matrix for PAR model — parcovmatlist","text":"","code":"parcovmatlist(parmodel, n, cor = FALSE, result = \"list\")"},{"path":"https://geobosh.github.io/pcts/reference/parcovmatlist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute asymptotic covariance matrix for PAR model — parcovmatlist","text":"parmodel PAR model, object class parModel n length series vector one element     season. cor TRUE return correlation matrix. result \"list\", default, return list, \"Matrix\"     return Matrix object, otherwise return ordinary matrix, see     Details.","code":""},{"path":"https://geobosh.github.io/pcts/reference/parcovmatlist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute asymptotic covariance matrix for PAR model — parcovmatlist","text":"Uses eq. (3.3) reference. result = \"list\", parcovmatlist returns list whose   s-th element covariance matrix PAR parameters   s-th season. Otherwise, result = \"Matrix\" returns   block-diagonal matrix created .bdiag() package   \"Matrix\". result = \"matrix\" returns ordinary matrix   (current implementation returned value   \"list\" \"Matriix\").","code":""},{"path":"https://geobosh.github.io/pcts/reference/parcovmatlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute asymptotic covariance matrix for PAR model — parcovmatlist","text":"list, matrix block-diagonal matrix, described Details","code":""},{"path":"https://geobosh.github.io/pcts/reference/parcovmatlist.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute asymptotic covariance matrix for PAR model — parcovmatlist","text":"McLeod (1994). ``Diagnostic checking periodic autoregression models application.'' Journal time series analysis, 15(2), pp. 221-233.","code":""},{"path":"https://geobosh.github.io/pcts/reference/parcovmatlist.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute asymptotic covariance matrix for PAR model — parcovmatlist","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/parcovmatlist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute asymptotic covariance matrix for PAR model — parcovmatlist","text":"","code":"x <- arima.sim(list(ar=0.9), n=1000) proba1 <- fitPM(c(3,2,2,2), x)  parcovmatlist(proba1, 100) #> [[1]] #>               [,1]        [,2]          [,3] #> [1,]  0.0399320003 -0.03408642 -0.0004527097 #> [2,] -0.0340864206  0.06997021 -0.0363389519 #> [3,] -0.0004527097 -0.03633895  0.0432953704 #>  #> [[2]] #>             [,1]        [,2] #> [1,]  0.03984116 -0.03382292 #> [2,] -0.03382292  0.03674098 #>  #> [[3]] #>             [,1]        [,2] #> [1,]  0.03997347 -0.03604842 #> [2,] -0.03604842  0.04140085 #>  #> [[4]] #>             [,1]        [,2] #> [1,]  0.03987707 -0.03582995 #> [2,] -0.03582995  0.04223474 #>  parcovmatlist(proba1, 100, cor = TRUE) #> [[1]] #>             [,1]       [,2]        [,3] #> [1,]  1.00000000 -0.6448583 -0.01088776 #> [2,] -0.64485828  1.0000000 -0.66022974 #> [3,] -0.01088776 -0.6602297  1.00000000 #>  #> [[2]] #>            [,1]       [,2] #> [1,]  1.0000000 -0.8840355 #> [2,] -0.8840355  1.0000000 #>  #> [[3]] #>            [,1]       [,2] #> [1,]  1.0000000 -0.8861263 #> [2,] -0.8861263  1.0000000 #>  #> [[4]] #>            [,1]       [,2] #> [1,]  1.0000000 -0.8730714 #> [2,] -0.8730714  1.0000000 #>  sqrt(diag(parcovmatlist(proba1, 100, cor = TRUE)[[1]])) #> [1] 1 1 1  meanvarcheck(proba1, 100) #> [1] 0.6783456 0.6309466 0.6427926 0.6871145"},{"path":"https://geobosh.github.io/pcts/reference/partialAutocorrelations-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute periodic partial autocorrelations — partialAutocorrelations-methods","title":"Compute periodic partial autocorrelations — partialAutocorrelations-methods","text":"Methods computation periodic partial autocorrelations.","code":""},{"path":"https://geobosh.github.io/pcts/reference/partialAutocorrelations-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Compute periodic partial autocorrelations — partialAutocorrelations-methods","text":"signature(x = \"PeriodicAutocovariances\", maxlag = \"\", lag_0 = \"missing\")  signature(x = \"VirtualPeriodicAutocovariances\", maxlag = \"\", lag_0 = \"\")","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/partialAutocovariances-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute periodic partial autocovariances — partialAutocovariances-methods","title":"Compute periodic partial autocovariances — partialAutocovariances-methods","text":"Compute periodic partial autocovariances.","code":""},{"path":"https://geobosh.github.io/pcts/reference/partialAutocovariances-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Compute periodic partial autocovariances — partialAutocovariances-methods","text":"signature(x = \"VirtualPeriodicAutocovariances\")","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/partialCoefficients-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute periodic partial coefficients — partialCoefficients-methods","title":"Compute periodic partial coefficients — partialCoefficients-methods","text":"Methods computation periodic partial coefficients.","code":""},{"path":"https://geobosh.github.io/pcts/reference/partialCoefficients-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Compute periodic partial coefficients — partialCoefficients-methods","text":"signature(x = \"PeriodicArModel\")  signature(x = \"VirtualPeriodicAutocovariances\")","code":""},{"path":"https://geobosh.github.io/pcts/reference/partialVariances-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute periodic partial variances — partialVariances-methods","title":"Compute periodic partial variances — partialVariances-methods","text":"Compute periodic partial variances.","code":""},{"path":"https://geobosh.github.io/pcts/reference/partialVariances-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Compute periodic partial variances — partialVariances-methods","text":"signature(x = \"VirtualPeriodicAutocovariances\")","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/pc.acf2model.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a PC-ARMA model to a periodic autocovariance function — pcarma_acvf2model","title":"Fit a PC-ARMA model to a periodic autocovariance function — pcarma_acvf2model","text":"Fit PC-ARMA model periodic autocovariance function.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.acf2model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a PC-ARMA model to a periodic autocovariance function — pcarma_acvf2model","text":"","code":"pcarma_acvf2model(acf, model, maxlag)"},{"path":"https://geobosh.github.io/pcts/reference/pc.acf2model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a PC-ARMA model to a periodic autocovariance function — pcarma_acvf2model","text":"acf periodic autocovariance function, object class     pcAcvf. model pc- arma model, object class     pcARMApq. (todo: check!) maxlag used. (todo: check!)","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.acf2model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a PC-ARMA model to a periodic autocovariance function — pcarma_acvf2model","text":"~Describe value returned   LIST, use comp1 Description 'comp1' comp2 Description 'comp2' ...","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.acf2model.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit a PC-ARMA model to a periodic autocovariance function — pcarma_acvf2model","text":"Boshnakov GN (1996). “Recursive computation parameters periodic autoregressive moving-average processes.” J. Time Ser. Anal., 17(4), 333--349. ISSN 0143-9782, doi: 10.1111/j.1467-9892.1996.tb00281.x .","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.acf2model.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit a PC-ARMA model to a periodic autocovariance function — pcarma_acvf2model","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.acf2model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a PC-ARMA model to a periodic autocovariance function — pcarma_acvf2model","text":"","code":"data(ex1f) pc3 <- slMatrix(period=2,maxlag=5,f=ex1f,type=\"tt\") # pcarma_param_system(pc3, NULL, NULL, 2, 0, 2) parsys <- pcarma_param_system(pc3, NULL, NULL, c(2,2), 0, 2) param <- solve(parsys$A,parsys$b)  # res <- pcarma_acvf2model(pc3, list(p=c(1,2),q=0,period=2)) # res <- pcarma_acvf2model(pc3, list(p=c(1,2),q=0)) # res <- pcarma_acvf2model(pc3, list(p=c(1,2),period=2)) res <- pcarma_acvf2model(pc3, list(p=c(1,2)))  print(param) #> [1] 0.3439000 0.8100000 0.0000000 0.1049724 0.4972376 0.4972376 print(res) #> $p #> [1] 1 2 #>  #> $q #> [1] 0 0 #>  #> $si2 #> [1] 0.3439000 0.1049724 #>  #> $phi #>           [,1]      [,2] #> [1,] 0.8100000 0.0000000 #> [2,] 0.4972376 0.4972376 #>"},{"path":"https://geobosh.github.io/pcts/reference/pc.filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Applies a periodic ARMA filter to a time series — pc.filter","title":"Applies a periodic ARMA filter to a time series — pc.filter","text":"Filter time series periodic arma filter.   whiten FALSE (default) function applies   given ARMA filter eps (eps often periodic   white noise).  whiten TRUE function applies   “inverse filter” \\(x\\), effectively computing   residuals.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Applies a periodic ARMA filter to a time series — pc.filter","text":"","code":"pc.filter(model, x, eps, seasonof1st = 1, from = NA, whiten = FALSE,           nmean = NULL, nintercept = NULL)"},{"path":"https://geobosh.github.io/pcts/reference/pc.filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Applies a periodic ARMA filter to a time series — pc.filter","text":"x time series filtered, vector. eps residuals, vector NULL. model model parameters, list components \"phi\",     \"theta\", \"p\", \"q\", \"period\",     \"mean\" \"intercept\", see Details. seasonof1st season first observation (.e., x[1]). index start filtering. whiten TRUE use x input apply inverse filter     produce eps (\"whiten\" x), FALSE use eps     input generate x (\"colour\" eps). nmean vector means length series, see Details.  nintercept vector intercepts length series, see details.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.filter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Applies a periodic ARMA filter to a time series — pc.filter","text":"model specified argument model, list   following components: phi autoregression parameters, theta moving average parameters, p autoregression orders, single number       vector one element season, q moving average orders, single number       vector one element season, period number seasons cycle, mean means seasons, intercept intercepts seasons. relation x eps assumed   following. Let   $$y_t = x_t - mu_t$$   mean corrected series, \\(mu_t\\) mean, see .   equation relating   mean corrected series, \\(y_t=x_t - \\mu_t\\),   eps following:     $$ y_t     =   c_t       + \\sum_{=1}^{p_t} \\phi  _t()y          _{t-}       + \\sum_{=1}^{q_t} \\theta_t()\\varepsilon_{t-}       + \\varepsilon_t     $$   \\(c_t\\) intercept, nintercept. inverse   filter obtained writing equation expressing   \\(\\varepsilon_t\\) remaining quantities. whiten = TRUE, pc.filter uses formula   compute filtered values x t=,...,n,   .e. whitening time series eps white noise.    whiten = FALSE, eps computed, .e. inverse filter   applied x eps, .e. ``colouring'' x.   cases first values x /eps   used initial values. Essentially, mean subtracted series obtain   mean-corrected series, say y. either y filtered   obtain eps inverse filter applied obtain   y eps   finally mean added back y result returned. mean formed model$mean argument nmean.    model$mean supplied recycled periodically   length series x subtracted x.   argument nmean supplied, subtracted x.   model$mean nmean supplied sum   subtracted x. gives vector y, \\(y_t=x_t -   \\mu_t\\), filtered.  mean   zero, \\(y_t=x_t\\) formulas . Finally, mean added back, \\(x_t=y_t+\\mu_t\\), new   x returned. gives vector y used filtering.    mean zero, \\(y_t=x_t\\) formulae . pc.filter can used simulate pc-arma series   default value whiten=FALSE. case eps   input series y output.   $$ y_t     = c_t       + \\sum_{=1}^{p_t} \\phi  _t()y          _{t-}       + \\sum_{=1}^{q_t} \\theta_t()\\varepsilon_{t-}       + \\varepsilon_t     $$   model$mean nmean added y form   output vector x. Residuals corresponding series y can obtained   setting whiten=TRUE. case y input series.   elements output vector eps calculated   formula:   $$ \\varepsilon_t     = - c_t       - \\sum_{=1}^{q_t} \\theta_t()\\varepsilon_{t-}       - \\sum_{=1}^{p_t} \\phi  _t()y          _{t-}       + y_t     $$   need case restore x since eps   returned. cases necessary initial values assumed already   vectors. supplied chosen   smallest \\(t\\ge \\),   t-p[t]>0 t-q[t]>0, .e.  filter require   negative indices x eps. pc.filter calls lower level function pc.filter.xarma   computation.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Applies a periodic ARMA filter to a time series — pc.filter","text":"filtered series: modified x whiten=FALSE,   modified eps whiten=TRUE.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.filter.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Applies a periodic ARMA filter to a time series — pc.filter","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.filter.html","id":"level","dir":"Reference","previous_headings":"","what":"Level","title":"Applies a periodic ARMA filter to a time series — pc.filter","text":"1","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/pc.filter.xarma.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter time series with periodic arma filters — pc.filter.xarma","title":"Filter time series with periodic arma filters — pc.filter.xarma","text":"Filter time series periodic arma filters options   periodic non-periodic intercepts.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.filter.xarma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter time series with periodic arma filters — pc.filter.xarma","text":"","code":"pc.filter.xarma(x, eps, phi, theta, period, p, q, n, from,               seasonof1st = 1, intercept = NULL, nintercept = NULL)"},{"path":"https://geobosh.github.io/pcts/reference/pc.filter.xarma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter time series with periodic arma filters — pc.filter.xarma","text":"x time series filtered, vector. eps innovations, vector. phi autoregression parameters, matrix. theta moving average parameters, matrix. period period (number seasons year). p autoregression orders, recycled period     length(p)=1. q moving average orders, recycled period     length(q)=1. n positive  integer, time index last observation     filtered. positive  integer, time index first observation     filtered. seasonof1st positive  integer, season time index x[1],     see Details. intercept intercepts seasons, vector length period. nintercept intercepts, vector length x.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.filter.xarma.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter time series with periodic arma filters — pc.filter.xarma","text":"pc.filter.xarma somewhat lower level.   user level function pc.filter uses   pc.filter.xarma computations.   pc.filter.xarma filters time series x   following formula (t=,...,n):     $$ x_t     =   c_t       + \\sum_{=1}^{p_t} \\phi  _t()x          _{t-}       + \\sum_{=1}^{q_t} \\theta_t()\\varepsilon_{t-}       + \\varepsilon_t,     $$   \\(c_t\\) overall intercept time \\(t\\), see   .  Values x[t] t outside range   ,n, , left unchanged. Values t<  used initial values needed. Two intercepts provided convenience flexibility.    periodic intercept, intercept, vector length   period. replicated length n, taking care   ensure first element resulting vector, say \\(\\),   starts intercept[seasonof1st].  nintercept can   arbitrary vector length n. can used represent   trend contributions covariates.  nintercept   necessarilly periodic argument seasonof1st affect   use.  overall intercept obtained sum c = +   nintercept. Usually x numeric vector can also matrix   column represents data one ``year''.   Also, length x typically, necessarilly, equal   n. prudent ensure length(x) >= n   must done x matrix.   Argument phi ignored p==0,   argument theta ignored q==0. pc.filter.xarma meant called functions whose   task prepare arguments proper checks.  make   much sense repeat checks pc.filter.xarma.    particular, check made ensure n   correctly specified. low level function meant used basic vectors     matrices.  TODO: Implement C/C++.  current     implementation. accesses elements arguments     straightforward indexing, objects classes may used     well, provided x[t], eps[t], phi[t,],     theta[t,], well assignment x[t], defined     scalar indices.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.filter.xarma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter time series with periodic arma filters — pc.filter.xarma","text":"Returns x x[] x[n] filled   filtered values values outside interval ,...,n  left unchanged.   mode x left unchanged. particular, x may   matrix row representing data season.   convenient since periodic time series often easily processed   form.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.filter.xarma.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Filter time series with periodic arma filters — pc.filter.xarma","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.filter.xarma.html","id":"level","dir":"Reference","previous_headings":"","what":"Level","title":"Filter time series with periodic arma filters — pc.filter.xarma","text":"0 (base)","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/pc.hat.h.html","id":null,"dir":"Reference","previous_headings":"","what":"function to compute estimates of the h weights — pc.hat.h","title":"function to compute estimates of the h weights — pc.hat.h","text":"h coefficients scaled cross-covariances time   series innovations. function computes estimates h   using input observed series, series estimated innovations,   estimate variance innovations.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.hat.h.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"function to compute estimates of the h weights — pc.hat.h","text":"","code":"pc.hat.h(x, eps, maxlag, si2hat)"},{"path":"https://geobosh.github.io/pcts/reference/pc.hat.h.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"function to compute estimates of the h weights — pc.hat.h","text":"x observed time series x(t) eps series esimated innovations maxlag maximum lag si2hat estimate variance innovations","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.hat.h.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"function to compute estimates of the h weights — pc.hat.h","text":"missing, variance innovations estimated eps.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.hat.h.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"function to compute estimates of the h weights — pc.hat.h","text":"matrix coefficient lag maxlag one row season.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.hat.h.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"function to compute estimates of the h weights — pc.hat.h","text":"Boshnakov GN (1996). “Recursive computation parameters periodic autoregressive moving-average processes.” J. Time Ser. Anal., 17(4), 333--349. ISSN 0143-9782, doi: 10.1111/j.1467-9892.1996.tb00281.x .","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.hat.h.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"function to compute estimates of the h weights — pc.hat.h","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.modelunvec.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions for work with a simple list specification of pcarma models — pcarma_unvec","title":"Functions for work with a simple list specification of pcarma models — pcarma_unvec","text":"Handle simple list specification pcarma models.   Functions convert representation appropriate   handing optimisation functions.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.modelunvec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions for work with a simple list specification of pcarma models — pcarma_unvec","text":"","code":"pcarma_prepare(model, type) pcarma_unvec(model) pcarma_tovec(model)"},{"path":"https://geobosh.github.io/pcts/reference/pc.modelunvec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions for work with a simple list specification of pcarma models — pcarma_unvec","text":"model specification pcarma model, list, see Details. type used.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.modelunvec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Functions for work with a simple list specification of pcarma models — pcarma_unvec","text":"functions work specification pcarma model list   components period, p, q, param,   phi, theta si2, see also section `Values'.   functions necessarily need examine components. Argument model list components accepted   pcarma_prepare. Details guiding rule   sensible defaults absent components. pcarma_prepare gives standard representation model,   sense ensures model components period,   p q, p q vectors   length period. pcarma_prepare  examine   components model. (TODO:   innovation variance?) model$period NULL, pcarma_prepare sets   length longer model$p model$q.    model$p scalar extended rep(model$p,   period).  Missing NULL model$p equivalent   model$p = 0.  model$q processed analogously. net effect period, p q set   expected long period given least one   two length equal period. warning issued   period <= 1 (easy give scalar values   p q forget set period, case   period deduced one). number functions (including pcarma_tovec   pcarma_unvec) dealing list representation pcarma   models start calling pcarma_prepare avoid need   handling possible cases. pcarma_tovec returns list components p,   q param, param numeric vector   containing pcarma parameters innovations variances   thus suitable optimisation functions. Notice   component param vector. reason pcarma_tovec   returns list, caller may need work   calling generic optimisation function. exampe, may wish   dop variances vector. pcarma_unvec(model) performs inverse operation. takes   list like produced pcarma_tovec converts   detailed list containing components model.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.modelunvec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functions for work with a simple list specification of pcarma models — pcarma_unvec","text":"pcarma_unvec, list components: p autoregressive orders, numeric vector q moving average orders, numeric vector si2 innovation variances phi autoregressive parameters theta moving average parameters pcarma_tovec,  list components: p autoregressive order q moving average order param parameters model, numeric vector.     TODO: give order parameters vector! pcarma_prepare, list pcarma_unvec, see also   Details.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.modelunvec.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Functions for work with a simple list specification of pcarma models — pcarma_unvec","text":"specification functions created ad hoc get   computations going always consistent parts   package.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.modelunvec.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Functions for work with a simple list specification of pcarma models — pcarma_unvec","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.test.LjungBox.html","id":null,"dir":"Reference","previous_headings":"","what":"McLeod-Ljung-Box test for periodic white noise — pwn_McLeodLjungBox_test","title":"McLeod-Ljung-Box test for periodic white noise — pwn_McLeodLjungBox_test","text":"Compute McLeod-Ljung-Box test statistic examining      null hypothesis periodic white noise.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.test.LjungBox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"McLeod-Ljung-Box test for periodic white noise — pwn_McLeodLjungBox_test","text":"","code":"pwn_McLeodLjungBox_test(acf, nepoch, use = 1:maxlag,                  maxlag = ncol(as.matrix(acf)) - 1,                  period = nrow(as.matrix(acf)), fitdf = numeric(period))"},{"path":"https://geobosh.github.io/pcts/reference/pc.test.LjungBox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"McLeod-Ljung-Box test for periodic white noise — pwn_McLeodLjungBox_test","text":"acf sample periodic autocorrelation function time series. nepoch number cycles used computing acf. use number lags use, may vector. maxlag maximal lag. period number seasons cycle. fitdf degrees freedom corrections number     estimated parameters, see Details.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.test.LjungBox.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"McLeod-Ljung-Box test for periodic white noise — pwn_McLeodLjungBox_test","text":"McLeod-Ljung-Box test can used test null hypothesis   periodic white noise. acf contains sample autocorrelations residuals   fitted model, correction degrees freedom strongly   recommended. Argument fitdf vector specifying may degrees   freedom subtract season. case PAR models   fitdf can set PAR orders. value statistic set NA correction   degrees freedom results negative numbers.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.test.LjungBox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"McLeod-Ljung-Box test for periodic white noise — pwn_McLeodLjungBox_test","text":"list containing following components: statistic value  test statistic lag     specified use. df corresponding degrees freedom","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.test.LjungBox.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"McLeod-Ljung-Box test for periodic white noise — pwn_McLeodLjungBox_test","text":"McLeod (1994). ``Diagnostic checking periodic autoregression models application.'' Journal time series analysis, 15(2), pp. 221-233.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.test.LjungBox.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"McLeod-Ljung-Box test for periodic white noise — pwn_McLeodLjungBox_test","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.test.LjungBox.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"McLeod-Ljung-Box test for periodic white noise — pwn_McLeodLjungBox_test","text":"TODO: Consolidate similar tests!","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/pc.test.periodicity.html","id":null,"dir":"Reference","previous_headings":"","what":"McLeod's test for periodic autocorrelation — periodic_acf1_test","title":"McLeod's test for periodic autocorrelation — periodic_acf1_test","text":"Performs McLeod's test periodic autocorrelation.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.test.periodicity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"McLeod's test for periodic autocorrelation — periodic_acf1_test","text":"","code":"periodic_acf1_test(acf, nepochs)"},{"path":"https://geobosh.github.io/pcts/reference/pc.test.periodicity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"McLeod's test for periodic autocorrelation — periodic_acf1_test","text":"acf sample periodic autocorrelation function nepochs number epochs used get acf","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.test.periodicity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"McLeod's test for periodic autocorrelation — periodic_acf1_test","text":"test statistic scaled sum squares lag 1 sample periodic   autocorrelation coefficients, see McLeod (1993), eq. (5).   distribution approximately chi-square null hypothesis   periodic autocorrelation.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.test.periodicity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"McLeod's test for periodic autocorrelation — periodic_acf1_test","text":"list containing following components: statistic value  test statistic. pvalue p-value associated  test statistic.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.test.periodicity.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"McLeod's test for periodic autocorrelation — periodic_acf1_test","text":"McLeod (1993). ``Parsimony, model adequacy periodic correlation time series forecasting.'' Internat. Statist. Rev., 61(3), pp. 387-393.     McLeod (1994). ``Diagnostic checking periodic autoregression models application.'' Journal time series analysis, 15(2), pp. 221-233.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.test.periodicity.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"McLeod's test for periodic autocorrelation — periodic_acf1_test","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.wn.var.acrf.html","id":null,"dir":"Reference","previous_headings":"","what":"Variances of sample periodic autocorrelations — pcacf_pwn_var","title":"Variances of sample periodic autocorrelations — pcacf_pwn_var","text":"Computes variances sample periodic autocorrelations   periodic white noise.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.wn.var.acrf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variances of sample periodic autocorrelations — pcacf_pwn_var","text":"","code":"pcacf_pwn_var(nepoch, period, lag, season)"},{"path":"https://geobosh.github.io/pcts/reference/pc.wn.var.acrf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variances of sample periodic autocorrelations — pcacf_pwn_var","text":"lag desired lags, vector positive integers. season desired seasons. nepoch number epochs. period number seasons.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.wn.var.acrf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Variances of sample periodic autocorrelations — pcacf_pwn_var","text":"given McLeod (1994), see reference, eq. (4.3).","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.wn.var.acrf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variances of sample periodic autocorrelations — pcacf_pwn_var","text":"matrix whose (,j)th entry contains variance   autocorrelation coefficient season season[] lag lag[j].","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.wn.var.acrf.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Variances of sample periodic autocorrelations — pcacf_pwn_var","text":"McLeod (1994). ``Diagnostic checking periodic autoregression models application.'' Journal time series analysis, 15(2), pp. 221-233.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.wn.var.acrf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Variances of sample periodic autocorrelations — pcacf_pwn_var","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc.wn.var.acrf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Variances of sample periodic autocorrelations — pcacf_pwn_var","text":"","code":"pcacf_pwn_var(79, 12, 0:16, 1:12) #>             [,1]       [,2]       [,3]       [,4]       [,5]       [,6] #>  [1,] 0.01234568 0.01249800 0.01249800 0.01249800 0.01249800 0.01249800 #>  [2,] 0.01234568 0.01265823 0.01249800 0.01249800 0.01249800 0.01249800 #>  [3,] 0.01234568 0.01265823 0.01265823 0.01249800 0.01249800 0.01249800 #>  [4,] 0.01234568 0.01265823 0.01265823 0.01265823 0.01249800 0.01249800 #>  [5,] 0.01234568 0.01265823 0.01265823 0.01265823 0.01265823 0.01249800 #>  [6,] 0.01234568 0.01265823 0.01265823 0.01265823 0.01265823 0.01265823 #>  [7,] 0.01234568 0.01265823 0.01265823 0.01265823 0.01265823 0.01265823 #>  [8,] 0.01234568 0.01265823 0.01265823 0.01265823 0.01265823 0.01265823 #>  [9,] 0.01234568 0.01265823 0.01265823 0.01265823 0.01265823 0.01265823 #> [10,] 0.01234568 0.01265823 0.01265823 0.01265823 0.01265823 0.01265823 #> [11,] 0.01234568 0.01265823 0.01265823 0.01265823 0.01265823 0.01265823 #> [12,] 0.01234568 0.01265823 0.01265823 0.01265823 0.01265823 0.01265823 #>             [,7]       [,8]       [,9]      [,10]      [,11]      [,12] #>  [1,] 0.01249800 0.01249800 0.01249800 0.01249800 0.01249800 0.01249800 #>  [2,] 0.01249800 0.01249800 0.01249800 0.01249800 0.01249800 0.01249800 #>  [3,] 0.01249800 0.01249800 0.01249800 0.01249800 0.01249800 0.01249800 #>  [4,] 0.01249800 0.01249800 0.01249800 0.01249800 0.01249800 0.01249800 #>  [5,] 0.01249800 0.01249800 0.01249800 0.01249800 0.01249800 0.01249800 #>  [6,] 0.01249800 0.01249800 0.01249800 0.01249800 0.01249800 0.01249800 #>  [7,] 0.01265823 0.01249800 0.01249800 0.01249800 0.01249800 0.01249800 #>  [8,] 0.01265823 0.01265823 0.01249800 0.01249800 0.01249800 0.01249800 #>  [9,] 0.01265823 0.01265823 0.01265823 0.01249800 0.01249800 0.01249800 #> [10,] 0.01265823 0.01265823 0.01265823 0.01265823 0.01249800 0.01249800 #> [11,] 0.01265823 0.01265823 0.01265823 0.01265823 0.01265823 0.01249800 #> [12,] 0.01265823 0.01265823 0.01265823 0.01265823 0.01265823 0.01265823 #>           [,13]      [,14]      [,15]      [,16]      [,17] #>  [1,] 0.0121894 0.01233777 0.01233777 0.01233777 0.01233777 #>  [2,] 0.0121894 0.01249800 0.01233777 0.01233777 0.01233777 #>  [3,] 0.0121894 0.01249800 0.01249800 0.01233777 0.01233777 #>  [4,] 0.0121894 0.01249800 0.01249800 0.01249800 0.01233777 #>  [5,] 0.0121894 0.01249800 0.01249800 0.01249800 0.01249800 #>  [6,] 0.0121894 0.01249800 0.01249800 0.01249800 0.01249800 #>  [7,] 0.0121894 0.01249800 0.01249800 0.01249800 0.01249800 #>  [8,] 0.0121894 0.01249800 0.01249800 0.01249800 0.01249800 #>  [9,] 0.0121894 0.01249800 0.01249800 0.01249800 0.01249800 #> [10,] 0.0121894 0.01249800 0.01249800 0.01249800 0.01249800 #> [11,] 0.0121894 0.01249800 0.01249800 0.01249800 0.01249800 #> [12,] 0.0121894 0.01249800 0.01249800 0.01249800 0.01249800"},{"path":"https://geobosh.github.io/pcts/reference/pcAR2acf.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute periodic autocorrelations from PAR coefficients — pcAR2acf","title":"Compute periodic autocorrelations from PAR coefficients — pcAR2acf","text":"Compute periodic autocorrelations PAR   coefficients. effectively solves inverse problem   solved periodic Levinson-Durbin algorithm use   recursion.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcAR2acf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute periodic autocorrelations from PAR coefficients — pcAR2acf","text":"","code":"pcAR2acf(coef, sigma2, p, maxlag = 10)"},{"path":"https://geobosh.github.io/pcts/reference/pcAR2acf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute periodic autocorrelations from PAR coefficients — pcAR2acf","text":"coef PAR coefficients, matrix, see Details. sigma2 innovations variances. p PAR order. maxlag many lags compute.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcAR2acf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute periodic autocorrelations from PAR coefficients — pcAR2acf","text":"coef matrix coefficients season   -th row. coefficients start lag 1. first autocorrelations computed solving linear   system, see references. rest, generated using periodic   Yule-Walker equations.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcAR2acf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute periodic autocorrelations from PAR coefficients — pcAR2acf","text":"matrix, row s contains acf's season s  lags 0, 1, ..., maxlag (order).","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcAR2acf.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute periodic autocorrelations from PAR coefficients — pcAR2acf","text":"Boshnakov GN (1996). “Recursive computation parameters periodic autoregressive moving-average processes.” J. Time Ser. Anal., 17(4), 333--349. ISSN 0143-9782, doi: 10.1111/j.1467-9892.1996.tb00281.x . Boshnakov GN, Boteva (1992). “algorithmfor computation theoretical autocovariances periodic autoregression process.” Varna.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcAR2acf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute periodic autocorrelations from PAR coefficients — pcAR2acf","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/pcAR2acf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute periodic autocorrelations from PAR coefficients — pcAR2acf","text":"","code":"m <- rbind( c(0.81, 0), c(0.4972376, 0.4972376) ) si2 <- PeriodicVector(c(0.3439000, 0.1049724))  pcAR2acf(m) #>          [,1]     [,2]     [,3] #> [1,] 5.306937 5.317206 4.279006 #> [2,] 6.564452 5.282723 5.908007 pcAR2acf(m, si2) #>          [,1]      [,2]      [,3] #> [1,] 1.000000 0.8100006 0.7290005 #> [2,] 1.000001 0.9000006 0.9000007 pcAR2acf(m, si2, 2) #>          [,1]      [,2]      [,3] #> [1,] 1.000000 0.8100006 0.7290005 #> [2,] 1.000001 0.9000006 0.9000007 pcAR2acf(m, si2, 2, maxlag = 10) #>          [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #> [1,] 1.000000 0.8100006 0.7290005 0.7290006 0.6561005 0.6561006 0.5904905 #> [2,] 1.000001 0.9000006 0.9000007 0.8100006 0.8100007 0.7290006 0.7290007 #>           [,8]      [,9]     [,10]     [,11] #> [1,] 0.5904905 0.5314414 0.5314415 0.4782973 #> [2,] 0.6561005 0.6561006 0.5904905 0.5904906   # same using pcarma_acvf_lazy directly m1 <- rbind( c(1, 0.81, 0), c(1, 0.4972376, 0.4972376) )  testphi <- slMatrix(init = m1) myf <- pcarma_acvf_lazy(testphi, testtheta, si2, 2, 0, 2, maxlag = 10) myf(1:2, 0:9)    # get a matrix of values #>          [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #> [1,] 1.000000 0.8100006 0.7290005 0.7290006 0.6561005 0.6561006 0.5904905 #> [2,] 1.000001 0.9000006 0.9000007 0.8100006 0.8100007 0.7290006 0.7290007 #>           [,8]      [,9]     [,10] #> [1,] 0.5904905 0.5314414 0.5314415 #> [2,] 0.6561005 0.6561006 0.5904905  all(myf(1:2, 0:9) == pcAR2acf(m, si2, 2, maxlag = 9)) # TRUE #> [1] TRUE"},{"path":"https://geobosh.github.io/pcts/reference/pcApply-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a function to each season — pcApply-methods","title":"Apply a function to each season — pcApply-methods","text":"Apply function periodically","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcApply-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a function to each season — pcApply-methods","text":"","code":"pcApply(object, ...)  # S4 method for numeric pcApply(object, nseasons, FUN, ...)  # S4 method for matrix pcApply(object, nseasons, FUN, ...)  # S4 method for PeriodicTS pcApply(object, FUN, ...)  # S4 method for PeriodicMTS pcApply(object, FUN, ...)"},{"path":"https://geobosh.github.io/pcts/reference/pcApply-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a function to each season — pcApply-methods","text":"object object periodic mean makes sense. nseasons number seasons. FUN function, apply. ... arguments FUN.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcApply-methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply a function to each season — pcApply-methods","text":"univariate periodic time series, pcApply applies FUN   data season. multivariate periodic time series,   done variable. methods \"numeric\" \"matrix\" equivalent   \"PeriodicTS\" \"PeriodicMTS\",   respectively. difference latter two need   argument nseasons take names seasons   object. Argument \"...\" arguments FUN.   particular, many standard R functions argument na.rm =   TRUE can used omit NA's, see examples. univariate case,  length(object) integer   multiple number seasons periodic mean equivalent   apply(matrix(object, nrow = nseasons), 1, FUN, ...).","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcApply-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a function to each season — pcApply-methods","text":"numeric matrix methods described , see section   Details.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcApply-methods.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Apply a function to each season — pcApply-methods","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcApply-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Apply a function to each season — pcApply-methods","text":"signature(object = \"matrix\")  signature(object = \"numeric\")  signature(object = \"PeriodicMTS\")  signature(object = \"PeriodicTS\")","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/pcApply-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply a function to each season — pcApply-methods","text":"","code":"pcApply(pcts(presidents), mean, na.rm = TRUE) #> Quarter_1 Quarter_2 Quarter_3 Quarter_4  #>  58.44828  56.43333  57.22222  53.07143  pcMean(pcts(presidents), na.rm = TRUE) # same #> Quarter_1 Quarter_2 Quarter_3 Quarter_4  #>  58.44828  56.43333  57.22222  53.07143   pcApply(pcts(presidents), median, na.rm = TRUE) #> Quarter_1 Quarter_2 Quarter_3 Quarter_4  #>      63.0      60.5      61.0      55.5  pcApply(pcts(presidents), var, na.rm = TRUE) #> Quarter_1 Quarter_2 Quarter_3 Quarter_4  #>  274.5419  239.7713  218.2564  251.6243  pcApply(pcts(presidents), sd, na.rm = TRUE) #> Quarter_1 Quarter_2 Quarter_3 Quarter_4  #>  16.56931  15.48455  14.77350  15.86267   pcfr2to4 <- pcts(dataFranses1996)[2:4] pcApply(pcfr2to4, median, na.rm = TRUE) #>           USTotalIPI CanadaUnemployment GermanyGNP #> Quarter_1      74.60              652.0      309.4 #> Quarter_2      76.80              542.5      314.5 #> Quarter_3      76.65              515.0      328.7 #> Quarter_4      76.75              528.5      329.5 pcApply(pcfr2to4, sd, na.rm = TRUE) #>           USTotalIPI CanadaUnemployment GermanyGNP #> Quarter_1   22.65126           387.2952   79.87538 #> Quarter_2   22.65155           388.1247   78.92102 #> Quarter_3   23.81635           384.9629   75.67722 #> Quarter_4   22.80446           370.5678   83.80192"},{"path":"https://geobosh.github.io/pcts/reference/pcAr.ss.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the sum of squares for a given PAR model — pcAr.ss","title":"Compute the sum of squares for a given PAR model — pcAr.ss","text":"Compute sum squares given PAR model.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcAr.ss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the sum of squares for a given PAR model — pcAr.ss","text":"","code":"pcAr.ss(x, model, eps = numeric(length(x)))"},{"path":"https://geobosh.github.io/pcts/reference/pcAr.ss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the sum of squares for a given PAR model — pcAr.ss","text":"x time series, numeric vector. model model. eps residuals, defaults vector zeroes. may used   models moving average terms, example.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcAr.ss.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the sum of squares for a given PAR model — pcAr.ss","text":"todo:","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcAr.ss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the sum of squares for a given PAR model — pcAr.ss","text":"number","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcAr.ss.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute the sum of squares for a given PAR model — pcAr.ss","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcCycle-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Create or extract Cycle objects — pcCycle-methods","title":"Create or extract Cycle objects — pcCycle-methods","text":"pcCycle() generic function methods creating,   converting, modifying, extracting cycle objects. BuiltinCycle()    function create cycle objects builtin cycle classes.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcCycle-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create or extract Cycle objects — pcCycle-methods","text":"","code":"pcCycle(x, type, ...)  BuiltinCycle(n, coerce = FALSE, first = 1, stop = TRUE)"},{"path":"https://geobosh.github.io/pcts/reference/pcCycle-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create or extract Cycle objects — pcCycle-methods","text":"x object, methods include numeric, character cyclic objects,     see Details. type class result. equal \"auto\", default,     class determined argument(s), otherwise name     cycle class.  ... arguments methods. n number seasons, integer. coerce TRUE coerce objects modifiable cycle class,     currently \"SimpleCycle\". first season first object. stop TRUE, default, throw error builtin     class n seasons, otherwise create \"BareCycle\"     object.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcCycle-methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create or extract Cycle objects — pcCycle-methods","text":"pcCycle serves constructor extractor cycle   objects. meant just right thing, relieving user   burden specifying particular cycle class. x numeric constructs cycle object period   x additional properties specified   arguments.  x character string, taken   name one builtin cycles. pcCycle can used create modified version cycle   object /convert another cycle type. done   providing cycle object argument x, .e. one inheriting   \"BasicCycle\". x inherits \"Cyclic\", pcCycle returns   cycle component. Argument type rarely needed, except maybe   conveniently force conversion builtin type ordinary type. descriptions individual methods section Methods give   specific details. BuiltinCycle convenience function create objects   builtin cycle classes specifying number seasons.    builtin cycle classes esseintially fixed, except season   considered first can changed using argument first.   modifications desired, convert returned builtin cycle   object class \"SimpleCycle\". can done also   call BuiltinCycle() specifying coerce = TRUE. default, BuiltinCycle throws error builtin   class requested number seasons. Set argument stop   FALSE create object class \"BareCycle\" instead   (converted \"SimpleCycle\" coerce =   TRUE). Argument stop mainly programming.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcCycle-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create or extract Cycle objects — pcCycle-methods","text":"pcCycle, object one cycle classes;   BuiltinCycle, object one builtin classes,   coerced requested.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcCycle-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Create or extract Cycle objects — pcCycle-methods","text":"signature(x = \"numeric\", type = \"missing\") creates cycle object period x. x     argument, \"BareCycle\" object created, otherwise     constructor \"SimpleCycle\" invoked arguments     except type passed .  signature(x = \"character\", type = \"missing\") creates object class specified x.     Currently equivalent new(x, ...) somewhat     portable. Future amendments may use suitable class     combinations arguments. Also, class renamed,     code inserted create equivalent object. signature(x = \"numeric\", type = \"character\")  signature(x = \"character\", type = \"character\") first call method type = \"missing\",     convert result class type. signature(x = \"Cyclic\", type = \"\") extracts cycle component x (x@cycle).     Currently ignores remaining arguments. signature(x = \"BasicCycle\", type = \"missing\") convert object cycle class class     \"SimpleCycle\". like (x, \"SimpleCycle\")     can arguments. signature(x = \"BasicCycle\", type = \"character\") convert object cycle class class     type. signature(x = \"ts\", type = \"missing\")  signature(x = \"ts\", type = \"character\") x class \"ts\", extract frequency     convert cycle class. Just \"ts\", certain     frequencies taken correspond specific classes. base     R treats periodicities 4 12 specially, pcCycle extends     builtin classes pcts. Argument type can     used overwrite default behaviour requesting specific     class. particular, type = \"BareCycle\" type = \"\"     cause result \"BareCycle\".  signature(x = \"PeriodicTimeSeries\", type = \"missing\")  signature(x = \"PeriodicTimeSeries\", type = \"character\") extract cycle part object inheriting     \"PeriodicTimeSeries\", currently \"PeriodicTS\"     \"PeriodicMTS\". Argument type can used force     result specific cycle class, methods     \"ts\".","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcCycle-methods.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create or extract Cycle objects — pcCycle-methods","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/pcCycle-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create or extract Cycle objects — pcCycle-methods","text":"","code":"## pcCycle pcCycle(4) #> Object from class 'BareCycle' #> Number of seasons: 4  pcCycle(4, seasons = c(\"Spring\", \"Summer\", \"Autumn\", \"Winter\")) #> Object from class 'SimpleCycle' #> Number of seasons: 4  #> Seasons: Spring Summer Autumn Winter  #> Abbreviated: Spring Summer Autumn Winter   pcCycle(\"QuarterYearCycle\") #> Object from built-in class 'QuarterYearCycle' #> Cycle start: Quarter_1  BuiltinCycle(4) # same, recommended #> Object from built-in class 'QuarterYearCycle' #> Cycle start: Quarter_1   pcCycle(\"QuarterYearCycle\", type = \"BareCycle\") #> Object from class 'BareCycle' #> Number of seasons: 4  pcCycle(\"QuarterYearCycle\", type = \"SimpleCycle\") #> Object from class 'SimpleCycle' #> Number of seasons: 4  #> Seasons: Quarter_1 Quarter_2 Quarter_3 Quarter_4  #> Abbreviated: Q1 Q2 Q3 Q4   ## BuiltinCycle BuiltinCycle(2)  # \"OpenCloseCycle\" #> Object from built-in class 'OpenCloseCycle' #> Cycle start: Open  BuiltinCycle(4)  # \"QuarterYearCycle\" #> Object from built-in class 'QuarterYearCycle' #> Cycle start: Quarter_1  BuiltinCycle(5)  #  five day week cycle #> Object from class 'PartialCycle' #>     partial cycle of 'DayWeekCycle', seasons: 1, 2, 3, 4, 5 #> Cycle start: Monday  BuiltinCycle(7)  # \"DayWeekCycle\" #> Object from built-in class 'DayWeekCycle' #> Cycle start: Monday  BuiltinCycle(12) # \"MonthYearCycle\" #> Object from built-in class 'MonthYearCycle' #> Cycle start: January  BuiltinCycle(48) # \"Every30MinutesCycle\" #> Object from built-in class 'Every30MinutesCycle' #> Cycle start: 00:30   ## error, since there is no builtin cycle with 19 seasons: ## BuiltinCycle(19)  ## use stop = FALSE to reate a default cycle in this case BuiltinCycle(19, stop = FALSE) #> Object from class 'BareCycle' #> Number of seasons: 19  BuiltinCycle(19, coerce = TRUE, stop = FALSE) #> Object from class 'SimpleCycle' #> Number of seasons: 19  #> Seasons: Season_1 Season_2 Season_3 Season_4 Season_5 Season_6 Season_7 Season_8 Season_9 Season_10 Season_11 Season_12 Season_13 Season_14 Season_15 Season_16 Season_17 Season_18 Season_19  #> Abbreviated: S1 S2 S3 S4 S5 S6 S7 S8 S9 S10 S11 S12 S13 S14 S15 S16 S17 S18 S19"},{"path":"https://geobosh.github.io/pcts/reference/pcMean-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute periodic mean — pcMean-methods","title":"Compute periodic mean — pcMean-methods","text":"Compute periodic mean, generic function.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcMean-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute periodic mean — pcMean-methods","text":"","code":"pcMean(object, ...)  # S4 method for numeric pcMean(object, nseasons, ...)  # S4 method for matrix pcMean(object, nseasons, ...)  # S4 method for PeriodicTS pcMean(object, ...)  # S4 method for PeriodicMTS pcMean(object, ...)"},{"path":"https://geobosh.github.io/pcts/reference/pcMean-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute periodic mean — pcMean-methods","text":"object object periodic mean makes sense. nseasons number seasons. ... arguments methods.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcMean-methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute periodic mean — pcMean-methods","text":"univariate periodic time series, pcMean computes mean   season returns named vector. multivariate periodic   time series, result matrix one column variable. methods \"numeric\" \"matrix\" equivalent   \"PeriodicTS\" \"PeriodicMTS\",   respectively. difference latter two need   argument nseasons take names seasons   object. Argument na.rm = TRUE can used omit NA's. univariate case,  length(object) integer   multiple number seasons periodic mean equivalent   computing row means matrix(object, nrow = nseasons).","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcMean-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute periodic mean — pcMean-methods","text":"numeric matrix methods described , see section   Details.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcMean-methods.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute periodic mean — pcMean-methods","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcMean-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Compute periodic mean — pcMean-methods","text":"signature(object = \"matrix\")  signature(object = \"numeric\")  signature(object = \"PeriodicMTS\")  signature(object = \"PeriodicTS\")  signature(object = \"VirtualPeriodicArmaModel\")","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/pcMean-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute periodic mean — pcMean-methods","text":"","code":"pcMean(pcts(presidents)) #> Quarter_1 Quarter_2 Quarter_3 Quarter_4  #>        NA  56.43333        NA        NA  pcMean(pcts(presidents), na.rm = TRUE) #> Quarter_1 Quarter_2 Quarter_3 Quarter_4  #>  58.44828  56.43333  57.22222  53.07143   pcMean(pcts(dataFranses1996)[2:5], na.rm = TRUE) #>           USTotalIPI CanadaUnemployment GermanyGNP UKTotalInvestment #> Quarter_1   75.70312           796.5000   301.3194          11816.85 #> Quarter_2   77.24375           711.1786   312.0774          11160.44 #> Quarter_3   77.95625           656.9643   326.7194          11744.68 #> Quarter_4   77.96563           664.8929   331.5903          12489.09  pcMean(1:20, nseasons = 4) #> S1 S2 S3 S4  #>  9 10 11 12  m <- matrix(1:20, nrow = 4) all(apply(m, 1, mean) == pcMean(1:20, nseasons = 4)) # TRUE #> [1] TRUE"},{"path":"https://geobosh.github.io/pcts/reference/pcPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot periodic time series — pcPlot","title":"Plot periodic time series — pcPlot","text":"Plot periodic time series.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot periodic time series — pcPlot","text":"","code":"# S3 method for PeriodicTimeSeries boxplot(x, ...)  # S3 method for PeriodicTimeSeries monthplot(x, ylab = deparse(substitute(x)), base, ...)"},{"path":"https://geobosh.github.io/pcts/reference/pcPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot periodic time series — pcPlot","text":"x periodic time series object. ... arguments passed plotting function. ylab label y-axis, used univariate time series. base function use computing reference lines.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcPlot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot periodic time series — pcPlot","text":"Functions periodic/seasonal plots boxplots.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcPlot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot periodic time series — pcPlot","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/pcPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot periodic time series — pcPlot","text":"","code":"ap <- pcts(AirPassengers) monthplot(ap)  boxplot(ap)   fr23 <- pcts(dataFranses1996[ , 2:3]) monthplot(fr23)  boxplot(fr23)"},{"path":"https://geobosh.github.io/pcts/reference/pcTest-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Test for periodicity — pcTest-methods","title":"Test for periodicity — pcTest-methods","text":"Test periodicity","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcTest-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test for periodicity — pcTest-methods","text":"","code":"pcTest(x, nullmodel, nseasons, ...)"},{"path":"https://geobosh.github.io/pcts/reference/pcTest-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test for periodicity — pcTest-methods","text":"x object tested, e.g. time series periodic acf nullmodel specification test performed nseasons number seasons ... additional arguments passed methods","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcTest-methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Test for periodicity — pcTest-methods","text":"generic function acts dispatcher various   tests periodicity periodic correlation. x typically time series conceptually object   containing statistics needed carrying requested test.   example, x may periodic autocovariance function   tests based sample autocorrelations autocovariances. method signature (x = \"\", nullmodel = \"character\") may   considered default pcTest.  ``real'' default   method simply prints error message.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcTest-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test for periodicity — pcTest-methods","text":"list containing results requested test,   see individual methods details","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcTest-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Test for periodicity — pcTest-methods","text":"signature(x = \"\", nullmodel = \"character\") Argument nullmodel specifies test performed.   single character string. one   strings recognised method,  test specified   carried . Otherwise nullmodel taken name   function called arguments (x,...). Currently, following character strings recognised: \"wn\" Box test (non-periodic) white noise, simply calls Box.test. \"piar\" Franses (1996) test periodic integration. signature(x = \"slMatrix\", nullmodel = \"character\") x periodic autocovariance function. method   works similarly method signature (x = \"\",   nullmodel = \"character\"), see description. Currently, following character strings recognised: \"pwn\" Ljung-Box test periodic white noise, \"periodicity\" McLeod test periodic correlation. signature(x = \"numeric\", nullmodel = \"character\")  signature(x = \"PeriodicTimeSeries\", nullmodel = \"character\")","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcTest-methods.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Test for periodicity — pcTest-methods","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcTest-methods.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Test for periodicity — pcTest-methods","text":"TODO: critical values","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/pcTest-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test for periodicity — pcTest-methods","text":"","code":"cu <- pcts(dataFranses1996[ , \"CanadaUnemployment\"]) cu <- window(cu, start = availStart(cu), end = availEnd(cu))  test_piar(cu, 4, 1, sintercept = TRUE) #> Loading required namespace: fUnitRoots #> $p #> [1] 1 #>  #> $spec #>     sintercept         sslope homoschedastic  #>           TRUE          FALSE          FALSE  #>  #> $statistics #>                LR      LRtau        tau  perFuller #> stats   0.2757132 -0.5250840 -0.5066658 -0.7737611 #> pvalues        NA  0.8680436  0.8749612  0.9052944 #>  pcTest(cu, \"piar\", 4, 1, sintercept = TRUE) #> $p #> [1] 1 #>  #> $spec #>     sintercept         sslope homoschedastic  #>           TRUE          FALSE          FALSE  #>  #> $statistics #>                LR      LRtau        tau  perFuller #> stats   0.2757132 -0.5250840 -0.5066658 -0.7737611 #> pvalues        NA  0.8680436  0.8749612  0.9052944 #>   if(require(partsm)){ # same with LRurpar.test from partsm LRurpar.test(cu, list(regular = c(0,0,0), seasonal = c(1,0), regvar = 0), p = 1) } #> Loading required package: partsm #> ---- #>   Likelihood ratio test for a single unit root in a PAR model of order 1 . #>  #>   Null hypothesis: PAR( 1 ) restricted to a unit root.  #>   Alternative hypothesis: PAR( 1 ).  #>  #>   LR-statistic: 0.27  #>   --- #>   5 and 10 per cent asymptotic critical values: #>     when seasonal intercepts are included: 9.24, 7.52.  #>     when seasonal intercepts and trends are included: 12.96, 10.50.  #>  #>   LRtau-statistic: -0.52  #>   --- #>   5 and 10 per cent asymptotic critical values: #>     when seasonal intercepts are included: -2.86, -2.57.  #>     when seasonal intercepts and trends are included: -3.41, -3.12.  #>"},{"path":"https://geobosh.github.io/pcts/reference/pc_sdfactor.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute normalising factors — pc_sdfactor","title":"Compute normalising factors — pc_sdfactor","text":"Compute matrix factors elementwise division   periodic autocovariance matrix give periodic   autocorrelations.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc_sdfactor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute normalising factors — pc_sdfactor","text":"","code":"pc_sdfactor(sd, maxlag)"},{"path":"https://geobosh.github.io/pcts/reference/pc_sdfactor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute normalising factors — pc_sdfactor","text":"sd standard deviations seasons numeric. maxlag maximal lag, number.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc_sdfactor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute normalising factors — pc_sdfactor","text":"matrix coefficients size period x (maxlag+1).   length sd taken period.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pc_sdfactor.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute normalising factors — pc_sdfactor","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/pc_sdfactor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute normalising factors — pc_sdfactor","text":"","code":"## equivalent to  data(Fraser, package = \"pear\") Fraser <- window(Fraser2017, start = c(1912, 3), end = c(1990, 12))  logfraser <- window(pcts(log(Fraser)), start = c(1913, 1)) acvf1 <- autocovariances(logfraser, maxlag = 2) fac <- pc_sdfactor(sqrt(acvf1[ , 0]), 2) fac[ , 1:3] #>             [,1]       [,2]       [,3] #>  [1,] 0.07080708 0.08050247 0.08238189 #>  [2,] 0.06684956 0.06879987 0.07822042 #>  [3,] 0.07282971 0.06977560 0.07181128 #>  [4,] 0.13251199 0.09823854 0.09411891 #>  [5,] 0.05316391 0.08393364 0.06222469 #>  [6,] 0.03112889 0.04068088 0.06422578 #>  [7,] 0.04293554 0.03655866 0.04777678 #>  [8,] 0.04014200 0.04151528 0.03534934 #>  [9,] 0.04792497 0.04386119 0.04536171 #> [10,] 0.07893476 0.06150566 0.05629031 #> [11,] 0.09584884 0.08698164 0.06777576 #> [12,] 0.09152542 0.09366219 0.08499728  acrf1 <- autocorrelations(logfraser, maxlag = 2) all.equal(acvf1[], acrf1[] * fac) # TRUE #> [1] TRUE"},{"path":"https://geobosh.github.io/pcts/reference/pcacfMat.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute PAR autocovariance matrix — pcacfMat","title":"Compute PAR autocovariance matrix — pcacfMat","text":"Compute PAR autocovariance matrix","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcacfMat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute PAR autocovariance matrix — pcacfMat","text":"","code":"pc.acf.parModel(parmodel, maxlag = NULL)  pcacfMat(parmodel)"},{"path":"https://geobosh.github.io/pcts/reference/pcacfMat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute PAR autocovariance matrix — pcacfMat","text":"parmodel PAR model, object class parModel. maxlag maximum lag","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcacfMat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute PAR autocovariance matrix — pcacfMat","text":"pc.acf.parModel returns autocovariances PAR model   season-lag form maximum lag equal maxlag.   maxlag larger available precomputed   autocovariances, missing ones computed using Yule-Walker   relations. Note pc.acf.parModel   assumes enough precomputed autocovariances use   Yule-Walker recursions directly. TODO: pc.acf.parModel tied old classes since accesses   slots. used template streamline method   autocovariances class \"PeriodicAutocovariance\". season-lag form can easily converted forms   powerful indexing operator, see  examples slMatrix-class. pcacfMat convenience function statistical   inference. creates covariance matrix dimension chosen   automatically. covariance matrix asymptotic   covariance matrix estimated parameters can obtained dividing   sub-blocks innovation variances inverting .  See,   eq. (3.3) reference.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcacfMat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute PAR autocovariance matrix — pcacfMat","text":"pcacfMat, matrix   pc.acf.parModel, slMatrix","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcacfMat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute PAR autocovariance matrix — pcacfMat","text":"McLeod (1994). ``Diagnostic checking periodic autoregression models application.'' Journal time series analysis, 15(2), pp. 221-233.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcacfMat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute PAR autocovariance matrix — pcacfMat","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/pcacfMat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute PAR autocovariance matrix — pcacfMat","text":"","code":"x <- arima.sim(list(ar = 0.9), n = 1000) proba1 <- fitPM(c(3,2,2,2), x)  acfb <- pc.acf.parModel(proba1, maxlag = 8) acfb[4:(-2), 4:(-2), type = \"tt\"] #>          [,1]     [,2]     [,3]     [,4]     [,5]     [,6]     [,7] #> [1,] 4.354767 4.076277 3.437176 3.145738 2.762350 2.631064 2.220523 #> [2,] 4.076277 4.690931 3.960936 3.625010 3.183214 3.031926 2.558836 #> [3,] 3.437176 3.960936 4.203584 3.834758 3.367974 3.207862 2.707318 #> [4,] 3.145738 3.625010 3.834758 4.462997 3.874579 3.693773 3.117554 #> [5,] 2.762350 3.183214 3.367974 3.874579 4.354767 4.076277 3.437176 #> [6,] 2.631064 3.031926 3.207862 3.693773 4.076277 4.690931 3.960936 #> [7,] 2.220523 2.558836 2.707318 3.117554 3.437176 3.960936 4.203584  pcacfMat(proba1) #>          [,1]     [,2]     [,3]     [,4]     [,5]     [,6]     [,7] #> [1,] 4.354767 4.076277 3.437176 3.145738 2.762350 2.631064 2.220523 #> [2,] 4.076277 4.690931 3.960936 3.625010 3.183214 3.031926 2.558836 #> [3,] 3.437176 3.960936 4.203584 3.834758 3.367974 3.207862 2.707318 #> [4,] 3.145738 3.625010 3.834758 4.462997 3.874579 3.693773 3.117554 #> [5,] 2.762350 3.183214 3.367974 3.874579 4.354767 4.076277 3.437176 #> [6,] 2.631064 3.031926 3.207862 3.693773 4.076277 4.690931 3.960936 #> [7,] 2.220523 2.558836 2.707318 3.117554 3.437176 3.960936 4.203584"},{"path":"https://geobosh.github.io/pcts/reference/pcalg1.html","id":null,"dir":"Reference","previous_headings":"","what":"Periodic Levinson-Durbin algorithm — pcalg1","title":"Periodic Levinson-Durbin algorithm — pcalg1","text":"Calculate partial periodic autocorrelations, forward backward   prediction coefficients error variances using periodic   Levinson-Durbin algorithm.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcalg1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Periodic Levinson-Durbin algorithm — pcalg1","text":"","code":"alg1(r, p)"},{"path":"https://geobosh.github.io/pcts/reference/pcalg1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Periodic Levinson-Durbin algorithm — pcalg1","text":"r periodic autocovariances, matrix, see `Details'. p autoregressive orders, numeric vector.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcalg1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Periodic Levinson-Durbin algorithm — pcalg1","text":"alg1(r,p) calculates partial periodic correlations     autocovariances r autoregression orders p.     matrix r format r slot     pcAcvf objects.  periodicity, d, set equal     number rows r. length p     equal periodicity, autoregressive orders set     first element p. last feature really meant     used scalar p. convention signs coefficients one     Boshnakov(1996) consistent R time series     functions. pmax stands maximal element p,     .e. maximal AR order. non-periodic case, periodic Levinson-Durbin algorithm     fits recursively models order 0, 1, ..., pmax. Namely,      step AR orders seasons set     . done way correctly handles case     elements p equal, see references. essential quantities calculated periodic Levinson-Durbin     algorithm returned matrices, whose \\(\\)th rows     contain values season \\(\\). complete details depend     quantities, described . partial autocorrelations, forward innovation variances     backward innovation variances returned matrices     d rows 1+pmax columns, whose j-th columns contain     quantities order j-1 (partial autocorrelations, forward     innovation variances backward innovation variances, respectively).     Note lag-0 partial autocorrelations autocovariances     lag 0, see references details. forward autoregression parameters returned list whose     \\(j\\)th element matrix containing coefficients     order \\(j\\). Similarly backward autoregression parameters. One often interested model order p .     coefficients given af[[pmax]], innovation     variances last column fv.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcalg1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Periodic Levinson-Durbin algorithm — pcalg1","text":"list following elements. orders autoregression orders partial autocorrelations, matrix d rows fv forward innovation variances, matrix d rows bv backward innovation variances, matrix d rows af forward  autoregression parameters, list one   element parameters order. ab backward autoregression parameters, list one     element parameters order.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcalg1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Periodic Levinson-Durbin algorithm — pcalg1","text":"Boshnakov GN (1996). “Recursive computation parameters periodic autoregressive moving-average processes.” J. Time Ser. Anal., 17(4), 333--349. ISSN 0143-9782, doi: 10.1111/j.1467-9892.1996.tb00281.x . Lambert-Lacroix S (2000). “periodic autoregressive process estimation .”  IEEE Transactions Signal Processing, 48( 6 ), 1800-1803. Lambert-Lacroix S (2005). “ Extension autocovariance coefficients sequence periodically correlated processes.” Journal Time Series Analysis, 26(3), 423-435.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcalg1.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Periodic Levinson-Durbin algorithm — pcalg1","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcalg1.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Periodic Levinson-Durbin algorithm — pcalg1","text":"autoregression orders output necessarilly   specified call. may PAR model   requested orders, see references.","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/pcalg1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Periodic Levinson-Durbin algorithm — pcalg1","text":"","code":"r1 <- rbind(c(1,0.81,0.729),c(1,0.90,0.900)) alg1(r1,2) #> $orders #> [1] 2 2 #>  #> $be #>      [,1] [,2]          [,3] #> [1,]    1 0.81 -4.343275e-16 #> [2,]    1 0.90  6.689647e-01 #>  #> $fv #>      [,1]   [,2]      [,3] #> [1,]    1 0.3439 0.3439000 #> [2,]    1 0.1900 0.1049724 #>  #> $bv #>      [,1]   [,2] [,3] #> [1,]    1 0.1900 0.19 #> [2,]    1 0.3439 0.19 #>  #> $af #> $af[[1]] #>       [,1] #> [1,] -0.81 #> [2,] -0.90 #>  #> $af[[2]] #>            [,1]          [,2] #> [1,] -0.8100000  5.843279e-16 #> [2,] -0.4972376 -4.972376e-01 #>  #>  #> $ab #> $ab[[1]] #>       [,1] #> [1,] -0.90 #> [2,] -0.81 #>  #> $ab[[2]] #>      [,1]          [,2] #> [1,] -0.9  3.228331e-16 #> [2,]  0.0 -9.000000e-01 #>  #>   ## pc2 <- pcAcvf(init=r1) ## pc2a <- pcAcvf(init=r1,seasonnames=c(\"am\",\"pm\"), periodunit=\"day\")  # example of Lambert-Lacroix data(ex1f) pc3 <- slMatrix(period=2,maxlag=5,f=ex1f,type=\"tt\") res0p2 <- alg1(pc3[],c(0,2)) res1p2 <- alg1(pc3[],c(1,2)) res3p3 <- alg1(pc3[],c(3,3))  paramsys1 <- pcarma_param_system(pc3, NULL, NULL, 2, 0, 2) t1 <- solve(paramsys1$A,paramsys1$b)  # this is from tests.r but I have lost t1 # set it to pc3 below # note: t1 is not the t1 computed above and in other examples!  t1 <- pc3 t1 #> An object of class \"slMatrix\" #> Slot \"m\": #>       lag #> season 0    1     2     3      4      5 #>      1 1 0.81 0.729 0.729 0.6561 0.6561 #>      2 1 0.90 0.900 0.810 0.8100 0.7290 #>  t1[] #>       lag #> season 0    1     2     3      4      5 #>      1 1 0.81 0.729 0.729 0.6561 0.6561 #>      2 1 0.90 0.900 0.810 0.8100 0.7290 alg1(t1[],c(1,1)) #> $orders #> [1] 1 1 #>  #> $be #>      [,1] [,2] #> [1,]    1 0.81 #> [2,]    1 0.90 #>  #> $fv #>      [,1]   [,2] #> [1,]    1 0.3439 #> [2,]    1 0.1900 #>  #> $bv #>      [,1]   [,2] #> [1,]    1 0.1900 #> [2,]    1 0.3439 #>  #> $af #> $af[[1]] #>       [,1] #> [1,] -0.81 #> [2,] -0.90 #>  #>  #> $ab #> $ab[[1]] #>       [,1] #> [1,] -0.90 #> [2,] -0.81 #>  #>  alg1(t1[],c(1,0)) #> $orders #> [1] 1 0 #>  #> $be #>      [,1] [,2] #> [1,]    1 0.81 #> [2,]    1 0.00 #>  #> $fv #>      [,1]   [,2] #> [1,]    1 0.3439 #> [2,]    1 1.0000 #>  #> $bv #>      [,1]   [,2] #> [1,]    1 1.0000 #> [2,]    1 0.3439 #>  #> $af #> $af[[1]] #>       [,1] #> [1,] -0.81 #> [2,]  0.00 #>  #>  #> $ab #> $ab[[1]] #>       [,1] #> [1,]  0.00 #> [2,] -0.81 #>  #>  alg1(t1[],c(0,1)) #> $orders #> [1] 0 1 #>  #> $be #>      [,1] [,2] #> [1,]    1  0.0 #> [2,]    1  0.9 #>  #> $fv #>      [,1] [,2] #> [1,]    1 1.00 #> [2,]    1 0.19 #>  #> $bv #>      [,1] [,2] #> [1,]    1 0.19 #> [2,]    1 1.00 #>  #> $af #> $af[[1]] #>      [,1] #> [1,]  0.0 #> [2,] -0.9 #>  #>  #> $ab #> $ab[[1]] #>      [,1] #> [1,] -0.9 #> [2,]  0.0 #>  #>  alg1(t1[],c(5,5)) #> $orders #> [1] 5 5 #>  #> $be #>      [,1] [,2]      [,3] [,4]          [,5]          [,6] #> [1,]    1 0.81 0.0000000    0 -4.343275e-16 -4.343275e-16 #> [2,]    1 0.90 0.6689647    0  0.000000e+00  7.861328e-16 #>  #> $fv #>      [,1]   [,2]      [,3]      [,4]      [,5]      [,6] #> [1,]    1 0.3439 0.3439000 0.3439000 0.3439000 0.3439000 #> [2,]    1 0.1900 0.1049724 0.1049724 0.1049724 0.1049724 #>  #> $bv #>      [,1]   [,2] [,3] [,4] [,5] [,6] #> [1,]    1 0.1900 0.19 0.19 0.19 0.19 #> [2,]    1 0.3439 0.19 0.19 0.19 0.19 #>  #> $af #> $af[[1]] #>       [,1] #> [1,] -0.81 #> [2,] -0.90 #>  #> $af[[2]] #>            [,1]       [,2] #> [1,] -0.8100000  0.0000000 #> [2,] -0.4972376 -0.4972376 #>  #> $af[[3]] #>            [,1]       [,2] [,3] #> [1,] -0.8100000  0.0000000    0 #> [2,] -0.4972376 -0.4972376    0 #>  #> $af[[4]] #>            [,1]       [,2]          [,3]         [,4] #> [1,] -0.8100000  0.0000000 -5.258951e-16 5.843279e-16 #> [2,] -0.4972376 -0.4972376  0.000000e+00 0.000000e+00 #>  #> $af[[5]] #>            [,1]       [,2]         [,3]         [,4]          [,5] #> [1,] -0.8100000  0.0000000 -1.05179e-15 5.843279e-16  5.843279e-16 #> [2,] -0.4972376 -0.4972376  0.00000e+00 5.258951e-16 -5.843279e-16 #>  #>  #> $ab #> $ab[[1]] #>       [,1] #> [1,] -0.90 #> [2,] -0.81 #>  #> $ab[[2]] #>      [,1] [,2] #> [1,] -0.9  0.0 #> [2,]  0.0 -0.9 #>  #> $ab[[3]] #>      [,1] [,2] [,3] #> [1,] -0.9  0.0    0 #> [2,]  0.0 -0.9    0 #>  #> $ab[[4]] #>      [,1] [,2]          [,3]         [,4] #> [1,] -0.9  0.0 -2.614948e-16 3.228331e-16 #> [2,]  0.0 -0.9  0.000000e+00 0.000000e+00 #>  #> $ab[[5]] #>               [,1] [,2]         [,3]          [,4]          [,5] #> [1,] -9.000000e-01  0.0 2.644003e-16  8.487282e-16 -1.057634e-15 #> [2,]  1.886404e-31 -0.9 0.000000e+00 -2.614948e-16  3.228331e-16 #>  #>  alg1(t1[],c(2,2)) #> $orders #> [1] 2 2 #>  #> $be #>      [,1] [,2]      [,3] #> [1,]    1 0.81 0.0000000 #> [2,]    1 0.90 0.6689647 #>  #> $fv #>      [,1]   [,2]      [,3] #> [1,]    1 0.3439 0.3439000 #> [2,]    1 0.1900 0.1049724 #>  #> $bv #>      [,1]   [,2] [,3] #> [1,]    1 0.1900 0.19 #> [2,]    1 0.3439 0.19 #>  #> $af #> $af[[1]] #>       [,1] #> [1,] -0.81 #> [2,] -0.90 #>  #> $af[[2]] #>            [,1]       [,2] #> [1,] -0.8100000  0.0000000 #> [2,] -0.4972376 -0.4972376 #>  #>  #> $ab #> $ab[[1]] #>       [,1] #> [1,] -0.90 #> [2,] -0.81 #>  #> $ab[[2]] #>      [,1] [,2] #> [1,] -0.9  0.0 #> [2,]  0.0 -0.9 #>  #>  alg1(t1[],c(2,3)) #> $orders #> [1] 2 3 #>  #> $be #>      [,1] [,2]      [,3] [,4] #> [1,]    1 0.81 0.0000000    0 #> [2,]    1 0.90 0.6689647    0 #>  #> $fv #>      [,1]   [,2]      [,3]      [,4] #> [1,]    1 0.3439 0.3439000 0.3439000 #> [2,]    1 0.1900 0.1049724 0.1049724 #>  #> $bv #>      [,1]   [,2] [,3] [,4] #> [1,]    1 0.1900 0.19 0.19 #> [2,]    1 0.3439 0.19 0.19 #>  #> $af #> $af[[1]] #>       [,1] #> [1,] -0.81 #> [2,] -0.90 #>  #> $af[[2]] #>            [,1]       [,2] #> [1,] -0.8100000  0.0000000 #> [2,] -0.4972376 -0.4972376 #>  #> $af[[3]] #>            [,1]       [,2] [,3] #> [1,] -0.8100000  0.0000000    0 #> [2,] -0.4972376 -0.4972376    0 #>  #>  #> $ab #> $ab[[1]] #>       [,1] #> [1,] -0.90 #> [2,] -0.81 #>  #> $ab[[2]] #>      [,1] [,2] #> [1,] -0.9  0.0 #> [2,]  0.0 -0.9 #>  #> $ab[[3]] #>      [,1] [,2] [,3] #> [1,] -0.9  0.0    0 #> [2,]  0.0 -0.9    0 #>  #>  alg1(t1[],c(3,3)) #> $orders #> [1] 3 3 #>  #> $be #>      [,1] [,2]      [,3] [,4] #> [1,]    1 0.81 0.0000000    0 #> [2,]    1 0.90 0.6689647    0 #>  #> $fv #>      [,1]   [,2]      [,3]      [,4] #> [1,]    1 0.3439 0.3439000 0.3439000 #> [2,]    1 0.1900 0.1049724 0.1049724 #>  #> $bv #>      [,1]   [,2] [,3] [,4] #> [1,]    1 0.1900 0.19 0.19 #> [2,]    1 0.3439 0.19 0.19 #>  #> $af #> $af[[1]] #>       [,1] #> [1,] -0.81 #> [2,] -0.90 #>  #> $af[[2]] #>            [,1]       [,2] #> [1,] -0.8100000  0.0000000 #> [2,] -0.4972376 -0.4972376 #>  #> $af[[3]] #>            [,1]       [,2] [,3] #> [1,] -0.8100000  0.0000000    0 #> [2,] -0.4972376 -0.4972376    0 #>  #>  #> $ab #> $ab[[1]] #>       [,1] #> [1,] -0.90 #> [2,] -0.81 #>  #> $ab[[2]] #>      [,1] [,2] #> [1,] -0.9  0.0 #> [2,]  0.0 -0.9 #>  #> $ab[[3]] #>      [,1] [,2] [,3] #> [1,] -0.9  0.0    0 #> [2,]  0.0 -0.9    0 #>  #>  alg1(t1[],c(4,4)) #> $orders #> [1] 4 4 #>  #> $be #>      [,1] [,2]      [,3] [,4]          [,5] #> [1,]    1 0.81 0.0000000    0 -4.343275e-16 #> [2,]    1 0.90 0.6689647    0  0.000000e+00 #>  #> $fv #>      [,1]   [,2]      [,3]      [,4]      [,5] #> [1,]    1 0.3439 0.3439000 0.3439000 0.3439000 #> [2,]    1 0.1900 0.1049724 0.1049724 0.1049724 #>  #> $bv #>      [,1]   [,2] [,3] [,4] [,5] #> [1,]    1 0.1900 0.19 0.19 0.19 #> [2,]    1 0.3439 0.19 0.19 0.19 #>  #> $af #> $af[[1]] #>       [,1] #> [1,] -0.81 #> [2,] -0.90 #>  #> $af[[2]] #>            [,1]       [,2] #> [1,] -0.8100000  0.0000000 #> [2,] -0.4972376 -0.4972376 #>  #> $af[[3]] #>            [,1]       [,2] [,3] #> [1,] -0.8100000  0.0000000    0 #> [2,] -0.4972376 -0.4972376    0 #>  #> $af[[4]] #>            [,1]       [,2]          [,3]         [,4] #> [1,] -0.8100000  0.0000000 -5.258951e-16 5.843279e-16 #> [2,] -0.4972376 -0.4972376  0.000000e+00 0.000000e+00 #>  #>  #> $ab #> $ab[[1]] #>       [,1] #> [1,] -0.90 #> [2,] -0.81 #>  #> $ab[[2]] #>      [,1] [,2] #> [1,] -0.9  0.0 #> [2,]  0.0 -0.9 #>  #> $ab[[3]] #>      [,1] [,2] [,3] #> [1,] -0.9  0.0    0 #> [2,]  0.0 -0.9    0 #>  #> $ab[[4]] #>      [,1] [,2]          [,3]         [,4] #> [1,] -0.9  0.0 -2.614948e-16 3.228331e-16 #> [2,]  0.0 -0.9  0.000000e+00 0.000000e+00 #>  #>  alg1(t1[],c(5,5)) #> $orders #> [1] 5 5 #>  #> $be #>      [,1] [,2]      [,3] [,4]          [,5]          [,6] #> [1,]    1 0.81 0.0000000    0 -4.343275e-16 -4.343275e-16 #> [2,]    1 0.90 0.6689647    0  0.000000e+00  7.861328e-16 #>  #> $fv #>      [,1]   [,2]      [,3]      [,4]      [,5]      [,6] #> [1,]    1 0.3439 0.3439000 0.3439000 0.3439000 0.3439000 #> [2,]    1 0.1900 0.1049724 0.1049724 0.1049724 0.1049724 #>  #> $bv #>      [,1]   [,2] [,3] [,4] [,5] [,6] #> [1,]    1 0.1900 0.19 0.19 0.19 0.19 #> [2,]    1 0.3439 0.19 0.19 0.19 0.19 #>  #> $af #> $af[[1]] #>       [,1] #> [1,] -0.81 #> [2,] -0.90 #>  #> $af[[2]] #>            [,1]       [,2] #> [1,] -0.8100000  0.0000000 #> [2,] -0.4972376 -0.4972376 #>  #> $af[[3]] #>            [,1]       [,2] [,3] #> [1,] -0.8100000  0.0000000    0 #> [2,] -0.4972376 -0.4972376    0 #>  #> $af[[4]] #>            [,1]       [,2]          [,3]         [,4] #> [1,] -0.8100000  0.0000000 -5.258951e-16 5.843279e-16 #> [2,] -0.4972376 -0.4972376  0.000000e+00 0.000000e+00 #>  #> $af[[5]] #>            [,1]       [,2]         [,3]         [,4]          [,5] #> [1,] -0.8100000  0.0000000 -1.05179e-15 5.843279e-16  5.843279e-16 #> [2,] -0.4972376 -0.4972376  0.00000e+00 5.258951e-16 -5.843279e-16 #>  #>  #> $ab #> $ab[[1]] #>       [,1] #> [1,] -0.90 #> [2,] -0.81 #>  #> $ab[[2]] #>      [,1] [,2] #> [1,] -0.9  0.0 #> [2,]  0.0 -0.9 #>  #> $ab[[3]] #>      [,1] [,2] [,3] #> [1,] -0.9  0.0    0 #> [2,]  0.0 -0.9    0 #>  #> $ab[[4]] #>      [,1] [,2]          [,3]         [,4] #> [1,] -0.9  0.0 -2.614948e-16 3.228331e-16 #> [2,]  0.0 -0.9  0.000000e+00 0.000000e+00 #>  #> $ab[[5]] #>               [,1] [,2]         [,3]          [,4]          [,5] #> [1,] -9.000000e-01  0.0 2.644003e-16  8.487282e-16 -1.057634e-15 #> [2,]  1.886404e-31 -0.9 0.000000e+00 -2.614948e-16  3.228331e-16 #>  #>"},{"path":"https://geobosh.github.io/pcts/reference/pcalg1util.html","id":null,"dir":"Reference","previous_headings":"","what":"Give partial periodic autocorrelations or other partial prediction\n  quantities for a pcAcvf object. — pcalg1util","title":"Give partial periodic autocorrelations or other partial prediction\n  quantities for a pcAcvf object. — pcalg1util","text":"Give partial periodic autocorrelations partial prediction   quantities pcAcvf object.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcalg1util.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Give partial periodic autocorrelations or other partial prediction\n  quantities for a pcAcvf object. — pcalg1util","text":"","code":"alg1util(x, s, at0 = 1)"},{"path":"https://geobosh.github.io/pcts/reference/pcalg1util.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Give partial periodic autocorrelations or other partial prediction\n  quantities for a pcAcvf object. — pcalg1util","text":"x object class inheriting     pc.Model.WeaklyStat s required quantity, name one elements     list returned alg1. at0 identical \"var\", replace elements     result lag zero 1, see `Details'.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcalg1util.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Give partial periodic autocorrelations or other partial prediction\n  quantities for a pcAcvf object. — pcalg1util","text":"function wrapper alg1(). calls alg1,   computations returns requested element object   class slMatrix.  model order set maximal lag   avialable x, at0 character string \"var\", lag zero values   result set lag zero autocovariances, otherwise   set 1.   mainly relevant periodic partial autocorrelations   (s=\"\"), since setting at0=\"var\" ensures   one one correspondence autocovariances.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcalg1util.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Give partial periodic autocorrelations or other partial prediction\n  quantities for a pcAcvf object. — pcalg1util","text":"requested quantity object type slMatrix","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcalg1util.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Give partial periodic autocorrelations or other partial prediction\n  quantities for a pcAcvf object. — pcalg1util","text":"Lambert-Lacroix S (2000). ``periodic autoregressive process estimation .''  IEEE Transactions Signal Processing, 48( 6 ), pp. 1800-1803. Lambert-Lacroix S (2005). `` Extension autocovariance coefficients sequence periodically correlated processes.'' Journal Time Series Analysis, 26(6), pp. 423-435.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcalg1util.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Give partial periodic autocorrelations or other partial prediction\n  quantities for a pcAcvf object. — pcalg1util","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/pcalg1util.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Give partial periodic autocorrelations or other partial prediction\n  quantities for a pcAcvf object. — pcalg1util","text":"","code":"r1 <- rbind(c(1,0.81,0.729),c(1,0.90,0.900))  # example of Lambert-Lacroix data(ex1f) pc3 <- slMatrix(period=2,maxlag=5,f=ex1f,type=\"tt\") res0p2 <- alg1(pc3[],c(0,2)) res1p2 <- alg1(pc3[],c(1,2)) res3p3 <- alg1(pc3[],c(3,3))"},{"path":"https://geobosh.github.io/pcts/reference/pcarma_solve.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions to compute various characteristics of a PCARMA model — pcarma_solve","title":"Functions to compute various characteristics of a PCARMA model — pcarma_solve","text":"Given PCARMA model, create function computing autocovariances   coefficients corresponding infinite moving average   representation prepare linear system whose solution provides   first autocovariances model.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcarma_solve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions to compute various characteristics of a PCARMA model — pcarma_solve","text":"","code":"pcarma_acvf_lazy(phi, theta, sigma2, p, q, period, maxlag = 100) pcarma_h_lazy(phi, theta, p, q, period, maxlag = 200) pcarma_acvf_system(phi, theta, sigma2, p, q, period) pcarma_param_system(acf, h, sigma2, p, q, period) pcarma_h(h, na = NA)"},{"path":"https://geobosh.github.io/pcts/reference/pcarma_solve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions to compute various characteristics of a PCARMA model — pcarma_solve","text":"phi autoregression parameters, object class \"slMatrix\" theta moving average parameters, object class \"slMatrix\" sigma2 innovation variances, object class     \"PeriodicVector\"  vector size period, Details. p (maximal) autoregression order autoregression orders. q (maximal) moving average order moving average orders. period number seasons epoch maxlag maximal lag result stored internally. acf autocovariance function, object class pcAcvf,     slMatrix, similar h pcarma_param_system,     h(t,k)  expected return coefficient     \\(h_{t,k}\\). h usually created     pcarma_h_lazy.     pcarma_h,  matrix h(t,) coefficients. na used currently, controls large lags.","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/pcarma_solve.html","id":"compute-acvf-from-parameters","dir":"Reference","previous_headings":"","what":"Compute acvf from parameters","title":"Functions to compute various characteristics of a PCARMA model — pcarma_solve","text":"pcarma_acvf_lazy creates function compute (    demand) values acf recursive formula. Computed values     stored internally lags maxlag.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcarma_solve.html","id":"system-for-acvf-from-parameters","dir":"Reference","previous_headings":"","what":"System for acvf from parameters","title":"Functions to compute various characteristics of a PCARMA model — pcarma_solve","text":"pcarma_acvf_system forms linear system calculation     autocovariances parameters pc-arma model.      argument theta used \\(q=0\\) phi     used \\(p=0\\).","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcarma_solve.html","id":"system-for-parameters-from-acvf","dir":"Reference","previous_headings":"","what":"System for parameters from acvf","title":"Functions to compute various characteristics of a PCARMA model — pcarma_solve","text":"pcarma_param_system takes     periodic autocovariances pc-arma model computes     matrix vector representing linear system whose solution     provides parameters model. Scalar p specifies autoregression order     season, similarly q.  p q may     vectors length period specifying order season     individually. latter case solution system may     proper model , , autocovariances may     ones used ! See references details. class acf required one     explicitly listed , understand indexing     conventions, similarly sigma2. pure autoregression, \\(q=0\\), arguments h     sigma2 ignored. TODO: add sigma2 (supplied)     returned list?","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcarma_solve.html","id":"compute-h-from-parameters","dir":"Reference","previous_headings":"","what":"Compute h from parameters","title":"Functions to compute various characteristics of a PCARMA model — pcarma_solve","text":"pcarma_h_lazy: h(t,) coefficients infinite     moving average representation pc.arma model. calculations     use formula (4.4) paper (elsewhere) internal storage     (slMatrix) calculated results (<maxlag) recursive     calls . , necessary compute h(t,)     particular order.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcarma_solve.html","id":"infinite-ma-coefficients-h-","dir":"Reference","previous_headings":"","what":"Infinite MA coefficients(h)","title":"Functions to compute various characteristics of a PCARMA model — pcarma_solve","text":"pcarma_h Function create function lazy computation     h(t,) pc.arma models Takes matrix h(t,) coefficeints returns function     calculates h(t,) paper xxx. returned value can used     way pcarma_h_lazy.","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/pcarma_solve.html","id":"for-pcarma-acvf-lazy","dir":"Reference","previous_headings":"","what":"for pcarma_acvf_lazy","title":"Functions to compute various characteristics of a PCARMA model — pcarma_solve","text":"function taking two arguments t k     scalar t k call f(t,k) return     EX(t)X(t-k). either arguments vector,     f(t,k) returns matrix size (length(t),length(k))     containing respective autocovariances.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcarma_solve.html","id":"for-pcarma-h-lazy","dir":"Reference","previous_headings":"","what":"for pcarma_h_lazy","title":"Functions to compute various characteristics of a PCARMA model — pcarma_solve","text":"function, say h. calls h, arguments     scalars h(t,) returns $h_t,$. least one     arguments vector matrix values $h$ returned.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcarma_solve.html","id":"for-pcarma-acvf-system","dir":"Reference","previous_headings":"","what":"for pcarma_acvf_system","title":"Functions to compute various characteristics of a PCARMA model — pcarma_solve","text":"list two components representing linear system: \t\\((p+1)\\mbox{period}\\times(p+1)\\mbox{period}\\) \tmatrix system, object class \"matrix\". b right-hand side system,  vector length \t\\((p+1)\\mbox{period}\\), object class \"vector\". \\(^{-1}b\\) can used get vector     autocovariances following order (d period, p     maximal AR order):     $$K(1,0),...,K(d,0), K(1,1),...,K(d,1),...,K(1,p),...,K(d,p).$$","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcarma_solve.html","id":"for-pcarma-param-system","dir":"Reference","previous_headings":"","what":"for pcarma_param_system","title":"Functions to compute various characteristics of a PCARMA model — pcarma_solve","text":"list components representing linear system AR     MA orders: matrix system b right-hand side system p AR order q MA order \\(^{-1}b\\) return vector parameters     pc-arma model: parameters first season, followed     parameters second seasons . season     parameters following order (s current season, d     period, \\(p[s]\\) \\(q[s]\\) corresponding AR     MA orders):     $$       \\sigma^2(s), \\phi(s,1),...,\\phi(s,p[s]),\\theta(s,1),...,\\theta(s,q[s]).     $$","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcarma_solve.html","id":"for-pcarma-h","dir":"Reference","previous_headings":"","what":"for pcarma_h","title":"Functions to compute various characteristics of a PCARMA model — pcarma_solve","text":"function, say h. calls h, arguments     scalars h(t,) returns $h_t,$. least one     arguments vector matrix values $h$ returned.     Analogous pcarma_h_lazy.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcarma_solve.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Functions to compute various characteristics of a PCARMA model — pcarma_solve","text":"Boshnakov GN (1996). “Recursive computation parameters periodic autoregressive moving-average processes.” J. Time Ser. Anal., 17(4), 333--349. ISSN 0143-9782, doi: 10.1111/j.1467-9892.1996.tb00281.x .","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcarma_solve.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Functions to compute various characteristics of a PCARMA model — pcarma_solve","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcarma_solve.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Functions to compute various characteristics of a PCARMA model — pcarma_solve","text":"pcarma_acvf_lazy: recursion may become extremely slow lags greater   maxlag. large lags likely needed argument   maxlag used increase internal storage.   default maxlag currently 100.","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/pcarma_solve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functions to compute various characteristics of a PCARMA model — pcarma_solve","text":"","code":"## periodic acf of Lambert-Lacroix data(ex1f) (pc3 <- slMatrix(period = 2, maxlag = 5, f = ex1f, type = \"tt\")) #> An object of class \"slMatrix\" #> Slot \"m\": #>       lag #> season 0    1     2     3      4      5 #>      1 1 0.81 0.729 0.729 0.6561 0.6561 #>      2 1 0.90 0.900 0.810 0.8100 0.7290 #>  ## find the parameters s3 <- pcarma_param_system(pc3, NULL, NULL, 2, 0, 2) coef3 <- solve(s3$A, s3$b) pcarma_unvec(list(p = 2, q = 0, period = 2, param = coef3)) #> $p #> [1] 2 2 #>  #> $q #> [1] 0 0 #>  #> $si2 #> [1] 0.3439000 0.1049724 #>  #> $phi #>           [,1]      [,2] #> [1,] 0.8100000 0.0000000 #> [2,] 0.4972376 0.4972376 #>   ## actually, the model is PAR(1,2): s3a <- pcarma_param_system(pc3, NULL, NULL, c(1, 2), 0, 2) coef3a <- solve(s3a$A, s3a$b) pcarma_unvec(list(p = c(1,2), q = 0, period = 2, param = coef3a)) #> $p #> [1] 1 2 #>  #> $q #> [1] 0 0 #>  #> $si2 #> [1] 0.3439000 0.1049724 #>  #> $phi #>           [,1]      [,2] #> [1,] 0.8100000 0.0000000 #> [2,] 0.4972376 0.4972376 #>    ## prepare test parameters for a PAR(2) model with period=2. ##   (rounded to 6 digits from the above example. m1 <- rbind(c(1, 0.81, 0), c(1, 0.4972376, 0.4972376) ) m2 <- rbind(c(1, 0, 0), c(1, 0, 0) ) testphi <- slMatrix(init = m1) testtheta <- slMatrix(init = m2) si2 <- PeriodicVector(c(0.3439000, 0.1049724)) #     # or si2 <- c(1,1)  ## acf from parameters myf <- pcarma_acvf_lazy(testphi, testtheta, si2, 2, 0, 2, maxlag = 110) myf(1,4)        # compute a value #> [1] 0.6561005 a1 <- myf(1:2,0:9)    # get a matrix of values  ## h from parameters h <- pcarma_h_lazy(testphi, testtheta, 2, 2, 2) h(3, 2)           # a scalar #> [1] 0.4027625 h1 <- h(1:2, 1:4) # a matrix  ## compute acvf from parameters ( acfsys <- pcarma_acvf_system(testphi, testtheta, si2, 2, 0, 2) ) #> $A #>            [,1]       [,2]       [,3]       [,4] [,5]       [,6] #> [1,]  1.0000000  0.0000000 -0.8100000  0.0000000    0  0.0000000 #> [2,]  0.0000000  1.0000000  0.0000000 -0.4972376    0 -0.4972376 #> [3,]  0.0000000 -0.8100000  1.0000000  0.0000000    0  0.0000000 #> [4,] -0.4972376  0.0000000 -0.4972376  1.0000000    0  0.0000000 #> [5,]  0.0000000  0.0000000  0.0000000 -0.8100000    1  0.0000000 #> [6,]  0.0000000 -0.4972376 -0.4972376  0.0000000    0  1.0000000 #>  #> $b #> [1] 0.3439000 0.1049724 0.0000000 0.0000000 0.0000000 0.0000000 #>  acfvec <- solve(acfsys$A, acfsys$b) acf1 <- slMatrix(acfvec, period = 2)  ## TODO: examples wirh q != 0"},{"path":"https://geobosh.github.io/pcts/reference/pclsdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit PAR models using least squares — pclsdf","title":"Fit PAR models using least squares — pclsdf","text":"Fit PAR models using least squares. model may contain   intercepts linear trends, seasonal non-seasonal.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pclsdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit PAR models using least squares — pclsdf","text":"","code":"pclsdf(x, d, lags = integer(0), sintercept = TRUE, sslope = FALSE,        intercept = FALSE, slope = FALSE, xreg, contrasts = NULL,        seasonof1st = NULL, coefonly = FALSE)"},{"path":"https://geobosh.github.io/pcts/reference/pclsdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit PAR models using least squares — pclsdf","text":"x time series, numeric vector. d period, integer. lags integer vector, typically 1:p, p     order autoregression. lags used     seasons. sintercept TRUE include seasonal intercepts. sslope TRUE include seasonal linear trend. intercept TRUE include non-seasonal intercept. slope TRUE include non-seasonal linear trend. xreg additional regressors, used currently.  contrasts contrasts use seasons factor variable. seasonof1st season first observation time series,     see Details. coefonly TRUE, return parameters fitted     model, otherwise include also object returned lm.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pclsdf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit PAR models using least squares — pclsdf","text":"function fits PAR models method least squares.   Seasonal intercepts included default. Non-seasonal intercepts   available, well seasonal non-seasonal linear trend.   Separate arguments provided, combination seasonal   non-seasonal intercepts slopes can specified. coefonly TRUE, pclsdf returns estimated   parameters, otherwise includes additional statistical information,   see section Note current details.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pclsdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit PAR models using least squares — pclsdf","text":"list components listed . components present   included model specification. par PAR coefficients, matrix row season. sintercept (specified) seasonal intercepts, numeric vector. sigma2hat innovation variances. formula.char formula used call lm,     character string. fit (coefonly = FALSE) fitted object obtained     lm.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pclsdf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit PAR models using least squares — pclsdf","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/pcts/reference/pclsdf.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Fit PAR models using least squares — pclsdf","text":"Currently, pclsdf prepares model formula according   specification calls lm fitting. Component \"fit\"   result (available coefonly = FALSE) contains   raw fitted object returned lm. Statistical inference based   object , general, justified correlated   data. todo: currently parameters returned via   fitted object lm.","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/pclsdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit PAR models using least squares — pclsdf","text":"","code":"## data(dataFranses1996) cu <- pcts(dataFranses1996[ , \"CanadaUnemployment\"]) cu <- window(cu, start = availStart(cu), end = availEnd(cu))  pclsdf(cu, 4, 1:2, sintercept = TRUE) #> $par #>           [,1]       [,2] #> [1,] 1.6727479 -0.6086116 #> [2,] 0.6076993  0.4000458 #> [3,] 1.6703750 -0.7011981 #> [4,] 1.1580936 -0.2012461 #>  #> $sintercept #>   Season1   Season2   Season3   Season4  #> 103.87879 -27.91949  27.53365  47.18863  #>  #> $sigma2hat #> [1] 1917.9150 3967.1090  899.7107 1314.2189 #>  #> $formula.char #> [1] \"x ~ -1 + Season   + Lagged_1:Season + Lagged_2:Season\" #>  #> $fit #>  #> Call: #> lm(formula = fomodel, data = res, na.action = na.exclude) #>  #> Coefficients: #>          Season1           Season2           Season3           Season4   #>         103.8788          -27.9195           27.5336           47.1886   #> Season1:Lagged_1  Season2:Lagged_1  Season3:Lagged_1  Season4:Lagged_1   #>           1.6727            0.6077            1.6704            1.1581   #> Season1:Lagged_2  Season2:Lagged_2  Season3:Lagged_2  Season4:Lagged_2   #>          -0.6086            0.4000           -0.7012           -0.2012   #>  #>   pclsdf(austres, 4, lags = 1:3) #> $par #>          [,1]        [,2]        [,3] #> [1,] 1.528572 -0.26968659 -0.25942556 #> [2,] 1.335708  0.06294708 -0.39888301 #> [3,] 1.257598  0.34822562 -0.60613046 #> [4,] 1.650766 -0.63662585 -0.01077079 #>  #> $sintercept #>   Season1   Season2   Season3   Season4  #>  11.08871  14.87099  18.57018 -32.42783  #>  #> $sigma2hat #> [1]  36.39442 105.19204  33.77605  96.32893 #>  #> $formula.char #> [1] \"x ~ -1 + Season   + Lagged_1:Season + Lagged_2:Season + Lagged_3:Season\" #>  #> $fit #>  #> Call: #> lm(formula = fomodel, data = res, na.action = na.exclude) #>  #> Coefficients: #>          Season1           Season2           Season3           Season4   #>         11.08871          14.87099          18.57018         -32.42783   #> Season1:Lagged_1  Season2:Lagged_1  Season3:Lagged_1  Season4:Lagged_1   #>          1.52857           1.33571           1.25760           1.65077   #> Season1:Lagged_2  Season2:Lagged_2  Season3:Lagged_2  Season4:Lagged_2   #>         -0.26969           0.06295           0.34823          -0.63663   #> Season1:Lagged_3  Season2:Lagged_3  Season3:Lagged_3  Season4:Lagged_3   #>         -0.25943          -0.39888          -0.60613          -0.01077   #>  #>  pclsdf(austres, 4, lags = 1:3, sintercept = TRUE) #> $par #>          [,1]        [,2]        [,3] #> [1,] 1.528572 -0.26968659 -0.25942556 #> [2,] 1.335708  0.06294708 -0.39888301 #> [3,] 1.257598  0.34822562 -0.60613046 #> [4,] 1.650766 -0.63662585 -0.01077079 #>  #> $sintercept #>   Season1   Season2   Season3   Season4  #>  11.08871  14.87099  18.57018 -32.42783  #>  #> $sigma2hat #> [1]  36.39442 105.19204  33.77605  96.32893 #>  #> $formula.char #> [1] \"x ~ -1 + Season   + Lagged_1:Season + Lagged_2:Season + Lagged_3:Season\" #>  #> $fit #>  #> Call: #> lm(formula = fomodel, data = res, na.action = na.exclude) #>  #> Coefficients: #>          Season1           Season2           Season3           Season4   #>         11.08871          14.87099          18.57018         -32.42783   #> Season1:Lagged_1  Season2:Lagged_1  Season3:Lagged_1  Season4:Lagged_1   #>          1.52857           1.33571           1.25760           1.65077   #> Season1:Lagged_2  Season2:Lagged_2  Season3:Lagged_2  Season4:Lagged_2   #>         -0.26969           0.06295           0.34823          -0.63663   #> Season1:Lagged_3  Season2:Lagged_3  Season3:Lagged_3  Season4:Lagged_3   #>         -0.25943          -0.39888          -0.60613          -0.01077   #>  #>  pclsdf(austres, 4, lags = 1:3, sintercept = TRUE, sslope = TRUE) #> $par #>          [,1]        [,2]       [,3] #> [1,] 1.370470  0.05946978 -0.4607858 #> [2,] 1.282184  0.10653624 -0.4132554 #> [3,] 1.291900  0.31313365 -0.5901552 #> [4,] 1.859568 -1.01171474  0.1055395 #>  #> $sintercept #>   Season1   Season2   Season3   Season4  #>  395.6552  327.4550 -176.4203  601.7557  #>  #> $sslope #> Season1:TimeIndex Season2:TimeIndex Season3:TimeIndex Season4:TimeIndex  #>         1.6136930         1.2845380        -0.8039129         2.6183438  #>  #> $sigma2hat #> [1] 28.99261 98.63279 31.33658 71.72827 #>  #> $formula.char #> [1] \"x ~ -1 + Season  + TimeIndex:Season + Lagged_1:Season + Lagged_2:Season + Lagged_3:Season\" #>  #> $fit #>  #> Call: #> lm(formula = fomodel, data = res, na.action = na.exclude) #>  #> Coefficients: #>           Season1            Season2            Season3            Season4   #>         395.65518          327.45502         -176.42026          601.75566   #> Season1:TimeIndex  Season2:TimeIndex  Season3:TimeIndex  Season4:TimeIndex   #>           1.61369            1.28454           -0.80391            2.61834   #>  Season1:Lagged_1   Season2:Lagged_1   Season3:Lagged_1   Season4:Lagged_1   #>           1.37047            1.28218            1.29190            1.85957   #>  Season1:Lagged_2   Season2:Lagged_2   Season3:Lagged_2   Season4:Lagged_2   #>           0.05947            0.10654            0.31313           -1.01171   #>  Season1:Lagged_3   Season2:Lagged_3   Season3:Lagged_3   Season4:Lagged_3   #>          -0.46079           -0.41326           -0.59016            0.10554   #>  #>   x <- rep(1:4,10) pclsdf(x, 4, lags = 1:3, sintercept = TRUE, sslope = TRUE) #> $par #>      [,1] [,2] [,3] #> [1,]   NA   NA   NA #> [2,]   NA   NA   NA #> [3,]   NA   NA   NA #> [4,]   NA   NA   NA #>  #> $sintercept #> Season1 Season2 Season3 Season4  #>       1       2       3       4  #>  #> $sslope #> Season1:TimeIndex Season2:TimeIndex Season3:TimeIndex Season4:TimeIndex  #>      8.816396e-18     -1.469171e-18      2.383641e-17      5.209739e-17  #>  #> $sigma2hat #> [1] 1.934585e-32 5.372172e-34 1.414124e-31 9.553764e-31 #>  #> $formula.char #> [1] \"x ~ -1 + Season  + TimeIndex:Season + Lagged_1:Season + Lagged_2:Season + Lagged_3:Season\" #>  #> $fit #>  #> Call: #> lm(formula = fomodel, data = res, na.action = na.exclude) #>  #> Coefficients: #>           Season1            Season2            Season3            Season4   #>         1.000e+00          2.000e+00          3.000e+00          4.000e+00   #> Season1:TimeIndex  Season2:TimeIndex  Season3:TimeIndex  Season4:TimeIndex   #>         8.816e-18         -1.469e-18          2.384e-17          5.210e-17   #>  Season1:Lagged_1   Season2:Lagged_1   Season3:Lagged_1   Season4:Lagged_1   #>                NA                 NA                 NA                 NA   #>  Season1:Lagged_2   Season2:Lagged_2   Season3:Lagged_2   Season4:Lagged_2   #>                NA                 NA                 NA                 NA   #>  Season1:Lagged_3   Season2:Lagged_3   Season3:Lagged_3   Season4:Lagged_3   #>                NA                 NA                 NA                 NA   #>  #>   ## this is for the version when contrasts arg. was passed on directly to lm. ## tmp1 <- pclsdf(austres, 4, lags = 1, sintercept = FALSE, sslope = TRUE, ##                contrasts = list(Season = \"contr.sum\" ))"},{"path":"https://geobosh.github.io/pcts/reference/pclspiar.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a periodically integrated autoregressive model — pclspiar","title":"Fit a periodically integrated autoregressive model — pclspiar","text":"Fit periodically integrated autoregressive model.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pclspiar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a periodically integrated autoregressive model — pclspiar","text":"","code":"pclspiar(x, d, p, icoef = NULL, parcoef = NULL, sintercept = FALSE,          seasonof1st = 1, weights = TRUE, itol = 1e-07, maxniter = 1000)"},{"path":"https://geobosh.github.io/pcts/reference/pclspiar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a periodically integrated autoregressive model — pclspiar","text":"x time series. d period. p order model, positive integer, see Details. icoef initial values periodic integration coefficients. missing     NULL suitable values computed. parcoef used currently. sintercept TRUE include seasonal intercepts. seasonof1st season first observation. weights TRUE, use periodic weights nonlinear least     squares, see Details. itol threshold value stopping criterion. maxniter maximum number iterations.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pclspiar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit a periodically integrated autoregressive model — pclspiar","text":"function fits periodically integrated autoregressive model   using non-linear least squares. order integration one   order periodically correlated part p - 1. ,   p must greater equal one. weights = TRUE non-linear optimisation done   weights inversely proportional innovation variances   seasons, otherwise unweighted sum squared residuals   minimised.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pclspiar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a periodically integrated autoregressive model — pclspiar","text":"list currently containing following elements: icoef coefficients periodic integration filter. parcoef coefficients PAR filter. sintercept seasonal intercepts. sigma2hat innovation variances.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pclspiar.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit a periodically integrated autoregressive model — pclspiar","text":"Franses PH (1996). Periodicity Stochastic Trends Economic Time Series. Oxford University Press Inc., New York. Franses PH, Paap R (2004). Periodic Time Series Models. Oxford University Press Inc., New York. Boshnakov GN, Iqelan BM (2009). “Generation time series models given spectral properties.” J. Time Series Anal., 30(3), 349--368. ISSN 0143-9782, doi: 10.1111/j.1467-9892.2009.00617.x .","code":""},{"path":"https://geobosh.github.io/pcts/reference/pclspiar.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit a periodically integrated autoregressive model — pclspiar","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/pclspiar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a periodically integrated autoregressive model — pclspiar","text":"","code":"## see also the examples for fitPM() ts1 <- window(dataFranses1996[ , \"CanadaUnemployment\"],               start = c(1960, 1), end = c(1987, 4)) pclspiar(ts1, 4, p = 1, sintercept = TRUE) #> $icoef #>    alpha1    alpha2    alpha3    alpha4  #> 1.0550271 0.9975805 0.9886708 0.9610295  #>  #> $parcoef #>      #> [1,] #> [2,] #> [3,] #> [4,] #>  #> $sintercept #>   Season1   Season2   Season3   Season4  #> 116.64694 -83.39428 -46.15717  33.53077  #>  #> $sigma2hat #> [1] 2431.805 4378.808 3043.498 1441.109 #>  pclspiar(ts1, 4, p = 2, sintercept = TRUE) #> $icoef #>    alpha1    alpha2    alpha3    alpha4  #> 1.0397236 1.0179266 0.9852002 0.9590497  #>  #> $parcoef #>                        [,1] #> Season1:Lagged_1  0.6319228 #> Season2:Lagged_1 -0.4231896 #> Season3:Lagged_1  0.6888947 #> Season4:Lagged_1  0.2000132 #>  #> $sintercept #>   Season1   Season2   Season3   Season4  #> 102.95274 -43.53839  24.92487  43.56982  #>  #> $sigma2hat #> [1] 1918.2343 4059.6479  901.6721 1318.0657 #>"},{"path":"https://geobosh.github.io/pcts/reference/pcts-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated Functions in Package pcts — pcts-deprecated","title":"Deprecated Functions in Package pcts — pcts-deprecated","text":"functions marked removal provided temporarily   compatibility older versions package pcts . Use   recommended renamed new functions instead.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcts-deprecated.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Deprecated Functions in Package pcts — pcts-deprecated","text":"mCpar renamed sim_parCoef sim_arAcf renamed sim_parAcvf","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcts-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Create objects from periodic time series classes — pcts","title":"Create objects from periodic time series classes — pcts","text":"Create objects periodic time series classes.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcts-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create objects from periodic time series classes — pcts","text":"","code":"pcts(x, nseasons, start, ..., keep = FALSE)"},{"path":"https://geobosh.github.io/pcts/reference/pcts-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create objects from periodic time series classes — pcts","text":"x time series. nseasons number seasons. argument ignored methods.  start starting time time series, can (cycle,       season) pair object can converted datetime.  keep TRUE x class \"ts\",     \"mts\", \"zoo\", \"zooreg\", create periodic     object inheriting class.  ... arguments passed methods.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcts-methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create objects from periodic time series classes — pcts","text":"pcts creates periodic time series objects inheriting   \"PeriodicTimeSeries\". particular class depends arguments   x , cases, keep.  idea normal   use user care particular class. See section   ‘Methods’ details. also methods conversion   time series classes defined package pcts.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcts-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create objects from periodic time series classes — pcts","text":"object inheriting \"PeriodicTimeSeries\", defaults   \"PeriodicTS\" univariate \"PeriodicMTS\"   multivariate time series.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcts-methods.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create objects from periodic time series classes — pcts","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcts-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Create objects from periodic time series classes — pcts","text":"signature(x = \"numeric\", nseasons = \"missing\")  signature(x = \"numeric\", nseasons = \"numeric\")  signature(x = \"numeric\", nseasons = \"BasicCycle\") Creates object class \"PeriodicTS\", native class     univariate periodic time series package \"pcts\".  signature(x = \"matrix\", nseasons = \"missing\")  signature(x = \"matrix\", nseasons = \"numeric\")  signature(x = \"matrix\", nseasons = \"BasicCycle\") Creates object class \"PeriodicMTS\", native class     multivariate periodic time series package \"pcts\".  signature(x = \"data.frame\", nseasons = \"\") Currently just converts x matrix calls     pcts recursively. See methods x = \"matrix\"     signature. signature(x = \"ts\", nseasons = \"missing\")  signature(x = \"ts\", nseasons = \"numeric\") keep = TRUE creates object class     \"PeriodicTS_ts\", otherwise result     \"PeriodicTS\". number seasons taken     \"mts\" object.  signature(x = \"mts\", nseasons = \"missing\")  signature(x = \"mts\", nseasons = \"numeric\") keep = TRUE creates object class     \"PeriodicMTS_ts\", otherwise result     \"PeriodicMTS\". number seasons taken     \"ts\" object.  signature(x = \"xtsORzoo\", nseasons = \"missing\") x needs regular time series, possibly missing     values times (technically, zoo::.regular(x)     give TRUE). daily time series, cycle taken day     week subcycle , commonly Monday-Friday.     implementation method incomplete daily data     work described.","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/pcts-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create objects from periodic time series classes — pcts","text":"","code":"## convert a ts object, no need for further info pcts(AirPassengers, 12) #> An object of class \"PeriodicTS\" #> Slot \"cycle\": Start:  1949   January  #> Cycle:  MonthYearCycle  #> Number of seasons: 12  #>  #>       Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec #> Y1949 112 118 132 129 121 135 148 148 136 119 104 118 #> Y1950 115 126 141 135 125 149 170 170 158 133 114 140 #> Y1951 145 150 178 163 172 178 199 199 184 162 146 166 #> Y1952 171 180 193 181 183 218 230 242 209 191 172 194 #> Y1953 196 196 236 235 229 243 264 272 237 211 180 201 #> Y1954 204 188 235 227 234 264 302 293 259 229 203 229 #> Y1955 242 233 267 269 270 315 364 347 312 274 237 278 #> Y1956 284 277 317 313 318 374 413 405 355 306 271 306 #> Y1957 315 301 356 348 355 422 465 467 404 347 305 336 #> Y1958 340 318 362 348 363 435 491 505 404 359 310 337 #> Y1959 360 342 406 396 420 472 548 559 463 407 362 405 #> Y1960 417 391 419 461 472 535 622 606 508 461 390 432  ## numeric v24 <- rnorm(24) pcts(v24, nseasons = 4)          # generic seasons #> An object of class \"PeriodicTS\" #> Slot \"cycle\": Start:  1   Season_1  #> Cycle:  SimpleCycle  #> Number of seasons: 4  #>  #>            S1         S2          S3          S4 #> C1 -1.5083427 -1.4884361  0.05775262  0.62175028 #> C2  1.7438597 -1.3140566  0.18595510 -0.06824536 #> C3 -1.6101031  0.6300192  0.50235805 -0.57740109 #> C4  0.6509080  0.9526483  0.56817663 -0.01425659 #> C5 -0.9790117  0.3182775  0.42862311  0.40308890 #> C6 -0.6631246 -1.5719161 -0.08299631 -0.19889131 pcts(v24, nseasons = BuiltinCycle(4)) # Quarter/Year #> An object of class \"PeriodicTS\" #> Slot \"cycle\": Start:  1   Quarter_1  #> Cycle:  QuarterYearCycle  #> Number of seasons: 4  #>  #>            Q1         Q2          Q3          Q4 #> Y1 -1.5083427 -1.4884361  0.05775262  0.62175028 #> Y2  1.7438597 -1.3140566  0.18595510 -0.06824536 #> Y3 -1.6101031  0.6300192  0.50235805 -0.57740109 #> Y4  0.6509080  0.9526483  0.56817663 -0.01425659 #> Y5 -0.9790117  0.3182775  0.42862311  0.40308890 #> Y6 -0.6631246 -1.5719161 -0.08299631 -0.19889131 ts1 <- pcts(v24, nseasons = BuiltinCycle(4), c(2006, 1)) # Quarter/Year with dates  ## select subset of the seasons window(ts1, seasons = 3:4) #> An object of class \"PeriodicTS\" #> Slot \"cycle\": Start:  2006   Quarter_3  #> Cycle:  PartialCycle  #> Number of seasons: 2  #>  #>                Q3          Q4 #> Y2006  0.05775262  0.62175028 #> Y2007  0.18595510 -0.06824536 #> Y2008  0.50235805 -0.57740109 #> Y2009  0.56817663 -0.01425659 #> Y2010  0.42862311  0.40308890 #> Y2011 -0.08299631 -0.19889131  ## matrix, multivariate pcts m24 <- matrix(v24, ncol =3) colnames(m24) <- c(\"A\", \"B\", \"C\") pcts(m24, nseasons = 4)          # generic seasons #> An object of class \"PeriodicMTS\" #> Slot \"cycle\": Object from class 'SimpleCycle' #> Number of seasons: 4  #> Seasons: Season_1 Season_2 Season_3 Season_4  #> Abbreviated: S1 S2 S3 S4  #>  #>                A           B           C #> C1_1 -1.50834271 -1.61010312 -0.97901167 #> C1_2 -1.48843610  0.63001916  0.31827753 #> C1_3  0.05775262  0.50235805  0.42862311 #> C1_4  0.62175028 -0.57740109  0.40308890 #> C2_1  1.74385972  0.65090799 -0.66312465 #> C2_2 -1.31405662  0.95264830 -1.57191607 #> C2_3  0.18595510  0.56817663 -0.08299631 #> C2_4 -0.06824536 -0.01425659 -0.19889131 pcts(m24, nseasons = BuiltinCycle(4)) # Quarter/Year #> An object of class \"PeriodicMTS\" #> Slot \"cycle\": Object from built-in class 'QuarterYearCycle' #> Cycle start: Quarter_1  #>  #>                A           B           C #> Y1_1 -1.50834271 -1.61010312 -0.97901167 #> Y1_2 -1.48843610  0.63001916  0.31827753 #> Y1_3  0.05775262  0.50235805  0.42862311 #> Y1_4  0.62175028 -0.57740109  0.40308890 #> Y2_1  1.74385972  0.65090799 -0.66312465 #> Y2_2 -1.31405662  0.95264830 -1.57191607 #> Y2_3  0.18595510  0.56817663 -0.08299631 #> Y2_4 -0.06824536 -0.01425659 -0.19889131 mts1 <- pcts(m24, nseasons = BuiltinCycle(4), c(2006, 1)) # Quarter/Year with dates mts1 #> An object of class \"PeriodicMTS\" #> Slot \"cycle\": Object from built-in class 'QuarterYearCycle' #> Cycle start: Quarter_1  #>  #>                   A           B           C #> Y2006_1 -1.50834271 -1.61010312 -0.97901167 #> Y2006_2 -1.48843610  0.63001916  0.31827753 #> Y2006_3  0.05775262  0.50235805  0.42862311 #> Y2006_4  0.62175028 -0.57740109  0.40308890 #> Y2007_1  1.74385972  0.65090799 -0.66312465 #> Y2007_2 -1.31405662  0.95264830 -1.57191607 #> Y2007_3  0.18595510  0.56817663 -0.08299631 #> Y2007_4 -0.06824536 -0.01425659 -0.19889131  ## select subset of the seasons for mutivariate window(mts1, seasons = 3:4) #> An object of class \"PeriodicMTS\" #> Slot \"cycle\": Object from class 'PartialCycle' #>     partial cycle of 'QuarterYearCycle', seasons: 3, 4 #> Cycle start: Quarter_3  #>  #>                   A           B           C #> Y2006_1  0.05775262  0.50235805  0.42862311 #> Y2006_2  0.62175028 -0.57740109  0.40308890 #> Y2007_1  0.18595510  0.56817663 -0.08299631 #> Y2007_2 -0.06824536 -0.01425659 -0.19889131"},{"path":"https://geobosh.github.io/pcts/reference/pcts-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Periodically Correlated and Periodically Integrated Time Series — pcts-package","title":"Periodically Correlated and Periodically Integrated Time Series — pcts-package","text":"Classes methods modelling simulation     periodically correlated (PC) periodically integrated time     series.  Compute theoretical periodic autocovariances related     properties PC autoregressive moving average models. original     methods including Boshnakov & Iqelan (2009)     <doi:10.1111/j.1467-9892.2009.00617.x>, Boshnakov (1996)     <doi:10.1111/j.1467-9892.1996.tb00281.x>.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcts-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Periodically Correlated and Periodically Integrated Time Series — pcts-package","text":"underlying assumption observations made regular intervals, quarter, month, week, day --- represent data intervals --- intervals nested larger periods. pcts call larger period cycle parts seasons. Typical examples season-cycle timing months year, quarters year, days week (business week). number seasons cycle called frequency class \"ts\" base R. Cycles pcts keep number seasons (frequency) information, names seasons units seasons.  pcts number builtin cycle classes typical cases, well provision creation custom cycles fly.  See pcCycle BuiltinCycle ways create cycle objects, allSeasons examples. Periodic time series can created pcts, accepts input vectors, matrices time series objects base R packages, including zoo xts.  importing data, time information taken data attempt made guess periodicity frequency (time series objects set) analysis datetime stamps, present. pcts also arguments specifying number seasons cycle, well start datetime. main periodic time series classes pcts PeriodicTS PeriodicMTS, univariate multivariate time series, respectively.  Standard base-R time series functions can used directly, see example window, frequency, cycle, time, deltat, start, end,   boxplot, monthplot, na.trim (na.trim package zoo). Methods plot, summary, print, show, head, tail, base-R functions defined suitable.  Examples can found section Examples help pages corresponding functions, classes methods. naming conventions follows. Names classes generally consists one words. first letter word, capitalised.  first letter abbreviations models, ARMA, capitalised. Similarly generic functions first word capitalised. names PM stands 'periodic model' TS 'time series'. Significant portion code written 2005--2007. Many functions classes renamed conventions exported still considered subject change. autocovariances, autocorrelations, partialAutocorrelations others one-stop generic functions computation properties time series models. compute deduced type object. models compute theoretical quantities --- periodic non-periodic, scalar multivariate. time series compute corresponding sample counterparts.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcts-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Periodically Correlated and Periodically Integrated Time Series — pcts-package","text":"Georgi N. Boshnakov [aut, cre] Maintainer: Georgi N. Boshnakov <georgi.boshnakov@manchester.ac.uk>","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcts-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Periodically Correlated and Periodically Integrated Time Series — pcts-package","text":"Boshnakov GN (1994). “Periodically Correlated Sequences: Properties Recursions.” Research Report 1, Division Quality Technology Statistics, Luleo University, Sweden. Boshnakov GN (1996). “asymptotic covariance matrix multivariate serial correlations.” Stochastic Process. Appl., 65(2), 251--258. ISSN 0304-4149, doi: 10.1016/S0304-4149(96)00104-4 , https://doi.org/10.1016/S0304-4149(96)00104-4. Boshnakov GN (1996). “Recursive computation parameters periodic autoregressive moving-average processes.” J. Time Ser. Anal., 17(4), 333--349. ISSN 0143-9782, doi: 10.1111/j.1467-9892.1996.tb00281.x . Boshnakov GN (1997). “Periodically correlated solutions class stochastic difference equations.” Csiszar , Michaletzky G (eds.), Stochastic differential difference equations (Gyor, 1996), volume 23 Progr. Systems Control Theory, 1--9. Birkhauser Boston, Boston, MA. Boshnakov GN (2002). “Multi-companion matrices.” Linear Algebra Appl., 354, 53--83. ISSN 0024-3795, doi: 10.1016/S0024-3795(01)00475-X , https://doi.org/10.1016/S0024-3795(01)00475-X. Boshnakov GN, Boteva (1992). “algorithmfor computation theoretical autocovariances periodic autoregression process.” Varna. Boshnakov GN, Iqelan BM (2009). “Generation time series models given spectral properties.” J. Time Series Anal., 30(3), 349--368. ISSN 0143-9782, doi: 10.1111/j.1467-9892.2009.00617.x . Boshnakov GN, Iqelan BM (2012). “Maximum entropy models general lag patterns.” Journal Time Series Analysis, 33(1), 112--120. ISSN 1467-9892, doi: 10.1111/j.1467-9892.2011.00744.x . Boshnakov GN, Lambert-Lacroix S (2009). “Maximum entropy periodically correlated processes nonconsecutive autocovariance coefficients.” J. Time Series Anal., 30(5), 467--486. doi: 10.1111/j.1467-9892.2009.00619.x . Boshnakov GN, Lambert-Lacroix S (2011). pcme: Maximum entropy estimation periodically correlated time series. R package version 0.55, https://personalpages.manchester.ac.uk/staff/georgi.boshnakov/Rpackages/. Boshnakov GN, Lambert-Lacroix S (2012). “periodic Levinson-Durbin algorithm entropy maximization.” Computational Statistics \\& Data Analysis, 56, 15--24. ISSN 0167-9473, doi: 10.1016/j.csda.2011.07.001 , https://www.sciencedirect.com/science/article/pii/S0167947311002556. Boswijk HP, Franses PH (1996). “Unit roots periodic autoregressions.” Journal Time Series Analysis, 17(3), 221--245. Francq C, Roy R, Saidi (2011). “Asymptotic properties weighted least squares estimation weak parma models.” Journal Time Series Analysis, 32(6), 699--723. Franses PH (1996). Periodicity Stochastic Trends Economic Time Series. Oxford University Press Inc., New York. Franses PH, Paap R (2004). Periodic Time Series Models. Oxford University Press Inc., New York. Grolemund G, Wickham H (2011). “Dates Times Made Easy lubridate.” Journal Statistical Software, 40(3), 1--25. doi: 10.18637/jss.v040.i03 . Hipel KW, McLeod AI (1994). Time series modelling water resources environmental systems,  Developments water science; 45. London; Amsterdam: Elsevier. Lambert-Lacroix S (2000). “periodic autoregressive process estimation .”  IEEE Transactions Signal Processing, 48( 6 ), 1800-1803. Lambert-Lacroix S (2005). “ Extension autocovariance coefficients sequence periodically correlated processes.” Journal Time Series Analysis, 26(3), 423-435. Lancaster P, Tismenetsky M (1985). theory matrices, Second edition. Academic Press, New York. McLeod AI (1993). “Parsimony, model adequacy periodic correlation time series forecasting.” Internat. Statist. Rev., 61(3), 387-393. McLeod AI (1994). “Diagnostic checking periodic autoregression models application.” Journal time series analysis, 15(2), 221-233. Pagano M (1978). “periodic multiple autoregression.” Ann. Statist., 6, 1310-1317.","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/pcts-package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Periodically Correlated and Periodically Integrated Time Series — pcts-package","text":"","code":"data(dataFranses1996)  class(dataFranses1996) # [1] \"mts\"    \"ts\"     \"matrix\" #> [1] \"mts\"    \"ts\"     \"matrix\"  pcfr <- pcts(dataFranses1996)  class(pcfr)        # \"PeriodicMTS\" #> [1] \"PeriodicMTS\" #> attr(,\"package\") #> [1] \"pcts\" nSeasons(pcfr) # 4 #> [1] 4 allSeasons(pcfr) #> [1] \"Quarter_1\" \"Quarter_2\" \"Quarter_3\" \"Quarter_4\" allSeasons(pcfr, abb = TRUE) #> [1] \"Q1\" \"Q2\" \"Q3\" \"Q4\"  ## subsetting ## one index, x[i], is analogous to lists pcfr2to4 <- pcfr[2:4]; class(pcfr2to4) # \"PeriodicMTS\" #> [1] \"PeriodicMTS\" #> attr(,\"package\") #> [1] \"pcts\" pcfr2to2 <- pcfr[2];   class(pcfr2to2) # \"PeriodicMTS\" #> [1] \"PeriodicMTS\" #> attr(,\"package\") #> [1] \"pcts\" pcfr2    <- pcfr[[2]]; class(pcfr2)    # note '[[', \"PeriodicTS\" #> [1] \"PeriodicTS\" #> attr(,\"package\") #> [1] \"pcts\"  ## data for 1990 quarter 3 pcfr2to4[as_date(\"1990-07-01\")] # note: not \"1990-03-01\"! #>         USTotalIPI CanadaUnemployment         GermanyGNP  #>              118.3                 NA              468.9  pct1990_Q3 <- Pctime(c(1990, 3), pcCycle(pcfr2to4)) pcfr2to4[pct1990_Q3] #>         USTotalIPI CanadaUnemployment         GermanyGNP  #>              118.3                 NA              468.9   ## with empty index, returns the underlying data dim(pcfr[]) # [1] 148  19 #> [1] 148  19 dim(pcfr2to2[]) # 148 1 #> [1] 148   1 length(pcfr2[]) # 148 (this is numeric) #> [1] 148  summary(pcfr2) #>   availStart availEnd Min. 1st Qu. Median     Mean 3rd Qu.  Max. NA's #> 1     1960_1   1991_4 37.1    61.3   76.6 77.21719   93.25 118.3   20 summary(pcfr2to4) #>                    availStart availEnd  Min. 1st Qu. Median      Mean 3rd Qu. #> USTotalIPI             1960_1   1991_4  37.1   61.30  76.60  77.21719   93.25 #> CanadaUnemployment     1960_1   1987_4 210.0  372.75 587.00 707.38393  940.50 #> GermanyGNP             1960_1   1990_4 167.0  243.85 328.25 317.92661  375.85 #>                      Max. NA's #> USTotalIPI          118.3   20 #> CanadaUnemployment 1630.0   36 #> GermanyGNP          482.9   24 ## make the output width shorter summary(pcfr2to4, row.names = FALSE) #>   availStart availEnd  Min. 1st Qu. Median      Mean 3rd Qu.   Max. NA's #> 1     1960_1   1991_4  37.1   61.30  76.60  77.21719   93.25  118.3   20 #> 2     1960_1   1987_4 210.0  372.75 587.00 707.38393  940.50 1630.0   36 #> 3     1960_1   1990_4 167.0  243.85 328.25 317.92661  375.85  482.9   24 summary(pcfr2to4, row.names = 5) # trim row names to 5 characters #>       availStart availEnd  Min. 1st Qu. Median      Mean 3rd Qu.   Max. NA's #> USTot     1960_1   1991_4  37.1   61.30  76.60  77.21719   93.25  118.3   20 #> Canad     1960_1   1987_4 210.0  372.75 587.00 707.38393  940.50 1630.0   36 #> Germa     1960_1   1990_4 167.0  243.85 328.25 317.92661  375.85  482.9   24  head(pcfr2to4)  # starts with NA's #> An object of class \"PeriodicMTS\" #> Slot \"cycle\": Object from built-in class 'QuarterYearCycle' #> Cycle start: Quarter_1  #>  #>         USTotalIPI CanadaUnemployment GermanyGNP #> Y1955_1         NA                 NA         NA #> Y1955_2         NA                 NA         NA #> Y1955_3         NA                 NA         NA #> Y1955_4         NA                 NA         NA #> Y1956_1         NA                 NA         NA #> Y1956_2         NA                 NA         NA tail(pcfr2to4)  # some NA's at the end too #> An object of class \"PeriodicMTS\" #> Slot \"cycle\": Object from built-in class 'QuarterYearCycle' #> Cycle start: Quarter_1  #>  #>         USTotalIPI CanadaUnemployment GermanyGNP #> Y1990_3      118.3                 NA      468.9 #> Y1990_4      114.5                 NA      482.9 #> Y1991_1      111.4                 NA         NA #> Y1991_2      112.4                 NA         NA #> Y1991_3      116.0                 NA         NA #> Y1991_4      113.9                 NA         NA  ## time of first and last data, may be NA's start(pcfr2to4) # 1955 Q1 #> [1] 1955    1 end(pcfr2to4)   # 1991 Q4 #> [1] 1991    4  ## time of first nonNA: availStart(pcfr2)    # 1955 Q1 #> [1] 1960    1 availStart(pcfr2to4) # 1955 Q1 #> [1] 1960    1  ## time of last nonNA: availEnd(pcfr[[2]])   # 1991 Q4 #> [1] 1991    4 availEnd(pcfr[[3]])   # 1987 Q4 #> [1] 1987    4 availEnd(pcfr[[4]])   # 1990 Q4 #> [1] 1990    4 ## but at least one of them is  available for 1991 Q4, so: availEnd(pcfr2to4)   # 1991 Q4 #> [1] 1991    4  ## use window() to pick part of the ts by time: window(pcfr2to4, start = c(1990, 1), end = c(1991, 4)) #> An object of class \"PeriodicMTS\" #> Slot \"cycle\": Object from built-in class 'QuarterYearCycle' #> Cycle start: Quarter_1  #>  #>         USTotalIPI CanadaUnemployment GermanyGNP #> Y1990_1      114.3                 NA      442.0 #> Y1990_2      115.5                 NA      452.1 #> Y1990_3      118.3                 NA      468.9 #> Y1990_4      114.5                 NA      482.9 #> Y1991_1      111.4                 NA         NA #> Y1991_2      112.4                 NA         NA #> Y1991_3      116.0                 NA         NA #> Y1991_4      113.9                 NA         NA ## drop NA's at the start and end: window(pcfr2to4, start = availStart(pcfr2to4), end = availEnd(pcfr2to4)) #> An object of class \"PeriodicMTS\" #> Slot \"cycle\": Object from built-in class 'QuarterYearCycle' #> Cycle start: Quarter_1  #>  #>         USTotalIPI CanadaUnemployment GermanyGNP #> Y1960_1       40.2                583      167.0 #> Y1960_2       39.8                427      176.2 #> Y1960_3       38.5                334      198.0 #> Y1960_4       38.0                439      190.5 #> Y1961_1       37.1                703      180.1 #> Y1961_2       39.2                480      184.9 #> Y1961_3       39.8                325      202.9 #> Y1961_4       41.6                358      195.8 #> Y1962_1       41.8                561      185.4 #> Y1962_2       43.0                373      195.0 #> Y1962_3       42.6                282      214.5 #> Y1962_4       43.4                346      204.9 #> Y1963_1       43.9                546      183.0 #> Y1963_2       45.7                372      199.9 #> Y1963_3       44.9                272      223.5 #> Y1963_4       46.4                305      215.4 #> Y1964_1       46.7                463      201.6 #> Y1964_2       48.6                326      214.4 #> Y1964_3       48.1                243      232.8 #> Y1964_4       49.6                266      226.9 #> Y1965_1       51.4                397      213.4 #> Y1965_2       53.2                298      226.7 #> Y1965_3       52.9                210      243.4 #> Y1965_4       54.9                214      239.2 #> Y1966_1       56.2                303      224.3 #> Y1966_2       58.1                237      235.5 #> Y1966_3       57.6                236      250.0 #> Y1966_4       59.2                230      240.3 #> Y1967_1       58.4                340      220.3 #> Y1967_2       59.0                294      232.6 #> Y1967_3       58.4                260      248.3 #> Y1967_4       60.7                290      248.2 #> Y1968_1       61.5                411      226.9 #> Y1968_2       63.1                365      243.0 #> Y1968_3       62.5                332      267.1 #> Y1968_4       64.2                324      267.2 #> Y1969_1       64.9                405      244.0 #> Y1969_2       66.1                368      262.3 #> Y1969_3       65.8                329      287.1 #> Y1969_4       65.9                346      286.2 #> Y1970_1       63.8                455      257.4 #> Y1970_2       64.5                490      280.1 #> Y1970_3       63.4                479      298.2 #> Y1970_4       62.1                479      298.3 #> Y1971_1       63.1                601      274.5 #> Y1971_2       64.7                545      286.2 #> Y1971_3       64.1                494      304.8 #> Y1971_4       65.6                502      302.5 #> Y1972_1       67.8                591      286.0 #> Y1972_2       70.7                540      296.9 #> Y1972_3       70.7                536      315.2 #> Y1972_4       73.2                545      318.9 #> Y1973_1       74.4                599      304.5 #> Y1973_2       76.7                501      312.1 #> Y1973_3       77.1                476      328.7 #> Y1973_4       77.0                483      328.8 #> Y1974_1       74.8                564      309.4 #> Y1974_2       76.9                494      314.5 #> Y1974_3       76.2                488      328.4 #> Y1974_4       72.9                512      324.2 #> Y1975_1       66.8                738      298.2 #> Y1975_2       67.7                685      308.2 #> Y1975_3       69.3                670      322.1 #> Y1975_4       70.4                666      329.5 #> Y1976_1       72.4                776      316.1 #> Y1976_2       75.1                717      328.1 #> Y1976_3       75.5                709      335.2 #> Y1976_4       76.5                703      348.8 #> Y1977_1       77.9                909      328.6 #> Y1977_2       81.3                838      334.1 #> Y1977_3       82.0                826      341.8 #> Y1977_4       82.2                824      358.9 #> Y1978_1       81.7                999      336.5 #> Y1978_2       86.5                930      346.4 #> Y1978_3       87.5                878      354.8 #> Y1978_4       88.6                827      370.2 #> Y1979_1       88.8                966      348.3 #> Y1979_2       90.0                856      361.5 #> Y1979_3       89.7                759      369.8 #> Y1979_4       89.5                762      384.0 #> Y1980_1       89.3                953      365.3 #> Y1980_2       86.6                907      365.4 #> Y1980_3       86.6                816      372.8 #> Y1980_4       88.7                784      381.7 #> Y1981_1       89.2                951      360.9 #> Y1981_2       90.2                864      364.9 #> Y1981_3       91.8                840      374.8 #> Y1981_4       87.8                937      384.7 #> Y1982_1       85.1               1152      357.5 #> Y1982_2       83.9               1266      364.8 #> Y1982_3       83.4               1384      369.2 #> Y1982_4       81.1               1455      379.5 #> Y1983_1       82.8               1630      359.4 #> Y1983_2       86.4               1515      370.4 #> Y1983_3       91.4               1353      376.0 #> Y1983_4       92.5               1295      393.1 #> Y1984_1       95.5               1497      375.8 #> Y1984_2       98.1               1430      375.6 #> Y1984_3      100.4               1345      391.2 #> Y1984_4       98.7               1325      405.5 #> Y1985_1       98.4               1495      375.8 #> Y1985_2       99.8               1353      387.2 #> Y1985_3      101.5               1236      402.7 #> Y1985_4      100.4               1228      412.4 #> Y1986_1      100.2               1356      381.0 #> Y1986_2      100.7               1245      400.1 #> Y1986_3      102.2               1186      411.4 #> Y1986_4      101.3               1156      422.2 #> Y1987_1      101.5               1358      388.3 #> Y1987_2      103.8               1197      402.4 #> Y1987_3      107.3               1097      417.5 #> Y1987_4      107.2               1016      431.6 #> Y1988_1      107.6                 NA      405.3 #> Y1988_2      110.0                 NA      416.6 #> Y1988_3      113.5                 NA      432.2 #> Y1988_4      112.6                 NA      446.4 #> Y1989_1      113.6                 NA      424.1 #> Y1989_2      114.5                 NA      436.3 #> Y1989_3      115.6                 NA      445.0 #> Y1989_4      114.3                 NA      460.6 #> Y1990_1      114.3                 NA      442.0 #> Y1990_2      115.5                 NA      452.1 #> Y1990_3      118.3                 NA      468.9 #> Y1990_4      114.5                 NA      482.9 #> Y1991_1      111.4                 NA         NA #> Y1991_2      112.4                 NA         NA #> Y1991_3      116.0                 NA         NA #> Y1991_4      113.9                 NA         NA  plot(pcfr2) # the points mark the first season in each cycle  boxplot(pcfr2)  monthplot(pcfr2)"},{"path":"https://geobosh.github.io/pcts/reference/pcts_exdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Periodic time series objects for examples — pcts_exdata","title":"Periodic time series objects for examples — pcts_exdata","text":"Periodic time series objects examples tests. objects   classes defined package “pcts” consequence   suitable access data().","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcts_exdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Periodic time series objects for examples — pcts_exdata","text":"","code":"pcts_exdata(x, envir = parent.frame())"},{"path":"https://geobosh.github.io/pcts/reference/pcts_exdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Periodic time series objects for examples — pcts_exdata","text":"x character vector giving names objects. missing,     available objects created. Can also NA.     case objects created names available objects     returned. envir environment objects put, default     environment caller.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcts_exdata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Periodic time series objects for examples — pcts_exdata","text":"requested objects created put envir.    default environment caller, sufficient   use cases. following objects currently available:   ap, ap7to9, pcfr, pcfr2to4 .","code":""},{"path":"https://geobosh.github.io/pcts/reference/pcts_exdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Periodic time series objects for examples — pcts_exdata","text":"x NA, names available objects.   Otherwise function called side effect creating   objects envir return value (names created   objects) usually discarded.","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/pcts_exdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Periodic time series objects for examples — pcts_exdata","text":"","code":"## the objects are created with something like: ap <- pcts(AirPassengers) ap7to9 <- window(ap, seasons = 7:9)  pcfr <- pcts(dataFranses1996) pcfr2to4 <- pcfr[2:4]"},{"path":"https://geobosh.github.io/pcts/reference/pcts_reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — pcts_reexports","title":"Objects exported from other packages — pcts_reexports","text":"objects imported packages. Follow links   see documentation.  lagged slMatrix date date .Date .Date","code":""},{"path":"https://geobosh.github.io/pcts/reference/pdSafeParOrder.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions for some basic operations with seasons — pdSafeParOrder","title":"Functions for some basic operations with seasons — pdSafeParOrder","text":"Functions basic operations seasons.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pdSafeParOrder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions for some basic operations with seasons — pdSafeParOrder","text":"","code":"pdSafeParOrder(p)"},{"path":"https://geobosh.github.io/pcts/reference/pdSafeParOrder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions for some basic operations with seasons — pdSafeParOrder","text":"p autoregression order, vector integers.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pdSafeParOrder.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Functions for some basic operations with seasons — pdSafeParOrder","text":"pdSafeParOrder(p) modifies periodic AR order specified vector  p. modified order correspondence  autocovariances partial autocorrelations one--one, see  references details.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pdSafeParOrder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functions for some basic operations with seasons — pdSafeParOrder","text":"vector integers","code":""},{"path":"https://geobosh.github.io/pcts/reference/pdSafeParOrder.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Functions for some basic operations with seasons — pdSafeParOrder","text":"Lambert-Lacroix S (2000). ``periodic autoregressive process estimation .''  IEEE Transactions Signal Processing, 48( 6 ), pp. 1800-1803. Lambert-Lacroix S (2005). `` Extension autocovariance coefficients sequence periodically correlated processes.'' Journal Time Series Analysis, 26(6), pp. 423-435.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pdSafeParOrder.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Functions for some basic operations with seasons — pdSafeParOrder","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/pcts/reference/pdSafeParOrder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functions for some basic operations with seasons — pdSafeParOrder","text":"","code":"pdSafeParOrder(c(0,2)) #> [1] 1 2 pdSafeParOrder(c(2,3)) #> [1] 2 3"},{"path":"https://geobosh.github.io/pcts/reference/permean2intercept.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert between periodic centering and intercepts — permean2intercept","title":"Convert between periodic centering and intercepts — permean2intercept","text":"Convert periodic mean periodic intercept vice versa.","code":""},{"path":"https://geobosh.github.io/pcts/reference/permean2intercept.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert between periodic centering and intercepts — permean2intercept","text":"","code":"permean2intercept(mean, coef, order, nseasons = nrow(coef))  intercept2permean(intercept, coef, order, nseasons = nrow(coef))"},{"path":"https://geobosh.github.io/pcts/reference/permean2intercept.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert between periodic centering and intercepts — permean2intercept","text":"mean periodic mean, numeric. coef PAR coefficients, matrix. order PAR order, vector positive integers. nseasons number seasons, .k.. period. intercept periodic intercepts, numeric.","code":""},{"path":"https://geobosh.github.io/pcts/reference/permean2intercept.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert between periodic centering and intercepts — permean2intercept","text":"PAR model can written mean corrected intercept form.   permean2intercept calculates intercepts means,   intercept2permean inverse (means   intercepts). check made periodic stationarity model. Converting   mean corrected intercept form allways succeeds fact   means need means. opposite direction may   problems due unit roots similar features.","code":""},{"path":"https://geobosh.github.io/pcts/reference/permean2intercept.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert between periodic centering and intercepts — permean2intercept","text":"numeric vector","code":""},{"path":"https://geobosh.github.io/pcts/reference/permean2intercept.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert between periodic centering and intercepts — permean2intercept","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/pcts/reference/permean2intercept.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert between periodic centering and intercepts — permean2intercept","text":"","code":"mu <- c(1, 2) pm1 <- PeriodicArModel(matrix(c(0.5, 0.5), nrow = 2), order = rep(1, 2), sigma2 = 1, mean = mu)  cc <- permean2intercept(mu, pm1@ar@coef, c(1,1)) cc #> [1] 0.0 1.5 intercept2permean(cc, pm1@ar@coef, c(1,1)) #> [1] 1 2  d <- 4 mu <- 1:d co <- rep(0.5, d) pm1 <- PeriodicArModel(matrix(co, nrow = d), order = rep(1, d), sigma2 = 1, mean = mu)  cc <- permean2intercept(mu, pm1@ar@coef, order = rep(1, d)) cc #> [1] -1.0  1.5  2.0  2.5 intercept2permean(cc, pm1@ar@coef, order = rep(1, d) ) #> [1] 1 2 3 4"},{"path":"https://geobosh.github.io/pcts/reference/permodelmf.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the multi-companion form of a per model — permodelmf","title":"Compute the multi-companion form of a per model — permodelmf","text":"Compute multi-companion form per model.","code":""},{"path":"https://geobosh.github.io/pcts/reference/permodelmf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the multi-companion form of a per model — permodelmf","text":"","code":"permodelmf(permodel, update = TRUE)"},{"path":"https://geobosh.github.io/pcts/reference/permodelmf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the multi-companion form of a per model — permodelmf","text":"permodel model. update TRUE store multi-companion form     permodel return whole model, otherwise simply return     multi-companion form.","code":""},{"path":"https://geobosh.github.io/pcts/reference/permodelmf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the multi-companion form of a per model — permodelmf","text":"todo:","code":""},{"path":"https://geobosh.github.io/pcts/reference/permodelmf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the multi-companion form of a per model — permodelmf","text":"multi-companion form model updated model,   described Details.","code":""},{"path":"https://geobosh.github.io/pcts/reference/permodelmf.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute the multi-companion form of a per model — permodelmf","text":"Boshnakov GN, Iqelan BM (2009). “Generation time series models given spectral properties.” J. Time Series Anal., 30(3), 349--368. ISSN 0143-9782, doi: 10.1111/j.1467-9892.2009.00617.x .","code":""},{"path":"https://geobosh.github.io/pcts/reference/permodelmf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute the multi-companion form of a per model — permodelmf","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/pcts/reference/pi1ar2par.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert PIAR coefficients to PAR coefficients — pi1ar2par","title":"Convert PIAR coefficients to PAR coefficients — pi1ar2par","text":"Convert PIAR coefficients PAR coefficients","code":""},{"path":"https://geobosh.github.io/pcts/reference/pi1ar2par.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert PIAR coefficients to PAR coefficients — pi1ar2par","text":"","code":"pi1ar2par(picoef, parcoef) piar2par(picoef, parcoef)"},{"path":"https://geobosh.github.io/pcts/reference/pi1ar2par.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert PIAR coefficients to PAR coefficients — pi1ar2par","text":"picoef coefficients periodic integration filter,     numeric vector matrix, see Details. parcoef coefficients periodically correlated part model.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pi1ar2par.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert PIAR coefficients to PAR coefficients — pi1ar2par","text":"functions expand periodic filters represented multiplicative   form.  non-periodic analogue operation functions   representing multiplicative filter like \\((1-B)(1-aB)\\),   \\(B\\) backward shift operator, single filter \\(1 -   (1+)B + aB^2\\), just product polynomials, \\(1-B\\)   \\(1 - aB\\). non-periodic case however operation , general,   equivalent multiplication corresponding polynomials.   also commutative. pi1ar2par converts PIAR(1) model coefficients specified   set coefficients corresponding periodic unit root PAR   coefficients coefficients single filter. piar2par admits higher order periodic   integration. picoef matrix, specifying one first order periodic   unit root filters. column contains coefficients one   filter. one filter, coefficients can given   numeric vector. filters applied right left, sense first   PAR filter applied time series, filter   specified last column .","code":""},{"path":"https://geobosh.github.io/pcts/reference/pi1ar2par.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert PIAR coefficients to PAR coefficients — pi1ar2par","text":"matrix, whose -th row contains coefficients -th season.","code":""},{"path":"https://geobosh.github.io/pcts/reference/pi1ar2par.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert PIAR coefficients to PAR coefficients — pi1ar2par","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/pcts/reference/pi1ar2par.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert PIAR coefficients to PAR coefficients — pi1ar2par","text":"","code":"## Lina's example parcoef    <- rbind(c(0.5, -0.06), c(0.6, -0.08),                     c(0.7, -0.1),  c(0.2, 0.15) ) picoef1    <- c(0.8, 1.25, 2, 0.5) parcoef2   <- pi1ar2par(picoef1, parcoef)  picoef2    <- c(4, 0.25, 5, 0.2) coefper2I2 <- pi1ar2par(picoef2, parcoef2)"},{"path":"https://geobosh.github.io/pcts/reference/seqSeasons-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for seqSeasons() in package pcts — seqSeasons-methods","title":"Methods for seqSeasons() in package pcts — seqSeasons-methods","text":"Methods seqSeasons() package pcts.","code":""},{"path":"https://geobosh.github.io/pcts/reference/seqSeasons-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Methods for seqSeasons() in package pcts — seqSeasons-methods","text":"signature(x = \"BasicCycle\")  signature(x = \"Cyclic\")  signature(x = \"VirtualPeriodicModel\")","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/sigmaSq-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for sigmaSq in package pcts — sigmaSq-methods","title":"Methods for sigmaSq in package pcts — sigmaSq-methods","text":"Methods sigmaSq package pcts.","code":""},{"path":"https://geobosh.github.io/pcts/reference/sigmaSq-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Methods for sigmaSq in package pcts — sigmaSq-methods","text":"signature(object = \"PeriodicIntegratedArmaSpec\")  signature(object = \"PeriodicInterceptSpec\")","code":""},{"path":"https://geobosh.github.io/pcts/reference/sim_parAcvf.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a random periodic autocovariance function — sim_parAcvf","title":"Create a random periodic autocovariance function — sim_parAcvf","text":"Select randomly periodic autoregression model return   periodic autocovariances associated .","code":""},{"path":"https://geobosh.github.io/pcts/reference/sim_parAcvf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a random periodic autocovariance function — sim_parAcvf","text":"","code":"sim_parAcvf(period, order, sigma2)"},{"path":"https://geobosh.github.io/pcts/reference/sim_parAcvf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a random periodic autocovariance function — sim_parAcvf","text":"period period, positive integer. order AR order, vector non-negative integers. sigma2 variances innovations, numeric vector     length period (todo: one?).","code":""},{"path":"https://geobosh.github.io/pcts/reference/sim_parAcvf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a random periodic autocovariance function — sim_parAcvf","text":"Uses sim_parCoef() generate random PAR model.","code":""},{"path":"https://geobosh.github.io/pcts/reference/sim_parAcvf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a random periodic autocovariance function — sim_parAcvf","text":"object class \"matrix\". addition, specification   model attribute \"model\" list   following components: ar matrix, coefficients PAR model, sigma2 numeric, innovation variances, order PAR order.","code":""},{"path":"https://geobosh.github.io/pcts/reference/sim_parAcvf.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create a random periodic autocovariance function — sim_parAcvf","text":"Boshnakov GN, Iqelan BM (2009). “Generation time series models given spectral properties.” J. Time Series Anal., 30(3), 349--368. ISSN 0143-9782, doi: 10.1111/j.1467-9892.2009.00617.x .","code":""},{"path":"https://geobosh.github.io/pcts/reference/sim_parAcvf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a random periodic autocovariance function — sim_parAcvf","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/pcts/reference/sim_parAcvf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a random periodic autocovariance function — sim_parAcvf","text":"","code":"sim_parAcvf(2, 5) #>          [,1]     [,2]      [,3]     [,4]        [,5]       [,6] #> [1,] 9.358814 2.522674 2.5124571 0.856207 -2.40770958 -0.8544942 #> [2,] 2.112913 1.884455 0.7005551 2.289959 -0.07141546 -0.2990444 #> attr(,\"model\") #> attr(,\"model\")$ar #>      [,1]      [,2]       [,3]      [,4]       [,5]       [,6] #> [1,]    1 2.4817868 -0.1287243 0.4691656 -1.1946248 1.00237503 #> [2,]    1 0.2076349 -0.1122449 0.3412125 -0.5485619 0.06778367 #>  #> attr(,\"model\")$sigma2 #> [1] 1 1 #>  #> attr(,\"model\")$order #> [1] 5 #>  sim_parAcvf(3, 5) #>           [,1]      [,2]      [,3]      [,4]      [,5]      [,6] #> [1,]  5.549885 -6.570274  4.887329 -2.372852  2.032531 -6.390012 #> [2,] 12.945914  3.088179 -5.663175 -5.053098 -4.313226  8.962977 #> [3,] 14.090953 -2.984629  5.917724 -9.868204  8.222589 -3.435384 #> attr(,\"model\") #> attr(,\"model\")$ar #>      [,1]       [,2]       [,3]       [,4]        [,5]        [,6] #> [1,]    1 -0.2301267  0.3685835 -0.4352324 -0.08414653 -0.05865233 #> [2,]    1  2.4366551  0.3492087 -1.2693042  1.38636587  0.66546053 #> [3,]    1 -0.3805371 -0.3151011 -0.3951479  0.76598366 -1.05435211 #>  #> attr(,\"model\")$sigma2 #> [1] 1 1 1 #>  #> attr(,\"model\")$order #> [1] 5 #>   res <- sim_parAcvf(2, 6) res #>          [,1]     [,2]      [,3]      [,4]      [,5]       [,6]       [,7] #> [1,] 292.9796  33.0503 140.31049 -94.47060 -146.7802 -117.26143 -265.28835 #> [2,]  63.8744 131.4541  28.53415  88.76269  -35.7699  -45.78448  -58.83145 #> attr(,\"model\") #> attr(,\"model\")$ar #>      [,1]       [,2]      [,3]        [,4]       [,5]       [,6]       [,7] #> [1,]    1 -4.5725434 2.3809656  1.22061700 -0.8770059 -2.4880512 0.73933919 #> [2,]    1  0.3318615 0.5358023 -0.07277562 -0.5674673  0.1295568 0.06706686 #>  #> attr(,\"model\")$sigma2 #> [1] 1 1 #>  #> attr(,\"model\")$order #> [1] 6 #>  slMatrix(res)[3, 4, type = \"tt\"] #>          [,1] #> [1,] 131.4541  res <- sim_parAcvf(2, 4) attr(res, \"model\") #> $ar #>      [,1]        [,2]      [,3]         [,4]        [,5] #> [1,]    1  0.04749011 0.1370366  0.001487516 -0.01430092 #> [2,]    1 -2.69264664 0.4206360 -0.366223772 -0.06669012 #>  #> $sigma2 #> [1] 1 1 #>  #> $order #> [1] 4 #>  acv <- res[ , ] # drop attributes  acv[2, 1 + 0] #> [1] 10.72522 acv[2, 1 + 1] #> [1] -2.67572 slMatrix(acv)[2, 0] #> [1] 10.72522 slMatrix(acv)[2, 1] #> [1] -2.67572 slMatrix(acv)[3, 4, type = \"tt\"] #>          [,1] #> [1,] -2.67572 slMatrix(acv)[1:2, 1:2, type = \"tt\"] #>           [,1]     [,2] #> [1,]  1.011482 -2.67572 #> [2,] -2.675720 10.72522 slMatrix(acv)[1:4, 1:4, type = \"tt\"] #>             [,1]       [,2]        [,3]      [,4] #> [1,]  1.01148176 -2.6757202  0.01162881 -1.538695 #> [2,] -2.67572020 10.7252169  0.17168811  4.714611 #> [3,]  0.01162881  0.1716881  1.01148176 -2.675720 #> [4,] -1.53869505  4.7146112 -2.67572020 10.725217  ## TODO: need method for autocorrelation() ## pc.acrf(acv)  ## TODO: these need changing, after the change of the return values of sim_parAcvf ## pc.fcoeffs(acv, 2) ## pc.fcoeffs(acv, 3) ## pc.fcoeffs(acv, 4) pcts:::calc_predictionCoefficients(acv, c(2, 2)) #>      [,1]        [,2]       [,3] #> [1,]    1 -0.05551134 -0.1583436 #> [2,]    1  2.72737196 -0.4832414 pcts:::calc_predictionCoefficients(acv, c(3, 3)) #>      [,1]       [,2]       [,3]         [,4] #> [1,]    1 -0.0501526 -0.1435260 -0.003781037 #> [2,]    1  2.6934964 -0.3261654  0.627441294 pcts:::calc_predictionCoefficients(acv, c(4, 4)) #>      [,1]        [,2]       [,3]         [,4]       [,5] #> [1,]    1 -0.04749011 -0.1370366 -0.001487516 0.01430092 #> [2,]    1  2.69264664 -0.4206360  0.366223772 0.06669012"},{"path":"https://geobosh.github.io/pcts/reference/sim_parCoef.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a periodic autoregression model — sim_parCoef","title":"Generate a periodic autoregression model — sim_parCoef","text":"Generate periodic autoregression model, possibly integrated.","code":""},{"path":"https://geobosh.github.io/pcts/reference/sim_parCoef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a periodic autoregression model — sim_parCoef","text":"","code":"sim_parCoef(period, n.root, sigma2 = rep(1, period), ...)"},{"path":"https://geobosh.github.io/pcts/reference/sim_parCoef.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a periodic autoregression model — sim_parCoef","text":"period number seasons cycle. n.root number non-zero roots, see details. sigma2 variances innovations. ... additional arguments passed sim_pcfilter","code":""},{"path":"https://geobosh.github.io/pcts/reference/sim_parCoef.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a periodic autoregression model — sim_parCoef","text":"sim_parCoef uses multi-companion method generate   model. function essentially wrapper sim_pcfilter. order filter set n.root season.  Part   spectral information may specified \"...\"   arguments, see sim_pcfilter sim_mc   discussion .","code":""},{"path":"https://geobosh.github.io/pcts/reference/sim_parCoef.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a periodic autoregression model — sim_parCoef","text":"periodic autoregression model list elements: ar matrix whose \\(\\)th row contains coefficients   \\(\\)season, sigma2 innovation variances, numeric vector.","code":""},{"path":"https://geobosh.github.io/pcts/reference/sim_parCoef.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generate a periodic autoregression model — sim_parCoef","text":"Boshnakov GN, Iqelan BM (2009). “Generation time series models given spectral properties.” J. Time Series Anal., 30(3), 349--368. ISSN 0143-9782, doi: 10.1111/j.1467-9892.2009.00617.x .","code":""},{"path":"https://geobosh.github.io/pcts/reference/sim_parCoef.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate a periodic autoregression model — sim_parCoef","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/sim_parCoef.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a periodic autoregression model — sim_parCoef","text":"","code":"sim_parCoef(2, 4)                    # 2 seasons #> $ar #>      [,1]        [,2]       [,3]          [,4]        [,5] #> [1,]    1 0.008677317 -0.5913406 -0.0004170652 -0.07448196 #> [2,]    1 4.389210306 -0.8915451  0.7344121804 -0.15176050 #>  #> $sigma2 #> [1] 1 1 #>  sim_parCoef(2, 4, sigma2 = c(2, 4)) #> $ar #>      [,1]       [,2]       [,3]        [,4]        [,5] #> [1,]    1 -0.4669751 -0.3597549 0.002854628 0.026370980 #> [2,]    1 -0.9790889  0.1665807 0.208343628 0.005077436 #>  #> $sigma2 #> [1] 2 4 #>  sim_parCoef(2, 1) #> $ar #>      [,1]       [,2] #> [1,]    1 -1.6411246 #> [2,]    1 -0.4461489 #>  #> $sigma2 #> [1] 1 1 #>  sim_parCoef(4, 2)                    # 4 seasons #> $ar #>      [,1]       [,2]       [,3] #> [1,]    1  0.3266282  0.6762625 #> [2,]    1  0.3748450 -0.2563427 #> [3,]    1  1.3403750 -0.5355615 #> [4,]    1 -1.6486829  2.1881068 #>  #> $sigma2 #> [1] 1 1 1 1 #>   sim_parCoef(period = 4, n.root = 6,     eigabs = c(1, 1, 1, 0.036568887, 0.001968887),     type.eigval = c(\"cp\", \"r\", \"r\", \"r\",  \"r\"),     eigsign     = c(pi/2,   1,  -1,   1,   -1)) #> $ar #>      [,1]       [,2]       [,3]        [,4]       [,5]        [,6]        [,7] #> [1,]    1  0.6734184 -0.1925968 -0.04595757 -0.4265943  0.76494732  0.41783119 #> [2,]    1  1.3850111 -0.8908136  0.86809532  0.7163844  0.14791760 -0.32713804 #> [3,]    1 -0.3539595  0.7508840  0.43447534 -0.2658097 -0.05473122 -0.01302959 #> [4,]    1  4.4672766  2.5169511 -4.70508659 -0.6387933  0.03731006  0.04042685 #>  #> $sigma2 #> [1] 1 1 1 1 #>"},{"path":"https://geobosh.github.io/pcts/reference/sim_pc.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate periodically correlated ARMA series — sim_pc","title":"Simulate periodically correlated ARMA series — sim_pc","text":"Simulate realization periodically correlated arma model   continuation existing series.   Initial values may given .","code":""},{"path":"https://geobosh.github.io/pcts/reference/sim_pc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate periodically correlated ARMA series — sim_pc","text":"","code":"sim_pc(model, n = NA, randgen = rnorm, seasonof1st = 1, nepochs = NA,               n.start = NA, x, eps, nmean = NULL, nintercept = NULL, ...)"},{"path":"https://geobosh.github.io/pcts/reference/sim_pc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate periodically correlated ARMA series — sim_pc","text":"model list elements     phi, theta, p, q, period,     mean, intercept,     specifying model. n length series. randgen random number generator required     sim_pwn.  seasonof1st season first value. nepochs number epochs; nepochs given, n     computed \\(nepochs * period\\). n.start burn-number; generate \\(\\code{n.start + n}\\) observations     discard first n.start , see Details. x initial values, see Details. eps innovations, see Details. nmean vector length n means, see Details. nintercept vector length n intercepts, see Details. ... additional arguments passed sim_pwn.","code":""},{"path":"https://geobosh.github.io/pcts/reference/sim_pc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate periodically correlated ARMA series — sim_pc","text":"Argument x can used specify two types initialisation   values - `' `init'. used similarly computations   `' values included result, `init'   values (unless dropped due n.start). `' values   provide convenient way simulate continuation trajectories   time series, example simulation based prediction intervals. x \"numeric\", represents `'   values. Alternatively, x can list components   \"\" \"init\". Innovations usually generated random number generator   specified randgen (default rnorm)   ... parameters call function sim_pwn, see   documentation sim_pwn various ways control   distribution generated sequence. innovations can also generated advance supplied using   argument eps. eps numeric, taken   represent innovations. Alternatively, eps can list   innovations component \"main\". list may also   contain components \"\" /\"init\" specifying   `' `initial' values, interpretation x. nintercept can used specify trend representing effect   time /covariates. eps, numeric   taken represent main values. can also list   components , init, main. avoid ambiguity, reiterate values past   values corresponding quantity (start   simulated series), init values \"initial\" values.   particular, initial values specified x,   form start generated series (unless n.start leads   discarded). values specified series   innovations, play role analogous initial   values, make much sense supply also initial   values. function effectively following.   innov generated supplied,   vector innovations created                  eps <- c(innovbefore,innovinit,innov),   vector x created length eps, \t\t initialised xbefore xinit.   initial values, assumed 0.   remaining values x filled using pc-arma equations.   Finally, xbefore values discarded well first   n.start values. n.start usually multiple period since   otherwise first observation returned vector   correspond seasonof1st. sim_pc deals mainly interpretation parameters.   actual computations done pc.filter. Moreover,   sim_pc look model. knows   model$period uses compute n n   specified.   (probably care even .)","code":""},{"path":"https://geobosh.github.io/pcts/reference/sim_pc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate periodically correlated ARMA series — sim_pc","text":"numeric, simulated time series","code":""},{"path":"https://geobosh.github.io/pcts/reference/sim_pc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate periodically correlated ARMA series — sim_pc","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/pcts/reference/sim_pc.html","id":"to-do","dir":"Reference","previous_headings":"","what":"To do","title":"Simulate periodically correlated ARMA series — sim_pc","text":"option return innovation sequence;   option include values. option return season first value returned series   (may different seasonof1st due n.start).","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/sim_pc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate periodically correlated ARMA series — sim_pc","text":"","code":"m1 <- rbind( c(1, 0.81, 0), c(1, 0.4972376, 0.4972376) ) testphi <- slMatrix( init = m1 )  m2 <- rbind( c(1, 0, 0), c(1, 0, 0) ) testtheta <- slMatrix( init = m2 )  ## phi and theta are slMatrix here. mo1 <- list(phi = testphi, theta = testtheta, p = 2, q = 2, period = 2) set.seed(1234) a1 <- sim_pc(mo1, 100)  ## phi and theta are ordinary matrices here. mo2 <- list(phi = m1[ , 2:ncol(m1)], theta = m2[ , 2:ncol(m2)], p = 2, q = 2, period = 2) set.seed(1234) a2 <- sim_pc(mo2, 100) identical(a1, a2) #> [1] TRUE  ## Lina's PAR model parcoef    <- rbind(c(0.5, -0.06), c(0.6, -0.08),                     c(0.7, -0.1),  c(0.2, 0.15) ) picoef1    <- c(0.8, 1.25, 2, 0.5) parcoef2   <- pi1ar2par(picoef1, parcoef)  picoef2    <- c(4, 0.25, 5, 0.2) coefper2I2 <- pi1ar2par(picoef2, parcoef2)  #### specify the model using multi-companion approach mc2I2       <- mcompanion::mc_from_filter(coefper2I2) co2I2       <- eigen(mc2I2)$vectors co2I2 #>           [,1]       [,2]       [,3]          [,4] #> [1,] 0.1524986 -0.1524986 0.01157344 -0.0005488947 #> [2,] 0.7624929 -0.7624928 0.26297482  0.0405688010 #> [3,] 0.1524986 -0.1524986 0.09131096  0.0323513211 #> [4,] 0.6099942 -0.6099943 0.96040232  0.9986527240 m2I2 <-  mcompanion::sim_pcfilter(period = 4, n.root = 4,                  eigabs = c(1, 0.036568887, 0.001968887),                  eigsign = c(1, 1, -1),                  len.block = c(2, 1, 1),                  type.eigval  =  c(\"r\", \"r\", \"r\"),                  co = cbind(co2I2[ ,1], rep(NA, 4), co2I2[,3:4])) m2I2$pcfilter #>            [,1]         [,2]        [,3]        [,4] #> [1,] 26.6776382 -11.62777150 38.51128378 -0.76251650 #> [2,]  0.3204255  -0.08629939 -0.05644545  0.08682460 #> [3,]  7.4995587  -1.47779772  3.48496388 -0.01466647 #> [4,]  0.4794181  -1.52298674  0.05001173 -0.07415064 perunit2mc  <- sim_pc(list(phi = m2I2$pcfilter, p = 4, q = 0, period = 4), 500) plot(perunit2mc)  plot(perunit2mc, type = \"p\")   # todo: give example with sigmat^2 !!!"},{"path":"https://geobosh.github.io/pcts/reference/sim_pwn.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate periodic white noise — sim_pwn","title":"Simulate periodic white noise — sim_pwn","text":"Generates sample periodic white noise.","code":""},{"path":"https://geobosh.github.io/pcts/reference/sim_pwn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate periodic white noise — sim_pwn","text":"","code":"sim_pwn(n = 100, period = NA, seasonof1st = 1, scale = NULL,          shift = NULL, f = rnorm, ...)"},{"path":"https://geobosh.github.io/pcts/reference/sim_pwn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate periodic white noise — sim_pwn","text":"n length generated sample. period number seasons epoch. seasonof1st season first observation result. scale scale series amount, vector length period 1. shift shift series amount, vector length period 1. f function list functions generate random numbers. ... arguments random number generator(s) specified f.","code":""},{"path":"https://geobosh.github.io/pcts/reference/sim_pwn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate periodic white noise — sim_pwn","text":"First series, say \\(x\\), random numbers generated   requested argument f. , shift /  scale supplied, values modified follows: $$y_t = shift_{k} + scale_{k} x_t$$  \\(k\\) season corresponding time \\(t\\).   vector \\(y\\) returned. f single function (name function),   series generated (effectively) call f(n,...). argument f may also list whose \\(k\\)th element   list specifying random number generator   \\(k\\)th season. first element function (  rnorm) remaining elements parameters   function.  Parameters common seasons may supplied   ... argument. argument period may omitted. case inferred   f /lengths shift   scale. Currently check consistency . arguments shift scale may used specify   simple linear transformations generated values, possibly   different different seasons. vector   length period one. seasonof1st can used request simulated time series   start season first one.  Note whatever   value seasonof1st, first elements scale,   shift f (list) taken refer season   one.","code":""},{"path":"https://geobosh.github.io/pcts/reference/sim_pwn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate periodic white noise — sim_pwn","text":"vector length \\(n\\) representing realization periodic   white noise series. season first observation seasonof1st.","code":""},{"path":"https://geobosh.github.io/pcts/reference/sim_pwn.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate periodic white noise — sim_pwn","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/pcts/reference/sim_pwn.html","id":"-level-","dir":"Reference","previous_headings":"","what":"Level","title":"Simulate periodic white noise — sim_pwn","text":"0 (base)","code":""},{"path":"https://geobosh.github.io/pcts/reference/sim_pwn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate periodic white noise — sim_pwn","text":"","code":"## three equivalent ways to specify periodic white noise with ## normal innovatios, 2 seasons, s.d. = 0.5 for season 1, and 2 for season 2 sim_pwn(100, f = rnorm, scale = c(0.5, 2)) #>   [1]  0.005962568 -0.362510576  0.553477201  2.958789742 -0.573699720 #>   [6]  2.023308753 -0.316034597  0.264722639  0.240463032  0.266355255 #>  [11] -0.731432231 -1.012803561  0.769831619  0.345587237 -0.417911962 #>  [16] -1.311857408  0.528783043  0.692166980 -0.448593271  0.012530423 #>  [21]  0.298335255  3.445103616 -0.440874742 -0.759891910  0.498055008 #>  [26] -0.918241786  0.730132873  2.086492354 -0.829520485  0.847915552 #>  [31] -0.709581463 -2.929384913  0.035210486  0.113396444 -0.016354089 #>  [36]  2.528562448  0.147493943 -1.346173641  0.059794146 -1.028793018 #>  [41] -0.034055787 -2.296023824 -0.057622240  0.205872784 -0.350871744 #>  [46]  0.082461249 -0.324384175 -1.288015719 -0.102219413  0.981681835 #>  [51] -0.102668494  0.381382648  0.485012096 -0.570522156 -0.051809634 #>  [56]  1.022509082 -0.629081225  1.087651938 -0.267481793 -2.276092054 #>  [61] -0.884001885 -1.429956406 -0.585101132 -2.356896297  0.813645669 #>  [66] -2.424293331  0.498754959  1.090491283 -0.442394558 -1.222461396 #>  [71] -0.205099756  0.380818740 -0.174162464  1.653695061 -0.146343451 #>  [76] -4.330692420 -0.048108388 -3.703913692  0.468905568 -1.495372963 #>  [81] -0.557620718 -1.183012831  0.292615342 -3.837116399  0.126908396 #>  [86] -1.944483532 -0.004256724  1.358083822  0.284815683  3.005923322 #>  [91]  0.064542701 -1.402365903  1.076853608 -0.606492277  0.403789888 #>  [96]  1.861982932  0.227451049  2.850841380 -0.104495586 -2.462805558 sim_pwn(n = 100, scale = c(0.5, 2))  # rnorm is the default generator #>   [1] -0.180301789 -1.094426599  0.163998004 -1.866599664  0.340405412 #>   [6] -2.327764800  0.877724755  2.899274729 -0.224397471  0.280134578 #>  [11] -0.186825164 -2.412868234 -1.330672987 -0.050188987 -0.017186629 #>  [16]  3.284718078 -0.997731074 -1.324341517  0.440018996  0.684774840 #>  [21]  0.060876928 -1.241522069  0.100472634 -0.471810696  0.056830557 #>  [26] -1.155858391  0.594282443  2.119872556  0.668379105 -0.734338342 #>  [31] -0.152168352 -0.700559248  0.687072381 -0.599440984  0.048817572 #>  [36]  0.762376057  0.339106278 -0.535346544  1.172982832 -1.854989311 #>  [41] -0.713278587  0.084605329  0.883721735  0.105500654  0.054863020 #>  [46]  1.726405231 -0.049486602  0.207393092  0.604242438  0.187492042 #>  [51] -0.376098259  0.789848440 -0.545760217 -2.916584850 -0.061356142 #>  [56] -2.201858383  0.290461536 -0.293894979 -0.383167308  3.245795157 #>  [61] -0.054970272  2.843409709 -0.056710524 -0.658561883  0.186730492 #>  [66]  2.059776262  1.352887524 -2.069891742 -0.091714929  2.155542615 #>  [71]  0.170810113 -0.374687248 -0.651429554 -0.557316524 -0.092376954 #>  [76] -0.163554994  0.806120897 -0.923879679 -0.788025150  0.992866147 #>  [81] -0.055976892 -0.408692800  0.317784081 -5.813347908 -0.276829126 #>  [86] -0.306903657  0.302645258 -0.522013192 -0.502569231  0.745132229 #>  [91]  0.009723088  0.221057631  0.578285218 -1.084440920 -0.624600642 #>  [96] -2.560025194 -0.511966394 -2.775301160 -0.024610557  3.621921461 sim_pwn(100, f = list(c(rnorm, 0, 0.5), c(rnorm, 0, 2))) #>   [1] -0.049755033 -1.770678382  0.388618562 -1.012660582 -0.551298163 #>   [6]  0.326664212 -0.110822391 -0.674287713  0.283047481 -2.071903064 #>  [11] -0.177479673  0.818675856  0.392631301 -1.048446916  0.347023689 #>  [16]  1.013000747 -0.316364948 -1.009445726 -0.385979321 -1.914500658 #>  [21]  1.178908694 -0.189268717 -0.096274668  1.298878635  0.003309667 #>  [26]  0.484643599 -0.027273012 -0.117868181 -0.284103440 -3.895588143 #>  [31] -0.463487972  2.902887264 -0.567867591 -0.079879355  0.456981170 #>  [36] -1.727995382 -0.493031417 -0.403380479  0.333742707  0.522511125 #>  [41]  0.703297745 -3.036702767  0.578889480  1.434617265 -0.069376599 #>  [46]  0.493665456 -0.269660925  2.405534093 -0.539446750  1.972078541 #>  [51] -0.009281070 -1.075881198 -0.116307843 -0.980565484  0.078146771 #>  [56] -1.991032345 -0.302004877 -0.723405857  0.314517560  1.888709623 #>  [61]  0.357084785  3.584414023  0.537943051  1.856818792  1.124877759 #>  [66] -3.659875339  0.098945299  1.643756212 -0.287773159  2.072537524 #>  [71] -0.038660433  1.234840288 -0.813959945 -1.709860726  0.064961577 #>  [76]  2.129021037 -0.212836567  1.458962916  0.203005874  1.325313169 #>  [81] -0.134405093 -0.762814405 -0.690492268  1.691783556  0.018291661 #>  [86]  0.223183769 -0.676622266 -0.135540523  0.448503097  2.974196193 #>  [91] -0.914679856  1.514446753 -0.070938472 -5.748084987  0.228990889 #>  [96] -0.853084898 -0.759808757 -2.974812591  0.699527657  1.177583291"},{"path":"https://geobosh.github.io/pcts/reference/sl_utils.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions for some basic operations with seasons — sl_utils","title":"Functions for some basic operations with seasons — sl_utils","text":"Functions basic operations seasons.","code":""},{"path":"https://geobosh.github.io/pcts/reference/sl_utils.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions for some basic operations with seasons — sl_utils","text":"","code":"toSeason(t, period, t1 = 1, from = 1) toSeasonPair(t, s, period, ...) ttTosl(r, period) ttmatToslPairs(i, j, period)"},{"path":"https://geobosh.github.io/pcts/reference/sl_utils.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions for some basic operations with seasons — sl_utils","text":"r covariance matrix, see `Details'. t vector integers, representing times. s vector integers, representing times. period number seasons. t1 time corresponding first season, integer number. 1 0, depending whether season numbers start     1 0. vector integers. j vector integers. ... todo: describe!","code":""},{"path":"https://geobosh.github.io/pcts/reference/sl_utils.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Functions for some basic operations with seasons — sl_utils","text":"ttmatToslPairs(,j,period) transforms time-time pairs  season-lag pairs. time pairs obtained pairing element  element j. four column matrix  created one row pair (t,s),  t=[m] s=j[n] m n.   row m, n, s, l, (s,l) season-lag pair  corresponding (t,s). ttTosl(r,period) converts autocovariances given covariance  matrix (.e. ``tt'' form) ``sl'' form. result  period x (maxlag+1) matrix, maxlag maximal  lag available r. Entries values available  filled NA's.  Warning given contradictory entries  found (.e. r periodically correlated  process given period). toSeason(t,period,t1=1,=1) returns season corresponding  t.  t1 time (integer) whose season first  season, 1 numbering seasons 1,2,...,period,  0 numbering seasons 0,1,...,period-1.  values  admissible (checked).  Note:  functions package implicitly assume t1=1  =1. toSeasonPair(t,s,period) converts ``tt'' pair t,s  ``sl'' pair returns result form list elements  season lag. Currently t s must  scalars. pc.omitneg helps implement dropping negative indices  season-lag objects. returns first argument, lags,  elements non-negative. Otherwise, elements  lags must non-positive. case function creates  vector 0:maxlag drops elements specified lags.  Note  default indexing work properly since zero elements  index omitted (indices season-lag  objects).","code":""},{"path":"https://geobosh.github.io/pcts/reference/sl_utils.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functions for some basic operations with seasons — sl_utils","text":"ttmatToslPairs, matrix four columns;   ttTosl, matrix period rows;   toSeason(t,period,t1=1,=1), vector integers;   toSeasonPair(t,s,period), list elements season lag;   pc.omitneg, vector lags (non-negative integers).","code":""},{"path":"https://geobosh.github.io/pcts/reference/sl_utils.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Functions for some basic operations with seasons — sl_utils","text":"Boshnakov GN, Iqelan BM (2009). “Generation time series models given spectral properties.” J. Time Series Anal., 30(3), 349--368. ISSN 0143-9782, doi: 10.1111/j.1467-9892.2009.00617.x .","code":""},{"path":"https://geobosh.github.io/pcts/reference/sl_utils.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Functions for some basic operations with seasons — sl_utils","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/pcts/reference/sl_utils.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Functions for some basic operations with seasons — sl_utils","text":"2013-10-24 - Corrected description return value   ttmatToslPairs. incorrectly stated first two   columns \"tt\" pair (actually indices   j).","code":""},{"path":"https://geobosh.github.io/pcts/reference/sl_utils.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functions for some basic operations with seasons — sl_utils","text":"","code":"# ttmatToslPairs ttmatToslPairs(3, 3, 4)  # 1, 1, 3, 0 #>     [,1] [,2] [,3] [,4] #> tmp    1    1    3    0 ttmatToslPairs(3, 2, 4)  # 1, 1, 3, 1 #>     [,1] [,2] [,3] [,4] #> tmp    1    1    3    1  ttmatToslPairs(1:4, 1:4, 4) #>     [,1] [,2] [,3] [,4] #> tmp    1    1    1    0 #> tmp    1    2    2    1 #> tmp    1    3    3    2 #> tmp    1    4    4    3 #> tmp    2    1    2    1 #> tmp    2    2    2    0 #> tmp    2    3    3    1 #> tmp    2    4    4    2 #> tmp    3    1    3    2 #> tmp    3    2    3    1 #> tmp    3    3    3    0 #> tmp    3    4    4    1 #> tmp    4    1    4    3 #> tmp    4    2    4    2 #> tmp    4    3    4    1 #> tmp    4    4    4    0  ttmatToslPairs(3:4, 3:4, 4) #>     [,1] [,2] [,3] [,4] #> tmp    1    1    3    0 #> tmp    1    2    4    1 #> tmp    2    1    4    1 #> tmp    2    2    4    0  # ttTosl -  :todo:  # toSeason toSeason(1:10, 4)           # 1 2 3 4  1 2 3 4  1 2 #>  [1] 1 2 3 4 1 2 3 4 1 2 toSeason(1:10, 4, from = 0) # 0 1 2 3  0 1 2 3  0 1 #>  [1] 0 1 2 3 0 1 2 3 0 1  ## first data is for 3rd quarter toSeason(1:10, 4, t1 = 3)  # 3 4 1 2 3 4 1 2 3 4 #>  [1] 3 4 1 2 3 4 1 2 3 4  # toSeasonPair toSeasonPair(3, 3, period=4) # season=3, lag = 0 #> $season #> [1] 3 #>  #> $lag #> [1] 0 #>  toSeasonPair(8, 8, period=4) # season=4, lag = 0 #> $season #> [1] 4 #>  #> $lag #> [1] 0 #>   toSeasonPair(3, 2, period=4) # season=3, lag = 1 #> $season #> [1] 3 #>  #> $lag #> [1] 1 #>  toSeasonPair(7, 6, period=4) # same #> $season #> [1] 3 #>  #> $lag #> [1] 1 #>   #### # pc.omitneg #### pc.omitneg(0:5,10) # 0:5, unchaged since all values >= 0 ####  #### pc.omitneg(-(0:5),10) # 6:10, works like #### (0:10)[-(0:5 +1)]     # same ####  #### # don't mix positive and negative numbers in pc.omitneg #### \\dontrun{pc.omitneg(c(0,2,3,-4,5), 10)}"},{"path":"https://geobosh.github.io/pcts/reference/tail-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for function tail() in package pcts — tail-methods","title":"Methods for function tail() in package pcts — tail-methods","text":"Methods function tail() package pcts.","code":""},{"path":"https://geobosh.github.io/pcts/reference/tail-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Methods for function tail() in package pcts — tail-methods","text":"signature(x = \"PeriodicTimeSeries\")","code":""},{"path":"https://geobosh.github.io/pcts/reference/test_piar.html","id":null,"dir":"Reference","previous_headings":"","what":"Test for periodic integration — test_piar","title":"Test for periodic integration — test_piar","text":"Test time series periodically integrated.","code":""},{"path":"https://geobosh.github.io/pcts/reference/test_piar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test for periodic integration — test_piar","text":"","code":"test_piar(x, d, p, sintercept = FALSE, sslope = FALSE, homoschedastic = FALSE)"},{"path":"https://geobosh.github.io/pcts/reference/test_piar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test for periodic integration — test_piar","text":"x time series. d period. p autoregressive order, positive integer. sintercept TRUE, include seasonal intercept. sslope TRUE, include seasonal slope. homoschedastic TRUE, assume innovations variance     seasons.","code":""},{"path":"https://geobosh.github.io/pcts/reference/test_piar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Test for periodic integration — test_piar","text":"Computes test statistics Franses (1996) test periodic   integration order 1. test based periodic autoregression   order p, p can positive integer.","code":""},{"path":"https://geobosh.github.io/pcts/reference/test_piar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test for periodic integration — test_piar","text":"list following components: p autoregressive order. spec values sintercept, sslope,     homoschedastic, named logical vector. statistics matrix containing test statistics (first row)     corresponding p-values (second row).  \"LR\" normalised,     p-value NA.","code":""},{"path":"https://geobosh.github.io/pcts/reference/test_piar.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Test for periodic integration — test_piar","text":"Boswijk HP Franses PH (1996). ``Unit roots periodic autoregressions.'' Journal Time Series Analysis, 17(3), pp. 221--245.","code":""},{"path":"https://geobosh.github.io/pcts/reference/test_piar.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Test for periodic integration — test_piar","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/pcts/reference/test_piar.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Test for periodic integration — test_piar","text":"Currently case p = 1 handled, p > 1   statistics set NA. :TODO: handle . statistics computed p-values computed yet.","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/test_piar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test for periodic integration — test_piar","text":"","code":"ts1 <- window(dataFranses1996[ , \"CanadaUnemployment\"],               start = c(1960, 1), end = c(1987, 4)) test_piar(ts1, 4, 1, sintercept = TRUE) #> $p #> [1] 1 #>  #> $spec #>     sintercept         sslope homoschedastic  #>           TRUE          FALSE          FALSE  #>  #> $statistics #>                LR      LRtau        tau  perFuller #> stats   0.2757132 -0.5250840 -0.5066658 -0.7737611 #> pvalues        NA  0.8680436  0.8749612  0.9052944 #>  pcTest(ts1, \"piar\", 4, 1, sintercept = TRUE) # same #> $p #> [1] 1 #>  #> $spec #>     sintercept         sslope homoschedastic  #>           TRUE          FALSE          FALSE  #>  #> $statistics #>                LR      LRtau        tau  perFuller #> stats   0.2757132 -0.5250840 -0.5066658 -0.7737611 #> pvalues        NA  0.8680436  0.8749612  0.9052944 #>   test_piar(ts1, 4, 1, sintercept = TRUE, sslope = TRUE) #> $p #> [1] 1 #>  #> $spec #>     sintercept         sslope homoschedastic  #>           TRUE           TRUE          FALSE  #>  #> $statistics #>               LR     LRtau        tau  perFuller #> stats   32.46523 -5.697827 -1.8148425 -4.8636649 #> pvalues       NA        NA  0.6583561  0.8397845 #>  test_piar(ts1, 4, 1)               #> $p #> [1] 1 #>  #> $spec #>     sintercept         sslope homoschedastic  #>          FALSE          FALSE          FALSE  #>  #> $statistics #>                LR     LRtau       tau perFuller #> stats   0.1868073 0.4322121 0.4126738 0.3638568 #> pvalues        NA 0.7540915 0.7478642 0.8316871 #>  test_piar(ts1, 4, 1, homoschedastic = TRUE)               #> $p #> [1] 1 #>  #> $spec #>     sintercept         sslope homoschedastic  #>          FALSE          FALSE           TRUE  #>  #> $statistics #>                LR     LRtau       tau perFuller #> stats   0.2111895 0.4595536 0.4126738 0.3638568 #> pvalues        NA 0.7628059 0.7478642 0.8316871 #>"},{"path":"https://geobosh.github.io/pcts/reference/unitCycle-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for unitCycle() in package pcts — unitCycle-methods","title":"Methods for unitCycle() in package pcts — unitCycle-methods","text":"Methods unitCycle() package pcts.","code":""},{"path":"https://geobosh.github.io/pcts/reference/unitCycle-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Methods for unitCycle() in package pcts — unitCycle-methods","text":"signature(x = \"\")  signature(x = \"DayWeekCycle\")  signature(x = \"FiveDayWeekCycle\")  signature(x = \"MonthYearCycle\")  signature(x = \"OpenCloseCycle\")  signature(x = \"QuarterYearCycle\")  signature(x = \"SimpleCycle\")  signature(x = \"Cyclic\")  signature(x = \"Every30MinutesCycle\")  signature(x = \"VirtualPeriodicModel\")","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/unitCycle_ass-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for `unitCycle<-` in package pcts — unitCycle<--methods","title":"Methods for `unitCycle<-` in package pcts — unitCycle<--methods","text":"Methods `unitCycle<-` package pcts.","code":""},{"path":"https://geobosh.github.io/pcts/reference/unitCycle_ass-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Methods for `unitCycle<-` in package pcts — unitCycle<--methods","text":"signature(x = \"Cyclic\")  signature(x = \"SimpleCycle\")","code":""},{"path":"https://geobosh.github.io/pcts/reference/unitSeason-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for unitSeason() in package pcts — unitSeason-methods","title":"Methods for unitSeason() in package pcts — unitSeason-methods","text":"Methods unitSeason() package pcts.","code":""},{"path":"https://geobosh.github.io/pcts/reference/unitSeason-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Methods for unitSeason() in package pcts — unitSeason-methods","text":"signature(x = \"\")  signature(x = \"DayWeekCycle\")  signature(x = \"FiveDayWeekCycle\")  signature(x = \"MonthYearCycle\")  signature(x = \"OpenCloseCycle\")  signature(x = \"QuarterYearCycle\")  signature(x = \"SimpleCycle\")  signature(x = \"Cyclic\")  signature(x = \"Every30MinutesCycle\")  signature(x = \"VirtualPeriodicModel\")","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/unitSeason_ass-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for `unitSeason<-` in package pcts — unitSeason<--methods","title":"Methods for `unitSeason<-` in package pcts — unitSeason<--methods","text":"Methods `unitSeason<-` package pcts.","code":""},{"path":"https://geobosh.github.io/pcts/reference/unitSeason_ass-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Methods for `unitSeason<-` in package pcts — unitSeason<--methods","text":"signature(x = \"Cyclic\")  signature(x = \"SimpleCycle\")","code":""},{"path":"https://geobosh.github.io/pcts/reference/window.html","id":null,"dir":"Reference","previous_headings":"","what":"Periodic methods for base R functions — window","title":"Periodic methods for base R functions — window","text":"Periodic methods base R functions.","code":""},{"path":"https://geobosh.github.io/pcts/reference/window.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Periodic methods for base R functions — window","text":"","code":"# S3 method for PeriodicTS window(x, start = NULL, end = NULL, seasons = NULL, ...)  # S3 method for PeriodicMTS window(x, start = NULL, end = NULL, seasons = NULL, ...)  # S3 method for PeriodicTS na.trim(object, sides = c(\"both\", \"left\", \"right\"), ...)  # S3 method for PeriodicMTS na.trim(object, sides = c(\"both\", \"left\", \"right\"),          is.na = c(\"any\", \"all\"), ...)  # S3 method for PeriodicTimeSeries frequency(x, ...)  # S3 method for PeriodicTimeSeries deltat(x, ...)  # S3 method for PeriodicTimeSeries cycle(x, ...)  # S3 method for PeriodicTimeSeries time(x, offset = 0, ...)  # S3 method for Cyclic start(x, ...)  # S3 method for Cyclic end(x, ...)"},{"path":"https://geobosh.github.io/pcts/reference/window.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Periodic methods for base R functions — window","text":"x,object object indicated periodic class. start numeric(2), start time. end numeric(2), end time. seasons numeric, subset 1:nSeasons(x). ... used methods. sides side trim: start (\"left\"), end (\"right\"),     (\"\").  .na multivariate time series: \"\", observation     time \\(t\\) considered missing variables     NA time. Otherwise, \"\",  variable     value NA cause observation time \\(t\\)     considered missing.  offset currently ignored (:TODO:)","code":""},{"path":"https://geobosh.github.io/pcts/reference/window.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Periodic methods for base R functions — window","text":"Periodic methods base R common functions   manipulation time series. methods work analogoulsly   base R cousins differences, , discussed . window takes part x, preserving   class object. Argument seasons selects subset   seasons. na.trim function defined package zoo   re-exported pcts. trims NAs one   ends time series, requested arguments.  arguments   methods defined pcts meaning   zoo.","code":""},{"path":"https://geobosh.github.io/pcts/reference/window.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Periodic methods for base R functions — window","text":"window na.trim,    object class original, representing   requested part time series.   frequency, integer number.   deltat, number (1/frequency).   cycle time, \"PeriodicTS\" object.   start end, time first/last observation,   encoded pair numbers.","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/window.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Periodic methods for base R functions — window","text":"","code":"pres <- pcts(presidents) head(pres, 8) #> An object of class \"PeriodicTS\" #> Slot \"cycle\": Start:  1945   Quarter_1  #> Cycle:  QuarterYearCycle  #> Number of seasons: 4  #>  #>       Q1 Q2 Q3 Q4 #> Y1945 NA 87 82 75 #> Y1946 63 50 43 32 availStart(pres) #> [1] 1945    2  tail(pres, 12) #> An object of class \"PeriodicTS\" #> Slot \"cycle\": Start:  1972   Quarter_1  #> Cycle:  QuarterYearCycle  #> Number of seasons: 4  #>  #>       Q1 Q2 Q3 Q4 #> Y1972 49 61 NA NA #> Y1973 68 44 40 27 #> Y1974 28 25 24 24 availEnd(pres) #> [1] 1974    4  ## Q3 and Q4 only presQ3Q4 <- window(pres, seasons = 3:4) head(presQ3Q4) #> An object of class \"PeriodicTS\" #> Slot \"cycle\": Start:  1945   Quarter_3  #> Cycle:  PartialCycle  #> Number of seasons: 2  #>  #>       Q3 Q4 #> Y1945 82 75 #> Y1946 43 32 #> Y1947 54 55  identical(na.trim(pres),           window(pres, start = availStart(pres), end = availEnd(pres))) #> [1] TRUE ## TRUE"},{"path":"https://geobosh.github.io/pcts/reference/zoo-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class zoo made S4 — zoo-class","title":"Class zoo made S4 — zoo-class","text":"Class zoo made S4","code":""},{"path":"https://geobosh.github.io/pcts/reference/zoo-class.html","id":"-objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class zoo made S4 — zoo-class","text":"virtual Class: objects may created   . S4 Class \"zoo\" derived namesake package   zoo use super class periodic time series classes   S4 method signatures.","code":""},{"path":"https://geobosh.github.io/pcts/reference/zoo-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class zoo made S4 — zoo-class","text":".S3Class: Object class \"character\" ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/zoo-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class zoo made S4 — zoo-class","text":"Class \"oldClass\", directly.","code":""},{"path":"https://geobosh.github.io/pcts/reference/zoo-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class zoo made S4 — zoo-class","text":"methods defined class \"zoo\" signature.","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/zoo-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class zoo made S4 — zoo-class","text":"","code":"showClass(\"zoo\") #> Virtual Class \"zoo\" [package \"pcts\"] #>  #> Slots: #>                  #> Name:   .S3Class #> Class: character #>  #> Extends: \"oldClass\", \"xtsORzoo\" #>  #> Known Subclasses:  #> Class \"zooreg\", directly #> Class \"PeriodicTS_zooreg\", by class \"zooreg\", distance 2 #> Class \"PeriodicMTS_zooreg\", by class \"zooreg\", distance 2"},{"path":"https://geobosh.github.io/pcts/reference/zooreg-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Virtual S4 class zooreg — zooreg-class","title":"Virtual S4 class zooreg — zooreg-class","text":"Virtual S4 class zooreg.","code":""},{"path":"https://geobosh.github.io/pcts/reference/zooreg-class.html","id":"-objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Virtual S4 class zooreg — zooreg-class","text":"virtual Class: objects may created   . S4 Class \"zooreg\" derived namesake package   zoo use super class periodic time series classes   S4 method signatures.","code":""},{"path":"https://geobosh.github.io/pcts/reference/zooreg-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Virtual S4 class zooreg — zooreg-class","text":".S3Class: Object class \"character\" ~~","code":""},{"path":"https://geobosh.github.io/pcts/reference/zooreg-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Virtual S4 class zooreg — zooreg-class","text":"Class \"zoo\", directly. Class \"oldClass\", class \"zoo\", distance 2.","code":""},{"path":"https://geobosh.github.io/pcts/reference/zooreg-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Virtual S4 class zooreg — zooreg-class","text":"methods defined class \"zooreg\" signature.","code":""},{"path":[]},{"path":"https://geobosh.github.io/pcts/reference/zooreg-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Virtual S4 class zooreg — zooreg-class","text":"","code":"showClass(\"zooreg\") #> Virtual Class \"zooreg\" [package \"pcts\"] #>  #> Slots: #>                  #> Name:   .S3Class #> Class: character #>  #> Extends:  #> Class \"zoo\", directly #> Class \"oldClass\", by class \"zoo\", distance 2 #> Class \"xtsORzoo\", by class \"zoo\", distance 2 #>  #> Known Subclasses: \"PeriodicTS_zooreg\", \"PeriodicMTS_zooreg\""},{"path":"https://geobosh.github.io/pcts/reference/zzbracket-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Indexing of objects from classes in package pcts — [-methods","title":"Indexing of objects from classes in package pcts — [-methods","text":"Indexing objects classes package pcts.","code":""},{"path":"https://geobosh.github.io/pcts/reference/zzbracket-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Indexing of objects from classes in package pcts — [-methods","text":"signature(x = \"BasicCycle\", = \"\", j = \"missing\", drop = \"\")  signature(x = \"BasicCycle\", = \"missing\", j = \"missing\", drop = \"\")  signature(x = \"PeriodicMTS\", = \"\", j = \"missing\", drop = \"\")  signature(x = \"PeriodicMTS\", = \"missing\", j = \"missing\", drop = \"\")  signature(x = \"PeriodicVector\", = \"\", j = \"\", drop = \"\")  signature(x = \"PeriodicVector\", = \"\", j = \"missing\", drop = \"\")  signature(x = \"PeriodicVector\", = \"missing\", j = \"\", drop = \"\")  signature(x = \"PeriodicVector\", = \"missing\", j = \"missing\",            drop = \"\")  signature(x = \"VirtualPeriodicAutocovarianceModel\", = \"missing\",            j = \"missing\", drop = \"\")  signature(x = \"VirtualPeriodicAutocovarianceModel\", = \"missing\",            j = \"numeric\", drop = \"\")  signature(x = \"VirtualPeriodicAutocovarianceModel\", = \"numeric\",            j = \"missing\", drop = \"\")  signature(x = \"VirtualPeriodicAutocovarianceModel\", = \"numeric\",            j = \"numeric\", drop = \"\")  signature(x = \"PeriodicTS\", = \"missing\", j = \"missing\", drop = \"\")  signature(x = \"PeriodicMTS\", = \"\", j = \"\", drop = \"\")  signature(x = \"PeriodicMTS\", = \"AnyDateTime\", j = \"\", drop = \"\")  signature(x = \"PeriodicMTS\", = \"AnyDateTime\", j = \"missing\",            drop = \"\")  signature(x = \"PeriodicTS\", = \"AnyDateTime\", j = \"missing\",            drop = \"\")","code":""},{"path":"https://geobosh.github.io/pcts/reference/zzbracket-methods.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Indexing of objects from classes in package pcts — [-methods","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/pcts/reference/zzbracket_ass.html","id":null,"dir":"Reference","previous_headings":"","what":"Index assignments for objects from classes in package pcts — [<--methods","title":"Index assignments for objects from classes in package pcts — [<--methods","text":"Index assignments objects classes package pcts.","code":""},{"path":"https://geobosh.github.io/pcts/reference/zzbracket_ass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Index assignments for objects from classes in package pcts — [<--methods","text":"signature(x = \"PeriodicVector\", = \"\", j = \"\", value = \"\")  signature(x = \"PeriodicVector\", = \"missing\", j = \"\", value = \"\")  signature(x = \"BasicCycle\", = \"\", j = \"missing\", value = \"\")  signature(x = \"BasicCycle\", = \"missing\", j = \"missing\", value = \"\")  signature(x = \"PeriodicAutocovarianceModel\", = \"\", j = \"\",           value = \"\")","code":""},{"path":"https://geobosh.github.io/pcts/reference/zzbracket_ass.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Index assignments for objects from classes in package pcts — [<--methods","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/pcts/reference/zzbracket_bracket-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for function`[[` in package 'pcts' — [[-methods","title":"Methods for function`[[` in package 'pcts' — [[-methods","text":"Methods function`[[` package 'pcts'.","code":""},{"path":"https://geobosh.github.io/pcts/reference/zzbracket_bracket-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Methods for function`[[` in package 'pcts' — [[-methods","text":"signature(x = \"PeriodicMTS\", = \"\", j = \"\")  signature(x = \"VirtualPeriodicAutocovarianceModel\", = \"numeric\",            j = \"\")","code":""},{"path":"https://geobosh.github.io/pcts/reference/zzdollar-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for function$ in package 'pcts' — $-methods","title":"Methods for function$ in package 'pcts' — $-methods","text":"Methods function$ package 'pcts'.","code":""},{"path":"https://geobosh.github.io/pcts/reference/zzdollar-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Methods for function$ in package 'pcts' — $-methods","text":"signature(x = \"PeriodicMTS\")","code":""},{"path":"https://geobosh.github.io/pcts/news/index.html","id":"version-0152-cran","dir":"Changelog","previous_headings":"","what":"Version 0.15.2 (CRAN)","title":"Version 0.15.2 (CRAN)","text":"CRAN release: 2022-01-12 now plot methods time series objects exported, work (stopped working due changes R 4.0). corrections typo’s minor tweaks documentation.","code":""},{"path":"https://geobosh.github.io/pcts/news/index.html","id":"version-015-cran","dir":"Changelog","previous_headings":"","what":"Version 0.15 (CRAN)","title":"Version 0.15 (CRAN)","text":"CRAN release: 2020-10-31","code":""},{"path":"https://geobosh.github.io/pcts/news/index.html","id":"user-visible-changes-0-15","dir":"Changelog","previous_headings":"","what":"User visible changes","title":"Version 0.15 (CRAN)","text":"vastly improved support dates/times. new generic pcIntercept. updated methods pcMean. pc_sdfactor now returns matrix also case maxlag = 0 (documented). pc.sdfactor renamed pc_sdfactor. pc.sdfactoris available deprecated. new function pc_mean. new dataset Fraser2017. pc_sum gets argument na.rm efficient implementation. new methods zoo::na.trim. new subset PAR models trigonometric parameterisation. now using datetime functions lubridate. Also reexportinglubridate::dateandlubridate::date<-`. first draft data vignette. added missing predict, residuals, fitted methods. improved pcTest(). included “nsadata.csv” package, currently internal data testing. Need description maybe better name exporting. Object datansa whole dataset, object nsaauto column “AUTOMOTIVEPRODNSA”. removed deprecated function ptildeorders(), use pdSafeParOrder() instead. removed class union “AnyTimeSeries”, use long time.","code":""},{"path":"https://geobosh.github.io/pcts/news/index.html","id":"bug-fixes-and-cleanup-0-15","dir":"Changelog","previous_headings":"","what":"Bug fixes and cleanup","title":"Version 0.15 (CRAN)","text":"fixed use suggested package comply CRAN policies test_piar(), now p-values set NA package fUnitRoots available message issued. Previously error thrown. removed package pear dependencies. consolidated dependencies. replaced wrong use .na() gbutils::isNA() suitable code. old code contained instances class(x) == something, now fixed. changed slightly Rd files rendered well pkgdown, e.g. move commented items ‘describe’ methods’ descriptions. extensive testing bug fixing.","code":""},{"path":"https://geobosh.github.io/pcts/news/index.html","id":"version-014-4-cran","dir":"Changelog","previous_headings":"","what":"Version 0.14-4 (CRAN)","title":"Version 0.14-4 (CRAN)","text":"CRAN release: 2020-02-16 fixed bug revealed changes R-devel circa start February 2020. related change variable names interactions produced lm(), see R-devel question: https://r.789695.n4.nabble.com/changed-names--lm--R-devel-td4761450.html). edited README.md reflect CRAN release package, since contained text meant pre-CRAN Github version .","code":""},{"path":"https://geobosh.github.io/pcts/news/index.html","id":"version-014-3-first-cran-version","dir":"Changelog","previous_headings":"","what":"Version 0.14-3 (first CRAN version)","title":"Version 0.14-3 (first CRAN version)","text":"CRAN release: 2020-01-09 now using exportClass export classes rather exportClassPattern lazy regexp.","code":""},{"path":"https://geobosh.github.io/pcts/news/index.html","id":"version-014-2","dir":"Changelog","previous_headings":"","what":"Version 0.14-2","title":"Version 0.14-2","text":"added example pclspiar edited DESCRIPTION comply CRAN policies.","code":""},{"path":"https://geobosh.github.io/pcts/news/index.html","id":"version-014-1","dir":"Changelog","previous_headings":"","what":"Version 0.14-1","title":"Version 0.14-1","text":"dropped comparisons “pear” since call “test-acf.R” failed.","code":""},{"path":"https://geobosh.github.io/pcts/news/index.html","id":"version-014-0","dir":"Changelog","previous_headings":"","what":"Version 0.14-0","title":"Version 0.14-0","text":"removed deprecated functions mCpar sim_arAcf. prepared release.","code":""},{"path":"https://geobosh.github.io/pcts/news/index.html","id":"version-013-0","dir":"Changelog","previous_headings":"","what":"Version 0.13-0","title":"Version 0.13-0","text":"replaced setIs, introduced v0.12-0 \"PeriodicAutocovariances\" related classes, direct inheritance. numerous changes, consolidations bug-fixes. particlar, updated periodic integrated seasonally integrated models, including fitPM().","code":""},{"path":"https://geobosh.github.io/pcts/news/index.html","id":"version-012-0","dir":"Changelog","previous_headings":"","what":"Version 0.12-0","title":"Version 0.12-0","text":"now require ‘lagged (>= 2.2)’ (new \"slMatrix\" method [[). now require ‘R (>= 3.5.0)’ (isFALSE). release require ‘R (>= 3.6.0)’ - point cater old versions R, given complete rework. partialAutocorrelations() new class ‘PartialPeriodicAutocorrelations’ class return default variances lag 0. initially case years ago changed cases. convention variances lag 0 keeps full information, equivalent parameterisation. TODO: Methods printing plotting may present differently. now first argument fitPM() model (swapped places first two arguments achieve ). consolidated PAR methods fitPM() use periodic time series classes. fitPM(), periodic time series classes convenient consider matrix, m representing periodic time series nrow(m) seasons (see pcMatrix()). Now dropping convention fitPM() - now throw error x matrix one column (future consider fitting multivariate PAR).","code":""},{"path":"https://geobosh.github.io/pcts/news/index.html","id":"version-011-0","dir":"Changelog","previous_headings":"","what":"Version 0.11-0","title":"Version 0.11-0","text":"wrapping v0.11-0 starting changes model classes related functionality. reference manual rendered org files printed 13 May 2019 final changes v0.11-0 (except note date DESCRIPTION). now periodic time series classes PeriodicTS PeriodicMTS less complete functionality. Methods defined number generics R base related time series. added slot pcstart class Cyclic number adjustements periodic time series classes use . redesigned pcCycle(), API convoluted. new function BultinCycle() creates instances builtin classes. now class \"BultinCycle\" virtual.","code":""},{"path":"https://geobosh.github.io/pcts/news/index.html","id":"version-010-0","dir":"Changelog","previous_headings":"","what":"Version 0.10-0","title":"Version 0.10-0","text":"consolidated time series anc cycle classes. registered periodic time series methods (S3) stats::monthplot() stats::boxplot().","code":""},{"path":"https://geobosh.github.io/pcts/news/index.html","id":"version-09-4","dir":"Changelog","previous_headings":"","what":"Version 0.9-4","title":"Version 0.9-4","text":"first version developed git. created git repo starting earliest available version adding available versions one one (one commit version). Finally added committed curent development directory clean-. starting work repo, changed version number 0.9-4 made commit. master branch branch time. fixed bug initialize() class \"SimpleCycle\" - logical length larger one multi-season nSeasons(). flagged error R-deve R 2.7-0 (April 2019). small edits documentation. R CMD check ---cran passes completely.","code":""},{"path":"https://geobosh.github.io/pcts/news/index.html","id":"version-09-2---093","dir":"Changelog","previous_headings":"","what":"Version 0.9-2 - 0.9.3","title":"Version 0.9-2 - 0.9.3","text":"consolidated autocovariance classes acf computations. bug fixes improvements.","code":""},{"path":"https://geobosh.github.io/pcts/news/index.html","id":"version-09-1","dir":"Changelog","previous_headings":"","what":"Version 0.9-1","title":"Version 0.9-1","text":"moved ‘slMatrix’ class function package ‘lagged’. moved also sl2acfbase(), acfbase2sl() sl2vecacf()package ‘lagged’ (file acfutils.R). renamed sim_arAcf() sim_parAcf(). fixed bug intercept2permean(). consolidated names simulation functions (now old names work deprecated.","code":""},{"path":"https://geobosh.github.io/pcts/news/index.html","id":"version-09-0","dir":"Changelog","previous_headings":"","what":"Version 0.9-0","title":"Version 0.9-0","text":"moving packages ‘methods’, ‘Matrix’, ‘mcompanion’ Depends Imports (‘sarima’ stays Depends, least now; maybe natural place). turned NEWS NEWS.md. removed unnecessary (unused) argument lag_0 filterPoly() methods classes “PeriodicBJFilter” “PeriodicSPFilter”.","code":""},{"path":"https://geobosh.github.io/pcts/news/index.html","id":"version-08-1","dir":"Changelog","previous_headings":"","what":"Version 0.8-1","title":"Version 0.8-1","text":"changed classes coordinating ‘pcts’ ‘sarima’.","code":""},{"path":"https://geobosh.github.io/pcts/news/index.html","id":"version-08-0","dir":"Changelog","previous_headings":"","what":"Version 0.8-0","title":"Version 0.8-0","text":"consolidating moving stationary stuff ‘sarima’ ‘lagged’ (moving ).","code":""},{"path":"https://geobosh.github.io/pcts/news/index.html","id":"version-07-2","dir":"Changelog","previous_headings":"","what":"Version 0.7-2","title":"Version 0.7-2","text":"Redeveloped classes fitted models ().","code":""},{"path":"https://geobosh.github.io/pcts/news/index.html","id":"version-07-1","dir":"Changelog","previous_headings":"","what":"Version 0.7-1","title":"Version 0.7-1","text":"Package working ; R CMD check completes WARNINGs NOTEs. (---cran gives two NOTEs: - mcompanion CRAN, - non-standard files root directory). Revamped model classes. time series classes Version 0.7-0. number R files now generated ’*.org’ sources (started 0.7-0).","code":""},{"path":"https://geobosh.github.io/pcts/news/index.html","id":"version-07-0","dir":"Changelog","previous_headings":"","what":"Version 0.7-0","title":"Version 0.7-0","text":"version left non-working state. Discarded revamp, convoluted. Total revamp classes.","code":""},{"path":"https://geobosh.github.io/pcts/news/index.html","id":"version-06-x","dir":"Changelog","previous_headings":"","what":"Version 0.6-x","title":"Version 0.6-x","text":"new classes cumbersome, abandon . Unfinished, last version series work properly. programming ideas interesting future reference. consolidated cycle classes. removed now obsolete class “pc.Model.WeaklyStat” removed obsolete pc.xxx functions stopped exporting pc.xxx functions moved ther documentation “TechicalDoc/Rd_old”. exported, change names consistently current conventions. removed class “sVector” (superseded “PeriodicVector”). changed significantly cycle classses. removed entirely replace method nSeasons since doesn’t make sense.","code":""},{"path":"https://geobosh.github.io/pcts/news/index.html","id":"version-05-x","dir":"Changelog","previous_headings":"","what":"Version 0.5-x","title":"Version 0.5-x","text":"removed old classes made obsolete revamped ones. removed dependency pctsData. now IMPORT:-ing ‘stats4’ (currently S4 plot) added documentation revamped classes functions - complete yet passes R CMD check without warnings/notes.","code":""},{"path":"https://geobosh.github.io/pcts/news/index.html","id":"version-04-2","dir":"Changelog","previous_headings":"","what":"Version 0.4-2","title":"Version 0.4-2","text":"new classes periodic models complete consolidated. renamed pc.maxlag() maxLag(). numerous changes additions.","code":""},{"path":"https://geobosh.github.io/pcts/news/index.html","id":"version-04-1","dir":"Changelog","previous_headings":"","what":"Version 0.4-1","title":"Version 0.4-1","text":"pc.nseasons() now obsolete - longer imported pcData defined call nSeasons().","code":""},{"path":"https://geobosh.github.io/pcts/news/index.html","id":"version-04-0","dir":"Changelog","previous_headings":"","what":"Version 0.4-0","title":"Version 0.4-0","text":"partial consolidation “slMatrix” - code 2006-2007 occasional patches. mass renaming consistent names (code 2007 earlier underscore admissible names), new pc time series classes new argument ‘nseasons’ pc_test; renamed argument ‘model’ ‘nullmodel’. renamed pc_test pcTest. renamed pcAcf pcAcvf - acf universally used autocorrelations now import “zoo”. now import “ltsa” (McLeod et al). many changes - new classes, consolidations. changing new version making changes eliminate package pcData.","code":""},{"path":"https://geobosh.github.io/pcts/news/index.html","id":"version-03-4","dir":"Changelog","previous_headings":"","what":"Version 0.3-4","title":"Version 0.3-4","text":"Don’t know changes 0.3-3 packing synchronising changes package ‘mcompanion’ 0.2-11 0.3-1.","code":""},{"path":"https://geobosh.github.io/pcts/news/index.html","id":"version-03-3","dir":"Changelog","previous_headings":"","what":"Version 0.3-3","title":"Version 0.3-3","text":"pclsdf giving warning length residuals non-multiple number seasons, computing innovation variances. formula construction pclsdf somewhat cleaned .","code":""},{"path":"https://geobosh.github.io/pcts/news/index.html","id":"version-03-2","dir":"Changelog","previous_headings":"","what":"Version 0.3-2","title":"Version 0.3-2","text":"now classes fitted models. num2pcpar now returns list ‘result’ NULL PAR coefficients otherwise (used look argument ‘mean’ decide , now gives error ‘mean’ invalid). matcovlist now argument “result” can return matrix.","code":""},{"path":"https://geobosh.github.io/pcts/news/index.html","id":"version-03-0","dir":"Changelog","previous_headings":"","what":"Version 0.3-0","title":"Version 0.3-0","text":"Create new package pctsData move stuff reduce clutter “pcts”. now make “pcts” depend “pctsData” idea eventually drop dependance, since much stuff put redundant. (fact, eventually dependance may way round (“pctsData” depending “pcts” needing compatibility). modified xx.ss similar use subspace parameterisation core vectors. Partially implemented. Works version 0.2-6 “mcompanion”.","code":""},{"path":"https://geobosh.github.io/pcts/news/index.html","id":"version-02-4","dir":"Changelog","previous_headings":"","what":"Version 0.2-4","title":"Version 0.2-4","text":"new argument ‘len.block’ xx.ss; corresponding changes mC.ss. xx.ss - meaningful processing initial values. export “[” S3 method signature ‘sVector’. index pcts-package now topic. changes documentation.","code":""},{"path":"https://geobosh.github.io/pcts/news/index.html","id":"version-02-3","dir":"Changelog","previous_headings":"","what":"Version 0.2-3","title":"Version 0.2-3","text":"Corrections additions pcls.R. import “pad” (now merged “gbutils”).","code":""},{"path":"https://geobosh.github.io/pcts/news/index.html","id":"version-02-2","dir":"Changelog","previous_headings":"","what":"Version 0.2-2","title":"Version 0.2-2","text":"retired pc.armafilter pc.filter (long overdue). Existing calls pc.filter.arma can simply replaced calls pc.filter.xarma. Calls pc.armafilter can replaced calls pc.filter addition argument ‘model’ named since pc.filter first argument, pc.armafilter third.","code":""},{"path":"https://geobosh.github.io/pcts/news/index.html","id":"version-02-0","dir":"Changelog","previous_headings":"","what":"Version 0.2-0","title":"Version 0.2-0","text":"started updating time series classes. bug pc.filter: failed change sign intercept nintercept whiten = TRUE, giving wrong results case non-zero intercepts. removed bugs","code":""},{"path":"https://geobosh.github.io/pcts/news/index.html","id":"version-03-10","dir":"Changelog","previous_headings":"","what":"Version 0.3-10","title":"Version 0.3-10","text":"removed experimental estimation functions whose place package.","code":""},{"path":"https://geobosh.github.io/pcts/news/index.html","id":"version-03-9","dir":"Changelog","previous_headings":"","what":"Version 0.3-9","title":"Version 0.3-9","text":"last version starting clean consolidate package. lot stuff goes back 2006-2007 even 2003.","code":""}]
